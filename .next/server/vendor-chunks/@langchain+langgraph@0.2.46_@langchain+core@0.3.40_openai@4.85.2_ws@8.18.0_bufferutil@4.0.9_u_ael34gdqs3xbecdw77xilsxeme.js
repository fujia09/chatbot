"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme";
exports.ids = ["vendor-chunks/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseChannel: () => (/* binding */ BaseChannel),\n/* harmony export */   createCheckpoint: () => (/* binding */ createCheckpoint),\n/* harmony export */   emptyChannels: () => (/* binding */ emptyChannels),\n/* harmony export */   isBaseChannel: () => (/* binding */ isBaseChannel)\n/* harmony export */ });\n/* harmony import */ var _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/langgraph-checkpoint */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph-checkpoint@0.0.15_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferu_wxyqc73w5wk4lx2cfu5zaddqqi/node_modules/@langchain/langgraph-checkpoint/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n\n\nfunction isBaseChannel(obj) {\n    return obj != null && obj.lg_is_channel === true;\n}\nclass BaseChannel {\n    constructor() {\n        Object.defineProperty(this, \"ValueType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"UpdateType\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @ignore */\n        Object.defineProperty(this, \"lg_is_channel\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    /**\n     * Mark the current value of the channel as consumed. By default, no-op.\n     * This is called by Pregel before the start of the next step, for all\n     * channels that triggered a node. If the channel was updated, return true.\n     */\n    consume() {\n        return false;\n    }\n}\nfunction emptyChannels(channels, checkpoint) {\n    const filteredChannels = Object.fromEntries(Object.entries(channels).filter(([, value]) => isBaseChannel(value)));\n    const newChannels = {};\n    for (const k in filteredChannels) {\n        if (Object.prototype.hasOwnProperty.call(filteredChannels, k)) {\n            const channelValue = checkpoint.channel_values[k];\n            newChannels[k] = filteredChannels[k].fromCheckpoint(channelValue);\n        }\n    }\n    return newChannels;\n}\nfunction createCheckpoint(checkpoint, channels, step) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let values;\n    if (channels === undefined) {\n        values = checkpoint.channel_values;\n    }\n    else {\n        values = {};\n        for (const k of Object.keys(channels)) {\n            try {\n                values[k] = channels[k].checkpoint();\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (error) {\n                if (error.name === _errors_js__WEBPACK_IMPORTED_MODULE_1__.EmptyChannelError.unminifiable_name) {\n                    // no-op\n                }\n                else {\n                    throw error; // Rethrow unexpected errors\n                }\n            }\n        }\n    }\n    return {\n        v: 1,\n        id: (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__.uuid6)(step),\n        ts: new Date().toISOString(),\n        channel_values: values,\n        channel_versions: { ...checkpoint.channel_versions },\n        versions_seen: (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__.deepCopy)(checkpoint.versions_seen),\n        pending_sends: checkpoint.pending_sends ?? [],\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2NoYW5uZWxzL2Jhc2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQW1FO0FBQ2xCO0FBQzFDO0FBQ1A7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQ0FBbUMseURBQWlCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQztBQUNqQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxZQUFZLHNFQUFLO0FBQ2pCO0FBQ0E7QUFDQSw0QkFBNEIsZ0NBQWdDO0FBQzVELHVCQUF1Qix5RUFBUTtBQUMvQjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvY2hhbm5lbHMvYmFzZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBkZWVwQ29weSwgdXVpZDYsIH0gZnJvbSBcIkBsYW5nY2hhaW4vbGFuZ2dyYXBoLWNoZWNrcG9pbnRcIjtcbmltcG9ydCB7IEVtcHR5Q2hhbm5lbEVycm9yIH0gZnJvbSBcIi4uL2Vycm9ycy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGlzQmFzZUNoYW5uZWwob2JqKSB7XG4gICAgcmV0dXJuIG9iaiAhPSBudWxsICYmIG9iai5sZ19pc19jaGFubmVsID09PSB0cnVlO1xufVxuZXhwb3J0IGNsYXNzIEJhc2VDaGFubmVsIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiVmFsdWVUeXBlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIlVwZGF0ZVR5cGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgLyoqIEBpZ25vcmUgKi9cbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGdfaXNfY2hhbm5lbFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdHJ1ZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogTWFyayB0aGUgY3VycmVudCB2YWx1ZSBvZiB0aGUgY2hhbm5lbCBhcyBjb25zdW1lZC4gQnkgZGVmYXVsdCwgbm8tb3AuXG4gICAgICogVGhpcyBpcyBjYWxsZWQgYnkgUHJlZ2VsIGJlZm9yZSB0aGUgc3RhcnQgb2YgdGhlIG5leHQgc3RlcCwgZm9yIGFsbFxuICAgICAqIGNoYW5uZWxzIHRoYXQgdHJpZ2dlcmVkIGEgbm9kZS4gSWYgdGhlIGNoYW5uZWwgd2FzIHVwZGF0ZWQsIHJldHVybiB0cnVlLlxuICAgICAqL1xuICAgIGNvbnN1bWUoKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gZW1wdHlDaGFubmVscyhjaGFubmVscywgY2hlY2twb2ludCkge1xuICAgIGNvbnN0IGZpbHRlcmVkQ2hhbm5lbHMgPSBPYmplY3QuZnJvbUVudHJpZXMoT2JqZWN0LmVudHJpZXMoY2hhbm5lbHMpLmZpbHRlcigoWywgdmFsdWVdKSA9PiBpc0Jhc2VDaGFubmVsKHZhbHVlKSkpO1xuICAgIGNvbnN0IG5ld0NoYW5uZWxzID0ge307XG4gICAgZm9yIChjb25zdCBrIGluIGZpbHRlcmVkQ2hhbm5lbHMpIHtcbiAgICAgICAgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChmaWx0ZXJlZENoYW5uZWxzLCBrKSkge1xuICAgICAgICAgICAgY29uc3QgY2hhbm5lbFZhbHVlID0gY2hlY2twb2ludC5jaGFubmVsX3ZhbHVlc1trXTtcbiAgICAgICAgICAgIG5ld0NoYW5uZWxzW2tdID0gZmlsdGVyZWRDaGFubmVsc1trXS5mcm9tQ2hlY2twb2ludChjaGFubmVsVmFsdWUpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBuZXdDaGFubmVscztcbn1cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDaGVja3BvaW50KGNoZWNrcG9pbnQsIGNoYW5uZWxzLCBzdGVwKSB7XG4gICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICBsZXQgdmFsdWVzO1xuICAgIGlmIChjaGFubmVscyA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIHZhbHVlcyA9IGNoZWNrcG9pbnQuY2hhbm5lbF92YWx1ZXM7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB2YWx1ZXMgPSB7fTtcbiAgICAgICAgZm9yIChjb25zdCBrIG9mIE9iamVjdC5rZXlzKGNoYW5uZWxzKSkge1xuICAgICAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgICAgICB2YWx1ZXNba10gPSBjaGFubmVsc1trXS5jaGVja3BvaW50KCk7XG4gICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgIGlmIChlcnJvci5uYW1lID09PSBFbXB0eUNoYW5uZWxFcnJvci51bm1pbmlmaWFibGVfbmFtZSkge1xuICAgICAgICAgICAgICAgICAgICAvLyBuby1vcFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhyb3cgZXJyb3I7IC8vIFJldGhyb3cgdW5leHBlY3RlZCBlcnJvcnNcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdjogMSxcbiAgICAgICAgaWQ6IHV1aWQ2KHN0ZXApLFxuICAgICAgICB0czogbmV3IERhdGUoKS50b0lTT1N0cmluZygpLFxuICAgICAgICBjaGFubmVsX3ZhbHVlczogdmFsdWVzLFxuICAgICAgICBjaGFubmVsX3ZlcnNpb25zOiB7IC4uLmNoZWNrcG9pbnQuY2hhbm5lbF92ZXJzaW9ucyB9LFxuICAgICAgICB2ZXJzaW9uc19zZWVuOiBkZWVwQ29weShjaGVja3BvaW50LnZlcnNpb25zX3NlZW4pLFxuICAgICAgICBwZW5kaW5nX3NlbmRzOiBjaGVja3BvaW50LnBlbmRpbmdfc2VuZHMgPz8gW10sXG4gICAgfTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/binop.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/binop.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BinaryOperatorAggregate: () => (/* binding */ BinaryOperatorAggregate)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js\");\n\n\n/**\n * Stores the result of applying a binary operator to the current value and each new value.\n */\nclass BinaryOperatorAggregate extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChannel {\n    constructor(operator, initialValueFactory) {\n        super();\n        Object.defineProperty(this, \"lc_graph_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"BinaryOperatorAggregate\"\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"operator\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"initialValueFactory\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.operator = operator;\n        this.initialValueFactory = initialValueFactory;\n        this.value = initialValueFactory?.();\n    }\n    fromCheckpoint(checkpoint) {\n        const empty = new BinaryOperatorAggregate(this.operator, this.initialValueFactory);\n        if (checkpoint) {\n            empty.value = checkpoint;\n        }\n        return empty;\n    }\n    update(values) {\n        let newValues = values;\n        if (!newValues.length)\n            return false;\n        if (this.value === undefined) {\n            [this.value] = newValues;\n            newValues = newValues.slice(1);\n        }\n        for (const value of newValues) {\n            if (this.value !== undefined) {\n                this.value = this.operator(this.value, value);\n            }\n        }\n        return true;\n    }\n    get() {\n        if (this.value === undefined) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.EmptyChannelError();\n        }\n        return this.value;\n    }\n    checkpoint() {\n        if (this.value === undefined) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.EmptyChannelError();\n        }\n        return this.value;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2NoYW5uZWxzL2Jpbm9wLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFpRDtBQUNUO0FBQ3hDO0FBQ0E7QUFDQTtBQUNPLHNDQUFzQyxpREFBVztBQUN4RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvY2hhbm5lbHMvYmlub3AuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRW1wdHlDaGFubmVsRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzLmpzXCI7XG5pbXBvcnQgeyBCYXNlQ2hhbm5lbCB9IGZyb20gXCIuL2Jhc2UuanNcIjtcbi8qKlxuICogU3RvcmVzIHRoZSByZXN1bHQgb2YgYXBwbHlpbmcgYSBiaW5hcnkgb3BlcmF0b3IgdG8gdGhlIGN1cnJlbnQgdmFsdWUgYW5kIGVhY2ggbmV3IHZhbHVlLlxuICovXG5leHBvcnQgY2xhc3MgQmluYXJ5T3BlcmF0b3JBZ2dyZWdhdGUgZXh0ZW5kcyBCYXNlQ2hhbm5lbCB7XG4gICAgY29uc3RydWN0b3Iob3BlcmF0b3IsIGluaXRpYWxWYWx1ZUZhY3RvcnkpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfZ3JhcGhfbmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJCaW5hcnlPcGVyYXRvckFnZ3JlZ2F0ZVwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ2YWx1ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJvcGVyYXRvclwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbml0aWFsVmFsdWVGYWN0b3J5XCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMub3BlcmF0b3IgPSBvcGVyYXRvcjtcbiAgICAgICAgdGhpcy5pbml0aWFsVmFsdWVGYWN0b3J5ID0gaW5pdGlhbFZhbHVlRmFjdG9yeTtcbiAgICAgICAgdGhpcy52YWx1ZSA9IGluaXRpYWxWYWx1ZUZhY3Rvcnk/LigpO1xuICAgIH1cbiAgICBmcm9tQ2hlY2twb2ludChjaGVja3BvaW50KSB7XG4gICAgICAgIGNvbnN0IGVtcHR5ID0gbmV3IEJpbmFyeU9wZXJhdG9yQWdncmVnYXRlKHRoaXMub3BlcmF0b3IsIHRoaXMuaW5pdGlhbFZhbHVlRmFjdG9yeSk7XG4gICAgICAgIGlmIChjaGVja3BvaW50KSB7XG4gICAgICAgICAgICBlbXB0eS52YWx1ZSA9IGNoZWNrcG9pbnQ7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVtcHR5O1xuICAgIH1cbiAgICB1cGRhdGUodmFsdWVzKSB7XG4gICAgICAgIGxldCBuZXdWYWx1ZXMgPSB2YWx1ZXM7XG4gICAgICAgIGlmICghbmV3VmFsdWVzLmxlbmd0aClcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgaWYgKHRoaXMudmFsdWUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgW3RoaXMudmFsdWVdID0gbmV3VmFsdWVzO1xuICAgICAgICAgICAgbmV3VmFsdWVzID0gbmV3VmFsdWVzLnNsaWNlKDEpO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgdmFsdWUgb2YgbmV3VmFsdWVzKSB7XG4gICAgICAgICAgICBpZiAodGhpcy52YWx1ZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICAgICAgdGhpcy52YWx1ZSA9IHRoaXMub3BlcmF0b3IodGhpcy52YWx1ZSwgdmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBnZXQoKSB7XG4gICAgICAgIGlmICh0aGlzLnZhbHVlID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFbXB0eUNoYW5uZWxFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlO1xuICAgIH1cbiAgICBjaGVja3BvaW50KCkge1xuICAgICAgICBpZiAodGhpcy52YWx1ZSA9PT0gdW5kZWZpbmVkKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRW1wdHlDaGFubmVsRXJyb3IoKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdGhpcy52YWx1ZTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/binop.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/ephemeral_value.js":
/*!************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/ephemeral_value.js ***!
  \************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   EphemeralValue: () => (/* binding */ EphemeralValue)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/index.js\");\n\n\n/**\n * Stores the value received in the step immediately preceding, clears after.\n * @internal\n */\nclass EphemeralValue extends _index_js__WEBPACK_IMPORTED_MODULE_1__.BaseChannel {\n    constructor(guard = true) {\n        super();\n        Object.defineProperty(this, \"lc_graph_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"EphemeralValue\"\n        });\n        Object.defineProperty(this, \"guard\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // value is an array so we don't misinterpret an update to undefined as no write\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.guard = guard;\n    }\n    fromCheckpoint(checkpoint) {\n        const empty = new EphemeralValue(this.guard);\n        if (checkpoint) {\n            empty.value = [checkpoint];\n        }\n        return empty;\n    }\n    update(values) {\n        if (values.length === 0) {\n            const updated = this.value.length > 0;\n            // If there are no updates for this specific channel at the end of the step, wipe it.\n            this.value = [];\n            return updated;\n        }\n        if (values.length !== 1 && this.guard) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidUpdateError(\"EphemeralValue can only receive one value per step.\");\n        }\n        // eslint-disable-next-line prefer-destructuring\n        this.value = [values[values.length - 1]];\n        return true;\n    }\n    get() {\n        if (this.value.length === 0) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.EmptyChannelError();\n        }\n        return this.value[0];\n    }\n    checkpoint() {\n        if (this.value.length === 0) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.EmptyChannelError();\n        }\n        return this.value[0];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2NoYW5uZWxzL2VwaGVtZXJhbF92YWx1ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBcUU7QUFDNUI7QUFDekM7QUFDQTtBQUNBO0FBQ0E7QUFDTyw2QkFBNkIsa0RBQVc7QUFDL0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwREFBa0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseURBQWlCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseURBQWlCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2NoYW5uZWxzL2VwaGVtZXJhbF92YWx1ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbXB0eUNoYW5uZWxFcnJvciwgSW52YWxpZFVwZGF0ZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9ycy5qc1wiO1xuaW1wb3J0IHsgQmFzZUNoYW5uZWwgfSBmcm9tIFwiLi9pbmRleC5qc1wiO1xuLyoqXG4gKiBTdG9yZXMgdGhlIHZhbHVlIHJlY2VpdmVkIGluIHRoZSBzdGVwIGltbWVkaWF0ZWx5IHByZWNlZGluZywgY2xlYXJzIGFmdGVyLlxuICogQGludGVybmFsXG4gKi9cbmV4cG9ydCBjbGFzcyBFcGhlbWVyYWxWYWx1ZSBleHRlbmRzIEJhc2VDaGFubmVsIHtcbiAgICBjb25zdHJ1Y3RvcihndWFyZCA9IHRydWUpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfZ3JhcGhfbmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJFcGhlbWVyYWxWYWx1ZVwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJndWFyZFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICAvLyB2YWx1ZSBpcyBhbiBhcnJheSBzbyB3ZSBkb24ndCBtaXNpbnRlcnByZXQgYW4gdXBkYXRlIHRvIHVuZGVmaW5lZCBhcyBubyB3cml0ZVxuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ2YWx1ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW11cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZ3VhcmQgPSBndWFyZDtcbiAgICB9XG4gICAgZnJvbUNoZWNrcG9pbnQoY2hlY2twb2ludCkge1xuICAgICAgICBjb25zdCBlbXB0eSA9IG5ldyBFcGhlbWVyYWxWYWx1ZSh0aGlzLmd1YXJkKTtcbiAgICAgICAgaWYgKGNoZWNrcG9pbnQpIHtcbiAgICAgICAgICAgIGVtcHR5LnZhbHVlID0gW2NoZWNrcG9pbnRdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBlbXB0eTtcbiAgICB9XG4gICAgdXBkYXRlKHZhbHVlcykge1xuICAgICAgICBpZiAodmFsdWVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgY29uc3QgdXBkYXRlZCA9IHRoaXMudmFsdWUubGVuZ3RoID4gMDtcbiAgICAgICAgICAgIC8vIElmIHRoZXJlIGFyZSBubyB1cGRhdGVzIGZvciB0aGlzIHNwZWNpZmljIGNoYW5uZWwgYXQgdGhlIGVuZCBvZiB0aGUgc3RlcCwgd2lwZSBpdC5cbiAgICAgICAgICAgIHRoaXMudmFsdWUgPSBbXTtcbiAgICAgICAgICAgIHJldHVybiB1cGRhdGVkO1xuICAgICAgICB9XG4gICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoICE9PSAxICYmIHRoaXMuZ3VhcmQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkVXBkYXRlRXJyb3IoXCJFcGhlbWVyYWxWYWx1ZSBjYW4gb25seSByZWNlaXZlIG9uZSB2YWx1ZSBwZXIgc3RlcC5cIik7XG4gICAgICAgIH1cbiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIHByZWZlci1kZXN0cnVjdHVyaW5nXG4gICAgICAgIHRoaXMudmFsdWUgPSBbdmFsdWVzW3ZhbHVlcy5sZW5ndGggLSAxXV07XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBnZXQoKSB7XG4gICAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVtcHR5Q2hhbm5lbEVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWVbMF07XG4gICAgfVxuICAgIGNoZWNrcG9pbnQoKSB7XG4gICAgICAgIGlmICh0aGlzLnZhbHVlLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVtcHR5Q2hhbm5lbEVycm9yKCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHRoaXMudmFsdWVbMF07XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/ephemeral_value.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/index.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/index.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseChannel: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChannel),\n/* harmony export */   BinaryOperatorAggregate: () => (/* reexport safe */ _binop_js__WEBPACK_IMPORTED_MODULE_1__.BinaryOperatorAggregate),\n/* harmony export */   createCheckpoint: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.createCheckpoint),\n/* harmony export */   empty: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.emptyChannels)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js\");\n/* harmony import */ var _binop_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./binop.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/binop.js\");\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2NoYW5uZWxzL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OztBQUFtRjtBQUM5QiIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL0BsYW5nY2hhaW4rbGFuZ2dyYXBoQDAuMi40Nl9AbGFuZ2NoYWluK2NvcmVAMC4zLjQwX29wZW5haUA0Ljg1LjJfd3NAOC4xOC4wX2J1ZmZlcnV0aWxANC4wLjlfdV9hZWwzNGdkcXMzeGJlY2R3Nzd4aWxzeGVtZS9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9sYW5nZ3JhcGgvZGlzdC9jaGFubmVscy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBCYXNlQ2hhbm5lbCwgY3JlYXRlQ2hlY2twb2ludCwgZW1wdHlDaGFubmVscyBhcyBlbXB0eSwgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG5leHBvcnQgeyBCaW5hcnlPcGVyYXRvckFnZ3JlZ2F0ZSB9IGZyb20gXCIuL2Jpbm9wLmpzXCI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/last_value.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/last_value.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LastValue: () => (/* binding */ LastValue)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js\");\n\n\n/**\n * Stores the last value received, can receive at most one value per step.\n *\n * Since `update` is only called once per step and value can only be of length 1,\n * LastValue always stores the last value of a single node. If multiple nodes attempt to\n * write to this channel in a single step, an error will be thrown.\n * @internal\n */\nclass LastValue extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChannel {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_graph_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"LastValue\"\n        });\n        // value is an array so we don't misinterpret an update to undefined as no write\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n    }\n    fromCheckpoint(checkpoint) {\n        const empty = new LastValue();\n        if (checkpoint) {\n            empty.value = [checkpoint];\n        }\n        return empty;\n    }\n    update(values) {\n        if (values.length === 0) {\n            return false;\n        }\n        if (values.length !== 1) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidUpdateError(\"LastValue can only receive one value per step.\", {\n                lc_error_code: \"INVALID_CONCURRENT_GRAPH_UPDATE\",\n            });\n        }\n        // eslint-disable-next-line prefer-destructuring\n        this.value = [values[values.length - 1]];\n        return true;\n    }\n    get() {\n        if (this.value.length === 0) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.EmptyChannelError();\n        }\n        return this.value[0];\n    }\n    checkpoint() {\n        if (this.value.length === 0) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.EmptyChannelError();\n        }\n        return this.value[0];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2NoYW5uZWxzL2xhc3RfdmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQXFFO0FBQzdCO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTyx3QkFBd0IsaURBQVc7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esc0JBQXNCLDBEQUFrQjtBQUN4QztBQUNBLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQix5REFBaUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvY2hhbm5lbHMvbGFzdF92YWx1ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbXB0eUNoYW5uZWxFcnJvciwgSW52YWxpZFVwZGF0ZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9ycy5qc1wiO1xuaW1wb3J0IHsgQmFzZUNoYW5uZWwgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG4vKipcbiAqIFN0b3JlcyB0aGUgbGFzdCB2YWx1ZSByZWNlaXZlZCwgY2FuIHJlY2VpdmUgYXQgbW9zdCBvbmUgdmFsdWUgcGVyIHN0ZXAuXG4gKlxuICogU2luY2UgYHVwZGF0ZWAgaXMgb25seSBjYWxsZWQgb25jZSBwZXIgc3RlcCBhbmQgdmFsdWUgY2FuIG9ubHkgYmUgb2YgbGVuZ3RoIDEsXG4gKiBMYXN0VmFsdWUgYWx3YXlzIHN0b3JlcyB0aGUgbGFzdCB2YWx1ZSBvZiBhIHNpbmdsZSBub2RlLiBJZiBtdWx0aXBsZSBub2RlcyBhdHRlbXB0IHRvXG4gKiB3cml0ZSB0byB0aGlzIGNoYW5uZWwgaW4gYSBzaW5nbGUgc3RlcCwgYW4gZXJyb3Igd2lsbCBiZSB0aHJvd24uXG4gKiBAaW50ZXJuYWxcbiAqL1xuZXhwb3J0IGNsYXNzIExhc3RWYWx1ZSBleHRlbmRzIEJhc2VDaGFubmVsIHtcbiAgICBjb25zdHJ1Y3RvcigpIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfZ3JhcGhfbmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJMYXN0VmFsdWVcIlxuICAgICAgICB9KTtcbiAgICAgICAgLy8gdmFsdWUgaXMgYW4gYXJyYXkgc28gd2UgZG9uJ3QgbWlzaW50ZXJwcmV0IGFuIHVwZGF0ZSB0byB1bmRlZmluZWQgYXMgbm8gd3JpdGVcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidmFsdWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFtdXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBmcm9tQ2hlY2twb2ludChjaGVja3BvaW50KSB7XG4gICAgICAgIGNvbnN0IGVtcHR5ID0gbmV3IExhc3RWYWx1ZSgpO1xuICAgICAgICBpZiAoY2hlY2twb2ludCkge1xuICAgICAgICAgICAgZW1wdHkudmFsdWUgPSBbY2hlY2twb2ludF07XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGVtcHR5O1xuICAgIH1cbiAgICB1cGRhdGUodmFsdWVzKSB7XG4gICAgICAgIGlmICh2YWx1ZXMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHZhbHVlcy5sZW5ndGggIT09IDEpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBJbnZhbGlkVXBkYXRlRXJyb3IoXCJMYXN0VmFsdWUgY2FuIG9ubHkgcmVjZWl2ZSBvbmUgdmFsdWUgcGVyIHN0ZXAuXCIsIHtcbiAgICAgICAgICAgICAgICBsY19lcnJvcl9jb2RlOiBcIklOVkFMSURfQ09OQ1VSUkVOVF9HUkFQSF9VUERBVEVcIixcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBwcmVmZXItZGVzdHJ1Y3R1cmluZ1xuICAgICAgICB0aGlzLnZhbHVlID0gW3ZhbHVlc1t2YWx1ZXMubGVuZ3RoIC0gMV1dO1xuICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG4gICAgZ2V0KCkge1xuICAgICAgICBpZiAodGhpcy52YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFbXB0eUNoYW5uZWxFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlWzBdO1xuICAgIH1cbiAgICBjaGVja3BvaW50KCkge1xuICAgICAgICBpZiAodGhpcy52YWx1ZS5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFbXB0eUNoYW5uZWxFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0aGlzLnZhbHVlWzBdO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/last_value.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/named_barrier_value.js":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/named_barrier_value.js ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NamedBarrierValue: () => (/* binding */ NamedBarrierValue),\n/* harmony export */   areSetsEqual: () => (/* binding */ areSetsEqual)\n/* harmony export */ });\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js\");\n\n\nconst areSetsEqual = (a, b) => a.size === b.size && [...a].every((value) => b.has(value));\n/**\n * A channel that waits until all named values are received before making the value available.\n *\n * This ensures that if node N and node M both write to channel C, the value of C will not be updated\n * until N and M have completed updating.\n * @internal\n */\nclass NamedBarrierValue extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChannel {\n    constructor(names) {\n        super();\n        Object.defineProperty(this, \"lc_graph_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"NamedBarrierValue\"\n        });\n        Object.defineProperty(this, \"names\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        }); // Names of nodes that we want to wait for.\n        Object.defineProperty(this, \"seen\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.names = names;\n        this.seen = new Set();\n    }\n    fromCheckpoint(checkpoint) {\n        const empty = new NamedBarrierValue(this.names);\n        if (checkpoint) {\n            empty.seen = new Set(checkpoint);\n        }\n        return empty;\n    }\n    update(values) {\n        let updated = false;\n        for (const nodeName of values) {\n            if (this.names.has(nodeName)) {\n                if (!this.seen.has(nodeName)) {\n                    this.seen.add(nodeName);\n                    updated = true;\n                }\n            }\n            else {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.InvalidUpdateError(`Value ${JSON.stringify(nodeName)} not in names ${JSON.stringify(this.names)}`);\n            }\n        }\n        return updated;\n    }\n    // If we have not yet seen all the node names we want to wait for,\n    // throw an error to prevent continuing.\n    get() {\n        if (!areSetsEqual(this.names, this.seen)) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_0__.EmptyChannelError();\n        }\n        return undefined;\n    }\n    checkpoint() {\n        return [...this.seen];\n    }\n    consume() {\n        if (this.seen && this.names && areSetsEqual(this.seen, this.names)) {\n            this.seen = new Set();\n            return true;\n        }\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2NoYW5uZWxzL25hbWVkX2JhcnJpZXJfdmFsdWUuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFxRTtBQUM3QjtBQUNqQztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDLGlEQUFXO0FBQ2xEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTLEdBQUc7QUFDWjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBMEIsMERBQWtCLFVBQVUsMEJBQTBCLGVBQWUsMkJBQTJCO0FBQzFIO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IseURBQWlCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvY2hhbm5lbHMvbmFtZWRfYmFycmllcl92YWx1ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFbXB0eUNoYW5uZWxFcnJvciwgSW52YWxpZFVwZGF0ZUVycm9yIH0gZnJvbSBcIi4uL2Vycm9ycy5qc1wiO1xuaW1wb3J0IHsgQmFzZUNoYW5uZWwgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG5leHBvcnQgY29uc3QgYXJlU2V0c0VxdWFsID0gKGEsIGIpID0+IGEuc2l6ZSA9PT0gYi5zaXplICYmIFsuLi5hXS5ldmVyeSgodmFsdWUpID0+IGIuaGFzKHZhbHVlKSk7XG4vKipcbiAqIEEgY2hhbm5lbCB0aGF0IHdhaXRzIHVudGlsIGFsbCBuYW1lZCB2YWx1ZXMgYXJlIHJlY2VpdmVkIGJlZm9yZSBtYWtpbmcgdGhlIHZhbHVlIGF2YWlsYWJsZS5cbiAqXG4gKiBUaGlzIGVuc3VyZXMgdGhhdCBpZiBub2RlIE4gYW5kIG5vZGUgTSBib3RoIHdyaXRlIHRvIGNoYW5uZWwgQywgdGhlIHZhbHVlIG9mIEMgd2lsbCBub3QgYmUgdXBkYXRlZFxuICogdW50aWwgTiBhbmQgTSBoYXZlIGNvbXBsZXRlZCB1cGRhdGluZy5cbiAqIEBpbnRlcm5hbFxuICovXG5leHBvcnQgY2xhc3MgTmFtZWRCYXJyaWVyVmFsdWUgZXh0ZW5kcyBCYXNlQ2hhbm5lbCB7XG4gICAgY29uc3RydWN0b3IobmFtZXMpIHtcbiAgICAgICAgc3VwZXIoKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfZ3JhcGhfbmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJOYW1lZEJhcnJpZXJWYWx1ZVwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pOyAvLyBOYW1lcyBvZiBub2RlcyB0aGF0IHdlIHdhbnQgdG8gd2FpdCBmb3IuXG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNlZW5cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy5uYW1lcyA9IG5hbWVzO1xuICAgICAgICB0aGlzLnNlZW4gPSBuZXcgU2V0KCk7XG4gICAgfVxuICAgIGZyb21DaGVja3BvaW50KGNoZWNrcG9pbnQpIHtcbiAgICAgICAgY29uc3QgZW1wdHkgPSBuZXcgTmFtZWRCYXJyaWVyVmFsdWUodGhpcy5uYW1lcyk7XG4gICAgICAgIGlmIChjaGVja3BvaW50KSB7XG4gICAgICAgICAgICBlbXB0eS5zZWVuID0gbmV3IFNldChjaGVja3BvaW50KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZW1wdHk7XG4gICAgfVxuICAgIHVwZGF0ZSh2YWx1ZXMpIHtcbiAgICAgICAgbGV0IHVwZGF0ZWQgPSBmYWxzZTtcbiAgICAgICAgZm9yIChjb25zdCBub2RlTmFtZSBvZiB2YWx1ZXMpIHtcbiAgICAgICAgICAgIGlmICh0aGlzLm5hbWVzLmhhcyhub2RlTmFtZSkpIHtcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuc2Vlbi5oYXMobm9kZU5hbWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc2Vlbi5hZGQobm9kZU5hbWUpO1xuICAgICAgICAgICAgICAgICAgICB1cGRhdGVkID0gdHJ1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFVwZGF0ZUVycm9yKGBWYWx1ZSAke0pTT04uc3RyaW5naWZ5KG5vZGVOYW1lKX0gbm90IGluIG5hbWVzICR7SlNPTi5zdHJpbmdpZnkodGhpcy5uYW1lcyl9YCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHVwZGF0ZWQ7XG4gICAgfVxuICAgIC8vIElmIHdlIGhhdmUgbm90IHlldCBzZWVuIGFsbCB0aGUgbm9kZSBuYW1lcyB3ZSB3YW50IHRvIHdhaXQgZm9yLFxuICAgIC8vIHRocm93IGFuIGVycm9yIHRvIHByZXZlbnQgY29udGludWluZy5cbiAgICBnZXQoKSB7XG4gICAgICAgIGlmICghYXJlU2V0c0VxdWFsKHRoaXMubmFtZXMsIHRoaXMuc2VlbikpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFbXB0eUNoYW5uZWxFcnJvcigpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNoZWNrcG9pbnQoKSB7XG4gICAgICAgIHJldHVybiBbLi4udGhpcy5zZWVuXTtcbiAgICB9XG4gICAgY29uc3VtZSgpIHtcbiAgICAgICAgaWYgKHRoaXMuc2VlbiAmJiB0aGlzLm5hbWVzICYmIGFyZVNldHNFcXVhbCh0aGlzLnNlZW4sIHRoaXMubmFtZXMpKSB7XG4gICAgICAgICAgICB0aGlzLnNlZW4gPSBuZXcgU2V0KCk7XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/named_barrier_value.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHECKPOINT_NAMESPACE_END: () => (/* binding */ CHECKPOINT_NAMESPACE_END),\n/* harmony export */   CHECKPOINT_NAMESPACE_SEPARATOR: () => (/* binding */ CHECKPOINT_NAMESPACE_SEPARATOR),\n/* harmony export */   CONFIG_KEY_CALL: () => (/* binding */ CONFIG_KEY_CALL),\n/* harmony export */   CONFIG_KEY_CHECKPOINTER: () => (/* binding */ CONFIG_KEY_CHECKPOINTER),\n/* harmony export */   CONFIG_KEY_CHECKPOINT_ID: () => (/* binding */ CONFIG_KEY_CHECKPOINT_ID),\n/* harmony export */   CONFIG_KEY_CHECKPOINT_MAP: () => (/* binding */ CONFIG_KEY_CHECKPOINT_MAP),\n/* harmony export */   CONFIG_KEY_CHECKPOINT_NS: () => (/* binding */ CONFIG_KEY_CHECKPOINT_NS),\n/* harmony export */   CONFIG_KEY_PREVIOUS_STATE: () => (/* binding */ CONFIG_KEY_PREVIOUS_STATE),\n/* harmony export */   CONFIG_KEY_READ: () => (/* binding */ CONFIG_KEY_READ),\n/* harmony export */   CONFIG_KEY_RESUME_VALUE: () => (/* binding */ CONFIG_KEY_RESUME_VALUE),\n/* harmony export */   CONFIG_KEY_RESUMING: () => (/* binding */ CONFIG_KEY_RESUMING),\n/* harmony export */   CONFIG_KEY_SCRATCHPAD: () => (/* binding */ CONFIG_KEY_SCRATCHPAD),\n/* harmony export */   CONFIG_KEY_SEND: () => (/* binding */ CONFIG_KEY_SEND),\n/* harmony export */   CONFIG_KEY_STREAM: () => (/* binding */ CONFIG_KEY_STREAM),\n/* harmony export */   CONFIG_KEY_TASK_ID: () => (/* binding */ CONFIG_KEY_TASK_ID),\n/* harmony export */   Command: () => (/* binding */ Command),\n/* harmony export */   END: () => (/* binding */ END),\n/* harmony export */   ERROR: () => (/* binding */ ERROR),\n/* harmony export */   INPUT: () => (/* binding */ INPUT),\n/* harmony export */   INTERRUPT: () => (/* binding */ INTERRUPT),\n/* harmony export */   NO_WRITES: () => (/* binding */ NO_WRITES),\n/* harmony export */   NULL_TASK_ID: () => (/* binding */ NULL_TASK_ID),\n/* harmony export */   PREVIOUS: () => (/* binding */ PREVIOUS),\n/* harmony export */   PULL: () => (/* binding */ PULL),\n/* harmony export */   PUSH: () => (/* binding */ PUSH),\n/* harmony export */   RECURSION_LIMIT_DEFAULT: () => (/* binding */ RECURSION_LIMIT_DEFAULT),\n/* harmony export */   RESERVED: () => (/* binding */ RESERVED),\n/* harmony export */   RESUME: () => (/* binding */ RESUME),\n/* harmony export */   RETURN: () => (/* binding */ RETURN),\n/* harmony export */   RUNTIME_PLACEHOLDER: () => (/* binding */ RUNTIME_PLACEHOLDER),\n/* harmony export */   SELF: () => (/* binding */ SELF),\n/* harmony export */   START: () => (/* binding */ START),\n/* harmony export */   Send: () => (/* binding */ Send),\n/* harmony export */   TAG_HIDDEN: () => (/* binding */ TAG_HIDDEN),\n/* harmony export */   TAG_NOSTREAM: () => (/* binding */ TAG_NOSTREAM),\n/* harmony export */   TASKS: () => (/* binding */ TASKS),\n/* harmony export */   TASK_NAMESPACE: () => (/* binding */ TASK_NAMESPACE),\n/* harmony export */   _isSend: () => (/* binding */ _isSend),\n/* harmony export */   _isSendInterface: () => (/* binding */ _isSendInterface),\n/* harmony export */   isCommand: () => (/* binding */ isCommand)\n/* harmony export */ });\n/** Special reserved node name denoting the start of a graph. */\nconst START = \"__start__\";\n/** Special reserved node name denoting the end of a graph. */\nconst END = \"__end__\";\nconst INPUT = \"__input__\";\nconst ERROR = \"__error__\";\nconst CONFIG_KEY_SEND = \"__pregel_send\";\n/** config key containing function used to call a node (push task) */\nconst CONFIG_KEY_CALL = \"__pregel_call\";\nconst CONFIG_KEY_READ = \"__pregel_read\";\nconst CONFIG_KEY_CHECKPOINTER = \"__pregel_checkpointer\";\nconst CONFIG_KEY_RESUMING = \"__pregel_resuming\";\nconst CONFIG_KEY_TASK_ID = \"__pregel_task_id\";\nconst CONFIG_KEY_STREAM = \"__pregel_stream\";\nconst CONFIG_KEY_RESUME_VALUE = \"__pregel_resume_value\";\nconst CONFIG_KEY_SCRATCHPAD = \"__pregel_scratchpad\";\n/** config key containing state from previous invocation of graph for the given thread */\nconst CONFIG_KEY_PREVIOUS_STATE = \"__pregel_previous\";\nconst CONFIG_KEY_CHECKPOINT_ID = \"checkpoint_id\";\nconst CONFIG_KEY_CHECKPOINT_NS = \"checkpoint_ns\";\n// this one is part of public API\nconst CONFIG_KEY_CHECKPOINT_MAP = \"checkpoint_map\";\n/** Special channel reserved for graph interrupts */\nconst INTERRUPT = \"__interrupt__\";\n/** Special channel reserved for graph resume */\nconst RESUME = \"__resume__\";\n/** Special channel reserved for cases when a task exits without any writes */\nconst NO_WRITES = \"__no_writes__\";\n/** Special channel reserved for graph return */\nconst RETURN = \"__return__\";\n/** Special channel reserved for graph previous state */\nconst PREVIOUS = \"__previous__\";\nconst RUNTIME_PLACEHOLDER = \"__pregel_runtime_placeholder__\";\nconst RECURSION_LIMIT_DEFAULT = 25;\nconst TAG_HIDDEN = \"langsmith:hidden\";\nconst TAG_NOSTREAM = \"langsmith:nostream\";\nconst SELF = \"__self__\";\nconst TASKS = \"__pregel_tasks\";\nconst PUSH = \"__pregel_push\";\nconst PULL = \"__pregel_pull\";\nconst TASK_NAMESPACE = \"6ba7b831-9dad-11d1-80b4-00c04fd430c8\";\nconst NULL_TASK_ID = \"00000000-0000-0000-0000-000000000000\";\nconst RESERVED = [\n    TAG_HIDDEN,\n    INPUT,\n    INTERRUPT,\n    RESUME,\n    ERROR,\n    NO_WRITES,\n    TASKS,\n    // reserved config.configurable keys\n    CONFIG_KEY_SEND,\n    CONFIG_KEY_READ,\n    CONFIG_KEY_CHECKPOINTER,\n    CONFIG_KEY_STREAM,\n    CONFIG_KEY_RESUMING,\n    CONFIG_KEY_TASK_ID,\n    CONFIG_KEY_CALL,\n    CONFIG_KEY_RESUME_VALUE,\n    CONFIG_KEY_SCRATCHPAD,\n    CONFIG_KEY_PREVIOUS_STATE,\n    CONFIG_KEY_CHECKPOINT_MAP,\n    CONFIG_KEY_CHECKPOINT_NS,\n    CONFIG_KEY_CHECKPOINT_ID,\n];\nconst CHECKPOINT_NAMESPACE_SEPARATOR = \"|\";\nconst CHECKPOINT_NAMESPACE_END = \":\";\nfunction _isSendInterface(x) {\n    const operation = x;\n    return (operation !== null &&\n        operation !== undefined &&\n        typeof operation.node === \"string\" &&\n        operation.args !== undefined);\n}\n/**\n *\n * A message or packet to send to a specific node in the graph.\n *\n * The `Send` class is used within a `StateGraph`'s conditional edges to\n * dynamically invoke a node with a custom state at the next step.\n *\n * Importantly, the sent state can differ from the core graph's state,\n * allowing for flexible and dynamic workflow management.\n *\n * One such example is a \"map-reduce\" workflow where your graph invokes\n * the same node multiple times in parallel with different states,\n * before aggregating the results back into the main graph's state.\n *\n * @example\n * ```typescript\n * import { Annotation, Send, StateGraph } from \"@langchain/langgraph\";\n *\n * const ChainState = Annotation.Root({\n *   subjects: Annotation<string[]>,\n *   jokes: Annotation<string[]>({\n *     reducer: (a, b) => a.concat(b),\n *   }),\n * });\n *\n * const continueToJokes = async (state: typeof ChainState.State) => {\n *   return state.subjects.map((subject) => {\n *     return new Send(\"generate_joke\", { subjects: [subject] });\n *   });\n * };\n *\n * const graph = new StateGraph(ChainState)\n *   .addNode(\"generate_joke\", (state) => ({\n *     jokes: [`Joke about ${state.subjects}`],\n *   }))\n *   .addConditionalEdges(\"__start__\", continueToJokes)\n *   .addEdge(\"generate_joke\", \"__end__\")\n *   .compile();\n *\n * const res = await graph.invoke({ subjects: [\"cats\", \"dogs\"] });\n * console.log(res);\n *\n * // Invoking with two subjects results in a generated joke for each\n * // { subjects: [\"cats\", \"dogs\"], jokes: [`Joke about cats`, `Joke about dogs`] }\n * ```\n */\nclass Send {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(node, args) {\n        Object.defineProperty(this, \"node\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: node\n        });\n        Object.defineProperty(this, \"args\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: args\n        });\n        Object.defineProperty(this, \"lg_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Send\"\n        });\n    }\n    toJSON() {\n        return {\n            node: this.node,\n            args: this.args,\n        };\n    }\n}\nfunction _isSend(x) {\n    const operation = x;\n    return operation !== undefined && operation.lg_name === \"Send\";\n}\n/**\n * One or more commands to update the graph's state and send messages to nodes.\n * Can be used to combine routing logic with state updates in lieu of conditional edges\n *\n * @example\n * ```ts\n * import { Annotation, Command } from \"@langchain/langgraph\";\n *\n * // Define graph state\n * const StateAnnotation = Annotation.Root({\n *   foo: Annotation<string>,\n * });\n *\n * // Define the nodes\n * const nodeA = async (_state: typeof StateAnnotation.State) => {\n *   console.log(\"Called A\");\n *   // this is a replacement for a real conditional edge function\n *   const goto = Math.random() > .5 ? \"nodeB\" : \"nodeC\";\n *   // note how Command allows you to BOTH update the graph state AND route to the next node\n *   return new Command({\n *     // this is the state update\n *     update: {\n *       foo: \"a\",\n *     },\n *     // this is a replacement for an edge\n *     goto,\n *   });\n * };\n *\n * // Nodes B and C are unchanged\n * const nodeB = async (state: typeof StateAnnotation.State) => {\n *   console.log(\"Called B\");\n *   return {\n *     foo: state.foo + \"|b\",\n *   };\n * }\n *\n * const nodeC = async (state: typeof StateAnnotation.State) => {\n *   console.log(\"Called C\");\n *   return {\n *     foo: state.foo + \"|c\",\n *   };\n * }\n *\n * import { StateGraph } from \"@langchain/langgraph\";\n\n * // NOTE: there are no edges between nodes A, B and C!\n * const graph = new StateGraph(StateAnnotation)\n *   .addNode(\"nodeA\", nodeA, {\n *     ends: [\"nodeB\", \"nodeC\"],\n *   })\n *   .addNode(\"nodeB\", nodeB)\n *   .addNode(\"nodeC\", nodeC)\n *   .addEdge(\"__start__\", \"nodeA\")\n *   .compile();\n *\n * await graph.invoke({ foo: \"\" });\n *\n * // Randomly oscillates between\n * // { foo: 'a|c' } and { foo: 'a|b' }\n * ```\n */\nclass Command {\n    constructor(args) {\n        Object.defineProperty(this, \"lg_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Command\"\n        });\n        Object.defineProperty(this, \"lc_direct_tool_output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"graph\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"update\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"resume\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"goto\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        this.resume = args.resume;\n        this.graph = args.graph;\n        this.update = args.update;\n        if (args.goto) {\n            this.goto = Array.isArray(args.goto) ? args.goto : [args.goto];\n        }\n    }\n    _updateAsTuples() {\n        if (this.update &&\n            typeof this.update === \"object\" &&\n            !Array.isArray(this.update)) {\n            return Object.entries(this.update);\n        }\n        else if (Array.isArray(this.update) &&\n            this.update.every((t) => Array.isArray(t) && t.length === 2 && typeof t[0] === \"string\")) {\n            return this.update;\n        }\n        else {\n            return [[\"__root__\", this.update]];\n        }\n    }\n    toJSON() {\n        let serializedGoto;\n        if (typeof this.goto === \"string\") {\n            serializedGoto = this.goto;\n        }\n        else if (_isSend(this.goto)) {\n            serializedGoto = this.goto.toJSON();\n        }\n        else {\n            serializedGoto = this.goto.map((innerGoto) => {\n                if (typeof innerGoto === \"string\") {\n                    return innerGoto;\n                }\n                else {\n                    return innerGoto.toJSON();\n                }\n            });\n        }\n        return {\n            update: this.update,\n            resume: this.resume,\n            goto: serializedGoto,\n        };\n    }\n}\nObject.defineProperty(Command, \"PARENT\", {\n    enumerable: true,\n    configurable: true,\n    writable: true,\n    value: \"__parent__\"\n});\nfunction isCommand(x) {\n    return typeof x === \"object\" && !!x && x.lg_name === \"Command\";\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseLangGraphError: () => (/* binding */ BaseLangGraphError),\n/* harmony export */   EmptyChannelError: () => (/* binding */ EmptyChannelError),\n/* harmony export */   EmptyInputError: () => (/* binding */ EmptyInputError),\n/* harmony export */   GraphBubbleUp: () => (/* binding */ GraphBubbleUp),\n/* harmony export */   GraphInterrupt: () => (/* binding */ GraphInterrupt),\n/* harmony export */   GraphRecursionError: () => (/* binding */ GraphRecursionError),\n/* harmony export */   GraphValueError: () => (/* binding */ GraphValueError),\n/* harmony export */   InvalidUpdateError: () => (/* binding */ InvalidUpdateError),\n/* harmony export */   MultipleSubgraphsError: () => (/* binding */ MultipleSubgraphsError),\n/* harmony export */   NodeInterrupt: () => (/* binding */ NodeInterrupt),\n/* harmony export */   ParentCommand: () => (/* binding */ ParentCommand),\n/* harmony export */   RemoteException: () => (/* binding */ RemoteException),\n/* harmony export */   UnreachableNodeError: () => (/* binding */ UnreachableNodeError),\n/* harmony export */   getSubgraphsSeenSet: () => (/* binding */ getSubgraphsSeenSet),\n/* harmony export */   isGraphBubbleUp: () => (/* binding */ isGraphBubbleUp),\n/* harmony export */   isGraphInterrupt: () => (/* binding */ isGraphInterrupt),\n/* harmony export */   isParentCommand: () => (/* binding */ isParentCommand)\n/* harmony export */ });\n// TODO: Merge with base LangChain error class when we drop support for core@0.2.0\nclass BaseLangGraphError extends Error {\n    constructor(message, fields) {\n        let finalMessage = message ?? \"\";\n        if (fields?.lc_error_code) {\n            finalMessage = `${finalMessage}\\n\\nTroubleshooting URL: https://js.langchain.com/docs/troubleshooting/errors/${fields.lc_error_code}/\\n`;\n        }\n        super(finalMessage);\n        Object.defineProperty(this, \"lc_error_code\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.lc_error_code = fields?.lc_error_code;\n    }\n}\nclass GraphBubbleUp extends BaseLangGraphError {\n    get is_bubble_up() {\n        return true;\n    }\n}\nclass GraphRecursionError extends BaseLangGraphError {\n    constructor(message, fields) {\n        super(message, fields);\n        this.name = \"GraphRecursionError\";\n    }\n    static get unminifiable_name() {\n        return \"GraphRecursionError\";\n    }\n}\nclass GraphValueError extends BaseLangGraphError {\n    constructor(message, fields) {\n        super(message, fields);\n        this.name = \"GraphValueError\";\n    }\n    static get unminifiable_name() {\n        return \"GraphValueError\";\n    }\n}\nclass GraphInterrupt extends GraphBubbleUp {\n    constructor(interrupts, fields) {\n        super(JSON.stringify(interrupts, null, 2), fields);\n        Object.defineProperty(this, \"interrupts\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = \"GraphInterrupt\";\n        this.interrupts = interrupts ?? [];\n    }\n    static get unminifiable_name() {\n        return \"GraphInterrupt\";\n    }\n}\n/** Raised by a node to interrupt execution. */\nclass NodeInterrupt extends GraphInterrupt {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(message, fields) {\n        super([\n            {\n                value: message,\n                when: \"during\",\n            },\n        ], fields);\n        this.name = \"NodeInterrupt\";\n    }\n    static get unminifiable_name() {\n        return \"NodeInterrupt\";\n    }\n}\nclass ParentCommand extends GraphBubbleUp {\n    constructor(command) {\n        super();\n        Object.defineProperty(this, \"command\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = \"ParentCommand\";\n        this.command = command;\n    }\n    static get unminifiable_name() {\n        return \"ParentCommand\";\n    }\n}\nfunction isParentCommand(e) {\n    return (e !== undefined &&\n        e.name === ParentCommand.unminifiable_name);\n}\nfunction isGraphBubbleUp(e) {\n    return e !== undefined && e.is_bubble_up === true;\n}\nfunction isGraphInterrupt(e) {\n    return (e !== undefined &&\n        [\n            GraphInterrupt.unminifiable_name,\n            NodeInterrupt.unminifiable_name,\n        ].includes(e.name));\n}\nclass EmptyInputError extends BaseLangGraphError {\n    constructor(message, fields) {\n        super(message, fields);\n        this.name = \"EmptyInputError\";\n    }\n    static get unminifiable_name() {\n        return \"EmptyInputError\";\n    }\n}\nclass EmptyChannelError extends BaseLangGraphError {\n    constructor(message, fields) {\n        super(message, fields);\n        this.name = \"EmptyChannelError\";\n    }\n    static get unminifiable_name() {\n        return \"EmptyChannelError\";\n    }\n}\nclass InvalidUpdateError extends BaseLangGraphError {\n    constructor(message, fields) {\n        super(message, fields);\n        this.name = \"InvalidUpdateError\";\n    }\n    static get unminifiable_name() {\n        return \"InvalidUpdateError\";\n    }\n}\nclass MultipleSubgraphsError extends BaseLangGraphError {\n    constructor(message, fields) {\n        super(message, fields);\n        this.name = \"MultipleSubgraphError\";\n    }\n    static get unminifiable_name() {\n        return \"MultipleSubgraphError\";\n    }\n}\nclass UnreachableNodeError extends BaseLangGraphError {\n    constructor(message, fields) {\n        super(message, fields);\n        this.name = \"UnreachableNodeError\";\n    }\n    static get unminifiable_name() {\n        return \"UnreachableNodeError\";\n    }\n}\n/**\n * Exception raised when an error occurs in the remote graph.\n */\nclass RemoteException extends BaseLangGraphError {\n    constructor(message, fields) {\n        super(message, fields);\n        this.name = \"RemoteException\";\n    }\n    static get unminifiable_name() {\n        return \"RemoteException\";\n    }\n}\n/**\n * Used for subgraph detection.\n */\nconst getSubgraphsSeenSet = () => {\n    if (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    globalThis[Symbol.for(\"LG_CHECKPOINT_SEEN_NS_SET\")] === undefined) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        globalThis[Symbol.for(\"LG_CHECKPOINT_SEEN_NS_SET\")] = new Set();\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    return globalThis[Symbol.for(\"LG_CHECKPOINT_SEEN_NS_SET\")];\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/func/index.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/func/index.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   entrypoint: () => (/* binding */ entrypoint),\n/* harmony export */   getPreviousState: () => (/* binding */ getPreviousState),\n/* harmony export */   task: () => (/* binding */ task)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/singletons */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/singletons.js\");\n/* harmony import */ var _pregel_index_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../pregel/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/index.js\");\n/* harmony import */ var _pregel_read_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pregel/read.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/read.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../channels/ephemeral_value.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/ephemeral_value.js\");\n/* harmony import */ var _pregel_call_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../pregel/call.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/call.js\");\n/* harmony import */ var _channels_last_value_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../channels/last_value.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/last_value.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js\");\n\n\n\n\n\n\n\n\n/**\n * Define a LangGraph task using the `task` function.\n *\n * !!! warning \"Beta\"\n *     The Functional API is currently in beta and is subject to change.\n *\n * @beta\n *\n * Tasks can only be called from within an {@link entrypoint} or from within a StateGraph.\n * A task can be called like a regular function with the following differences:\n *\n * - When a checkpointer is enabled, the function inputs and outputs must be serializable.\n * - The wrapped function can only be called from within an entrypoint or StateGraph.\n * - Calling the function produces a promise. This makes it easy to parallelize tasks.\n *\n * @typeParam ArgsT - The type of arguments the task function accepts\n * @typeParam OutputT - The type of value the task function returns\n * @param optionsOrName - Either an {@link TaskOptions} object, or a string for the name of the task\n * @param func - The function that executes this task\n * @returns A proxy function that accepts the same arguments as the original and always returns the result as a Promise\n *\n * @example basic example\n * ```typescript\n * const addOne = task(\"add\", async (a: number) => a + 1);\n *\n * const workflow = entrypoint(\"example\", async (numbers: number[]) => {\n *   const promises = numbers.map(n => addOne(n));\n *   const results = await Promise.all(promises);\n *   return results;\n * });\n *\n * // Call the entrypoint\n * await workflow.invoke([1, 2, 3]); // Returns [2, 3, 4]\n * ```\n *\n * @example using a retry policy\n * ```typescript\n * const addOne = task({\n *     name: \"add\",\n *     retry: { maxAttempts: 3 }\n *   },\n *   async (a: number) => a + 1\n * );\n *\n * const workflow = entrypoint(\"example\", async (numbers: number[]) => {\n *   const promises = numbers.map(n => addOne(n));\n *   const results = await Promise.all(promises);\n *   return results;\n * });\n * ```\n */\nfunction task(optionsOrName, func) {\n    const { name, retry } = typeof optionsOrName === \"string\"\n        ? { name: optionsOrName, retry: undefined }\n        : optionsOrName;\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isAsyncGeneratorFunction)(func) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isGeneratorFunction)(func)) {\n        throw new Error(\"Generators are disallowed as tasks. For streaming responses, use config.write.\");\n    }\n    return (...args) => {\n        return (0,_pregel_call_js__WEBPACK_IMPORTED_MODULE_5__.call)({ func, name, retry }, ...args);\n    };\n}\n/**\n * Define a LangGraph workflow using the `entrypoint` function.\n *\n * !!! warning \"Beta\"\n *     The Functional API is currently in beta and is subject to change.\n *\n * @beta\n *\n * ### Function signature\n *\n * The wrapped function must accept at most **two parameters**. The first parameter\n * is the input to the function. The second (optional) parameter is a\n * {@link LangGraphRunnableConfig} object. If you wish to pass multiple parameters to\n * the function, you can pass them as an object.\n *\n * ### Helper functions\n *\n * #### Streaming\n * To write data to the \"custom\" stream, use the {@link getWriter} function, or the\n * {@link LangGraphRunnableConfig.writer} property.\n *\n * #### State management\n * The {@link getPreviousState} function can be used to access the previous state\n * that was returned from the last invocation of the entrypoint on the same thread id.\n *\n * If you wish to save state other than the return value, you can use the\n * {@link entrypoint.final} function.\n *\n * @typeParam InputT - The type of input the entrypoint accepts\n * @typeParam OutputT - The type of output the entrypoint produces\n * @param optionsOrName - Either an {@link EntrypointOptions} object, or a string for the name of the entrypoint\n * @param func - The function that executes this entrypoint\n * @returns A {@link Pregel} instance that can be run to execute the workflow\n *\n * @example Using entrypoint and tasks\n * ```typescript\n * import { task, entrypoint } from \"@langchain/langgraph\";\n * import { MemorySaver } from \"@langchain/langgraph-checkpoint\";\n * import { interrupt, Command } from \"@langchain/langgraph\";\n *\n * const composeEssay = task(\"compose\", async (topic: string) => {\n *   await new Promise(r => setTimeout(r, 1000)); // Simulate slow operation\n *   return `An essay about ${topic}`;\n * });\n *\n * const reviewWorkflow = entrypoint({\n *   name: \"review\",\n *   checkpointer: new MemorySaver()\n * }, async (topic: string) => {\n *   const essay = await composeEssay(topic);\n *   const humanReview = await interrupt({\n *     question: \"Please provide a review\",\n *     essay\n *   });\n *   return {\n *     essay,\n *     review: humanReview\n *   };\n * });\n *\n * // Example configuration for the workflow\n * const config = {\n *   configurable: {\n *     thread_id: \"some_thread\"\n *   }\n * };\n *\n * // Topic for the essay\n * const topic = \"cats\";\n *\n * // Stream the workflow to generate the essay and await human review\n * for await (const result of reviewWorkflow.stream(topic, config)) {\n *   console.log(result);\n * }\n *\n * // Example human review provided after the interrupt\n * const humanReview = \"This essay is great.\";\n *\n * // Resume the workflow with the provided human review\n * for await (const result of reviewWorkflow.stream(new Command({ resume: humanReview }), config)) {\n *   console.log(result);\n * }\n * ```\n *\n * @example Accessing the previous return value\n * ```typescript\n * import { entrypoint, getPreviousState } from \"@langchain/langgraph\";\n * import { MemorySaver } from \"@langchain/langgraph-checkpoint\";\n *\n * const accumulator = entrypoint({\n *   name: \"accumulator\",\n *   checkpointer: new MemorySaver()\n * }, async (input: string) => {\n *   const previous = getPreviousState<number>();\n *   return previous !== undefined ? `${previous } ${input}` : input;\n * });\n *\n * const config = {\n *   configurable: {\n *     thread_id: \"some_thread\"\n *   }\n * };\n * await accumulator.invoke(\"hello\", config); // returns \"hello\"\n * await accumulator.invoke(\"world\", config); // returns \"hello world\"\n * ```\n *\n * @example Using entrypoint.final to save a value\n * ```typescript\n * import { entrypoint, getPreviousState } from \"@langchain/langgraph\";\n * import { MemorySaver } from \"@langchain/langgraph-checkpoint\";\n *\n * const myWorkflow = entrypoint({\n *   name: \"accumulator\",\n *   checkpointer: new MemorySaver()\n * }, async (num: number) => {\n *   const previous = getPreviousState<number>();\n *\n *   // This will return the previous value to the caller, saving\n *   // 2 * num to the checkpoint, which will be used in the next invocation\n *   // for the `previous` parameter.\n *   return entrypoint.final({\n *     value: previous ?? 0,\n *     save: 2 * num\n *   });\n * });\n *\n * const config = {\n *   configurable: {\n *     thread_id: \"some_thread\"\n *   }\n * };\n *\n * await myWorkflow.invoke(3, config); // 0 (previous was undefined)\n * await myWorkflow.invoke(1, config); // 6 (previous was 3 * 2 from the previous invocation)\n * ```\n */\nconst entrypoint = function entrypoint(optionsOrName, func) {\n    const { name, checkpointer, store } = typeof optionsOrName === \"string\"\n        ? { name: optionsOrName, checkpointer: undefined, store: undefined }\n        : optionsOrName;\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isAsyncGeneratorFunction)(func) || (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.isGeneratorFunction)(func)) {\n        throw new Error(\"Generators are disallowed as entrypoints. For streaming responses, use config.write.\");\n    }\n    const streamMode = \"updates\";\n    const bound = (0,_pregel_call_js__WEBPACK_IMPORTED_MODULE_5__.getRunnableForEntrypoint)(name, func);\n    return new _pregel_index_js__WEBPACK_IMPORTED_MODULE_1__.Pregel({\n        name,\n        checkpointer,\n        nodes: {\n            [name]: new _pregel_read_js__WEBPACK_IMPORTED_MODULE_2__.PregelNode({\n                bound,\n                triggers: [_constants_js__WEBPACK_IMPORTED_MODULE_3__.START],\n                channels: [_constants_js__WEBPACK_IMPORTED_MODULE_3__.START],\n                writers: [],\n            }),\n        },\n        channels: {\n            [_constants_js__WEBPACK_IMPORTED_MODULE_3__.START]: new _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_4__.EphemeralValue(),\n            [_constants_js__WEBPACK_IMPORTED_MODULE_3__.END]: new _channels_last_value_js__WEBPACK_IMPORTED_MODULE_6__.LastValue(),\n            [_constants_js__WEBPACK_IMPORTED_MODULE_3__.PREVIOUS]: new _channels_last_value_js__WEBPACK_IMPORTED_MODULE_6__.LastValue(),\n        },\n        inputChannels: _constants_js__WEBPACK_IMPORTED_MODULE_3__.START,\n        outputChannels: _constants_js__WEBPACK_IMPORTED_MODULE_3__.END,\n        streamChannels: _constants_js__WEBPACK_IMPORTED_MODULE_3__.END,\n        streamMode,\n        store,\n    });\n};\n// documented by the EntrypointFunction interface\nentrypoint.final = function final({ value, save, }) {\n    return { value, save, __lg_type: \"__pregel_final\" };\n};\n/**\n * A helper utility function for use with the functional API that returns the previous\n * state from the checkpoint from the last invocation of the current thread.\n *\n * This function allows workflows to access state that was saved in previous runs\n * using {@link entrypoint.final}.\n *\n * !!! warning \"Beta\"\n *     The Functional API is currently in beta and is subject to change.\n *\n * @beta\n *\n * @typeParam StateT - The type of the state that was previously saved\n * @returns The previous saved state from the last invocation of the current thread\n *\n * @example\n * ```typescript\n * const previousState = getPreviousState<{ counter: number }>();\n * const newCount = (previousState?.counter ?? 0) + 1;\n * ```\n */\nfunction getPreviousState() {\n    const config = _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    return config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_3__.CONFIG_KEY_PREVIOUS_STATE];\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/func/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/func/types.js":
/*!**********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/func/types.js ***!
  \**********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   isEntrypointFinal: () => (/* binding */ isEntrypointFinal)\n/* harmony export */ });\n/**\n * Checks if a value is an EntrypointFinal - use this instead of `instanceof`, as value may have been deserialized\n * @param value The value to check\n * @returns Whether the value is an EntrypointFinal\n */\nfunction isEntrypointFinal(value) {\n    return (typeof value === \"object\" &&\n        value !== null &&\n        \"__lg_type\" in value &&\n        value.__lg_type === \"__pregel_final\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2Z1bmMvdHlwZXMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvZnVuYy90eXBlcy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENoZWNrcyBpZiBhIHZhbHVlIGlzIGFuIEVudHJ5cG9pbnRGaW5hbCAtIHVzZSB0aGlzIGluc3RlYWQgb2YgYGluc3RhbmNlb2ZgLCBhcyB2YWx1ZSBtYXkgaGF2ZSBiZWVuIGRlc2VyaWFsaXplZFxuICogQHBhcmFtIHZhbHVlIFRoZSB2YWx1ZSB0byBjaGVja1xuICogQHJldHVybnMgV2hldGhlciB0aGUgdmFsdWUgaXMgYW4gRW50cnlwb2ludEZpbmFsXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpc0VudHJ5cG9pbnRGaW5hbCh2YWx1ZSkge1xuICAgIHJldHVybiAodHlwZW9mIHZhbHVlID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgIHZhbHVlICE9PSBudWxsICYmXG4gICAgICAgIFwiX19sZ190eXBlXCIgaW4gdmFsdWUgJiZcbiAgICAgICAgdmFsdWUuX19sZ190eXBlID09PSBcIl9fcHJlZ2VsX2ZpbmFsXCIpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/func/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/annotation.js":
/*!****************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/annotation.js ***!
  \****************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Annotation: () => (/* binding */ Annotation),\n/* harmony export */   AnnotationRoot: () => (/* binding */ AnnotationRoot),\n/* harmony export */   getChannel: () => (/* binding */ getChannel)\n/* harmony export */ });\n/* harmony import */ var _channels_binop_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../channels/binop.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/binop.js\");\n/* harmony import */ var _channels_last_value_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../channels/last_value.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/last_value.js\");\n/* harmony import */ var _managed_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../managed/base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/base.js\");\n\n\n\n/**\n * Should not be instantiated directly. See {@link Annotation}.\n */\nclass AnnotationRoot {\n    constructor(s) {\n        Object.defineProperty(this, \"lc_graph_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"AnnotationRoot\"\n        });\n        Object.defineProperty(this, \"spec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.spec = s;\n    }\n}\n/**\n * Helper that instantiates channels within a StateGraph state.\n *\n * Can be used as a field in an {@link Annotation.Root} wrapper in one of two ways:\n * 1. **Directly**: Creates a channel that stores the most recent value returned from a node.\n * 2. **With a reducer**: Creates a channel that applies the reducer on a node's return value.\n *\n * @example\n * ```ts\n * import { StateGraph, Annotation } from \"@langchain/langgraph\";\n *\n * // Define a state with a single string key named \"currentOutput\"\n * const SimpleAnnotation = Annotation.Root({\n *   currentOutput: Annotation<string>,\n * });\n *\n * const graphBuilder = new StateGraph(SimpleAnnotation);\n *\n * // A node in the graph that returns an object with a \"currentOutput\" key\n * // replaces the value in the state. You can get the state type as shown below:\n * const myNode = (state: typeof SimpleAnnotation.State) => {\n *   return {\n *     currentOutput: \"some_new_value\",\n *   };\n * }\n *\n * const graph = graphBuilder\n *   .addNode(\"myNode\", myNode)\n *   ...\n *   .compile();\n * ```\n *\n * @example\n * ```ts\n * import { type BaseMessage, AIMessage } from \"@langchain/core/messages\";\n * import { StateGraph, Annotation } from \"@langchain/langgraph\";\n *\n * // Define a state with a single key named \"messages\" that will\n * // combine a returned BaseMessage or arrays of BaseMessages\n * const AnnotationWithReducer = Annotation.Root({\n *   messages: Annotation<BaseMessage[]>({\n *     // Different types are allowed for updates\n *     reducer: (left: BaseMessage[], right: BaseMessage | BaseMessage[]) => {\n *       if (Array.isArray(right)) {\n *         return left.concat(right);\n *       }\n *       return left.concat([right]);\n *     },\n *     default: () => [],\n *   }),\n * });\n *\n * const graphBuilder = new StateGraph(AnnotationWithReducer);\n *\n * // A node in the graph that returns an object with a \"messages\" key\n * // will update the state by combining the existing value with the returned one.\n * const myNode = (state: typeof AnnotationWithReducer.State) => {\n *   return {\n *     messages: [new AIMessage(\"Some new response\")],\n *   };\n * };\n *\n * const graph = graphBuilder\n *   .addNode(\"myNode\", myNode)\n *   ...\n *   .compile();\n * ```\n * @namespace\n * @property Root\n * Helper function that instantiates a StateGraph state. See {@link Annotation} for usage.\n */\nconst Annotation = function (annotation) {\n    if ((0,_managed_base_js__WEBPACK_IMPORTED_MODULE_2__.isConfiguredManagedValue)(annotation)) {\n        return annotation;\n    }\n    else if (annotation) {\n        return getChannel(annotation);\n    }\n    else {\n        // @ts-expect-error - Annotation without reducer\n        return new _channels_last_value_js__WEBPACK_IMPORTED_MODULE_1__.LastValue();\n    }\n};\nAnnotation.Root = (sd) => new AnnotationRoot(sd);\nfunction getChannel(reducer) {\n    if (typeof reducer === \"object\" &&\n        reducer &&\n        \"reducer\" in reducer &&\n        reducer.reducer) {\n        return new _channels_binop_js__WEBPACK_IMPORTED_MODULE_0__.BinaryOperatorAggregate(reducer.reducer, reducer.default);\n    }\n    if (typeof reducer === \"object\" &&\n        reducer &&\n        \"value\" in reducer &&\n        reducer.value) {\n        return new _channels_binop_js__WEBPACK_IMPORTED_MODULE_0__.BinaryOperatorAggregate(reducer.value, reducer.default);\n    }\n    // @ts-expect-error - Annotation without reducer\n    return new _channels_last_value_js__WEBPACK_IMPORTED_MODULE_1__.LastValue();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2dyYXBoL2Fubm90YXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQStEO0FBQ1Q7QUFDUztBQUMvRDtBQUNBLDZDQUE2QyxpQkFBaUI7QUFDOUQ7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGlDQUFpQyx1QkFBdUI7QUFDeEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVkseUJBQXlCO0FBQ3JDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSw4QkFBOEI7QUFDMUMsWUFBWSx5QkFBeUI7QUFDckM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFFBQVE7QUFDUjtBQUNBLE1BQU07QUFDTixJQUFJO0FBQ0o7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsOERBQThELGtCQUFrQjtBQUNoRjtBQUNPO0FBQ1AsUUFBUSwwRUFBd0I7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsOERBQVM7QUFDNUI7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1RUFBdUI7QUFDMUM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQix1RUFBdUI7QUFDMUM7QUFDQTtBQUNBLGVBQWUsOERBQVM7QUFDeEIiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvZ3JhcGgvYW5ub3RhdGlvbi5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCaW5hcnlPcGVyYXRvckFnZ3JlZ2F0ZSB9IGZyb20gXCIuLi9jaGFubmVscy9iaW5vcC5qc1wiO1xuaW1wb3J0IHsgTGFzdFZhbHVlIH0gZnJvbSBcIi4uL2NoYW5uZWxzL2xhc3RfdmFsdWUuanNcIjtcbmltcG9ydCB7IGlzQ29uZmlndXJlZE1hbmFnZWRWYWx1ZSwgfSBmcm9tIFwiLi4vbWFuYWdlZC9iYXNlLmpzXCI7XG4vKipcbiAqIFNob3VsZCBub3QgYmUgaW5zdGFudGlhdGVkIGRpcmVjdGx5LiBTZWUge0BsaW5rIEFubm90YXRpb259LlxuICovXG5leHBvcnQgY2xhc3MgQW5ub3RhdGlvblJvb3Qge1xuICAgIGNvbnN0cnVjdG9yKHMpIHtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfZ3JhcGhfbmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJBbm5vdGF0aW9uUm9vdFwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJzcGVjXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc3BlYyA9IHM7XG4gICAgfVxufVxuLyoqXG4gKiBIZWxwZXIgdGhhdCBpbnN0YW50aWF0ZXMgY2hhbm5lbHMgd2l0aGluIGEgU3RhdGVHcmFwaCBzdGF0ZS5cbiAqXG4gKiBDYW4gYmUgdXNlZCBhcyBhIGZpZWxkIGluIGFuIHtAbGluayBBbm5vdGF0aW9uLlJvb3R9IHdyYXBwZXIgaW4gb25lIG9mIHR3byB3YXlzOlxuICogMS4gKipEaXJlY3RseSoqOiBDcmVhdGVzIGEgY2hhbm5lbCB0aGF0IHN0b3JlcyB0aGUgbW9zdCByZWNlbnQgdmFsdWUgcmV0dXJuZWQgZnJvbSBhIG5vZGUuXG4gKiAyLiAqKldpdGggYSByZWR1Y2VyKio6IENyZWF0ZXMgYSBjaGFubmVsIHRoYXQgYXBwbGllcyB0aGUgcmVkdWNlciBvbiBhIG5vZGUncyByZXR1cm4gdmFsdWUuXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBTdGF0ZUdyYXBoLCBBbm5vdGF0aW9uIH0gZnJvbSBcIkBsYW5nY2hhaW4vbGFuZ2dyYXBoXCI7XG4gKlxuICogLy8gRGVmaW5lIGEgc3RhdGUgd2l0aCBhIHNpbmdsZSBzdHJpbmcga2V5IG5hbWVkIFwiY3VycmVudE91dHB1dFwiXG4gKiBjb25zdCBTaW1wbGVBbm5vdGF0aW9uID0gQW5ub3RhdGlvbi5Sb290KHtcbiAqICAgY3VycmVudE91dHB1dDogQW5ub3RhdGlvbjxzdHJpbmc+LFxuICogfSk7XG4gKlxuICogY29uc3QgZ3JhcGhCdWlsZGVyID0gbmV3IFN0YXRlR3JhcGgoU2ltcGxlQW5ub3RhdGlvbik7XG4gKlxuICogLy8gQSBub2RlIGluIHRoZSBncmFwaCB0aGF0IHJldHVybnMgYW4gb2JqZWN0IHdpdGggYSBcImN1cnJlbnRPdXRwdXRcIiBrZXlcbiAqIC8vIHJlcGxhY2VzIHRoZSB2YWx1ZSBpbiB0aGUgc3RhdGUuIFlvdSBjYW4gZ2V0IHRoZSBzdGF0ZSB0eXBlIGFzIHNob3duIGJlbG93OlxuICogY29uc3QgbXlOb2RlID0gKHN0YXRlOiB0eXBlb2YgU2ltcGxlQW5ub3RhdGlvbi5TdGF0ZSkgPT4ge1xuICogICByZXR1cm4ge1xuICogICAgIGN1cnJlbnRPdXRwdXQ6IFwic29tZV9uZXdfdmFsdWVcIixcbiAqICAgfTtcbiAqIH1cbiAqXG4gKiBjb25zdCBncmFwaCA9IGdyYXBoQnVpbGRlclxuICogICAuYWRkTm9kZShcIm15Tm9kZVwiLCBteU5vZGUpXG4gKiAgIC4uLlxuICogICAuY29tcGlsZSgpO1xuICogYGBgXG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyB0eXBlIEJhc2VNZXNzYWdlLCBBSU1lc3NhZ2UgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL21lc3NhZ2VzXCI7XG4gKiBpbXBvcnQgeyBTdGF0ZUdyYXBoLCBBbm5vdGF0aW9uIH0gZnJvbSBcIkBsYW5nY2hhaW4vbGFuZ2dyYXBoXCI7XG4gKlxuICogLy8gRGVmaW5lIGEgc3RhdGUgd2l0aCBhIHNpbmdsZSBrZXkgbmFtZWQgXCJtZXNzYWdlc1wiIHRoYXQgd2lsbFxuICogLy8gY29tYmluZSBhIHJldHVybmVkIEJhc2VNZXNzYWdlIG9yIGFycmF5cyBvZiBCYXNlTWVzc2FnZXNcbiAqIGNvbnN0IEFubm90YXRpb25XaXRoUmVkdWNlciA9IEFubm90YXRpb24uUm9vdCh7XG4gKiAgIG1lc3NhZ2VzOiBBbm5vdGF0aW9uPEJhc2VNZXNzYWdlW10+KHtcbiAqICAgICAvLyBEaWZmZXJlbnQgdHlwZXMgYXJlIGFsbG93ZWQgZm9yIHVwZGF0ZXNcbiAqICAgICByZWR1Y2VyOiAobGVmdDogQmFzZU1lc3NhZ2VbXSwgcmlnaHQ6IEJhc2VNZXNzYWdlIHwgQmFzZU1lc3NhZ2VbXSkgPT4ge1xuICogICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmlnaHQpKSB7XG4gKiAgICAgICAgIHJldHVybiBsZWZ0LmNvbmNhdChyaWdodCk7XG4gKiAgICAgICB9XG4gKiAgICAgICByZXR1cm4gbGVmdC5jb25jYXQoW3JpZ2h0XSk7XG4gKiAgICAgfSxcbiAqICAgICBkZWZhdWx0OiAoKSA9PiBbXSxcbiAqICAgfSksXG4gKiB9KTtcbiAqXG4gKiBjb25zdCBncmFwaEJ1aWxkZXIgPSBuZXcgU3RhdGVHcmFwaChBbm5vdGF0aW9uV2l0aFJlZHVjZXIpO1xuICpcbiAqIC8vIEEgbm9kZSBpbiB0aGUgZ3JhcGggdGhhdCByZXR1cm5zIGFuIG9iamVjdCB3aXRoIGEgXCJtZXNzYWdlc1wiIGtleVxuICogLy8gd2lsbCB1cGRhdGUgdGhlIHN0YXRlIGJ5IGNvbWJpbmluZyB0aGUgZXhpc3RpbmcgdmFsdWUgd2l0aCB0aGUgcmV0dXJuZWQgb25lLlxuICogY29uc3QgbXlOb2RlID0gKHN0YXRlOiB0eXBlb2YgQW5ub3RhdGlvbldpdGhSZWR1Y2VyLlN0YXRlKSA9PiB7XG4gKiAgIHJldHVybiB7XG4gKiAgICAgbWVzc2FnZXM6IFtuZXcgQUlNZXNzYWdlKFwiU29tZSBuZXcgcmVzcG9uc2VcIildLFxuICogICB9O1xuICogfTtcbiAqXG4gKiBjb25zdCBncmFwaCA9IGdyYXBoQnVpbGRlclxuICogICAuYWRkTm9kZShcIm15Tm9kZVwiLCBteU5vZGUpXG4gKiAgIC4uLlxuICogICAuY29tcGlsZSgpO1xuICogYGBgXG4gKiBAbmFtZXNwYWNlXG4gKiBAcHJvcGVydHkgUm9vdFxuICogSGVscGVyIGZ1bmN0aW9uIHRoYXQgaW5zdGFudGlhdGVzIGEgU3RhdGVHcmFwaCBzdGF0ZS4gU2VlIHtAbGluayBBbm5vdGF0aW9ufSBmb3IgdXNhZ2UuXG4gKi9cbmV4cG9ydCBjb25zdCBBbm5vdGF0aW9uID0gZnVuY3Rpb24gKGFubm90YXRpb24pIHtcbiAgICBpZiAoaXNDb25maWd1cmVkTWFuYWdlZFZhbHVlKGFubm90YXRpb24pKSB7XG4gICAgICAgIHJldHVybiBhbm5vdGF0aW9uO1xuICAgIH1cbiAgICBlbHNlIGlmIChhbm5vdGF0aW9uKSB7XG4gICAgICAgIHJldHVybiBnZXRDaGFubmVsKGFubm90YXRpb24pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gQHRzLWV4cGVjdC1lcnJvciAtIEFubm90YXRpb24gd2l0aG91dCByZWR1Y2VyXG4gICAgICAgIHJldHVybiBuZXcgTGFzdFZhbHVlKCk7XG4gICAgfVxufTtcbkFubm90YXRpb24uUm9vdCA9IChzZCkgPT4gbmV3IEFubm90YXRpb25Sb290KHNkKTtcbmV4cG9ydCBmdW5jdGlvbiBnZXRDaGFubmVsKHJlZHVjZXIpIHtcbiAgICBpZiAodHlwZW9mIHJlZHVjZXIgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgcmVkdWNlciAmJlxuICAgICAgICBcInJlZHVjZXJcIiBpbiByZWR1Y2VyICYmXG4gICAgICAgIHJlZHVjZXIucmVkdWNlcikge1xuICAgICAgICByZXR1cm4gbmV3IEJpbmFyeU9wZXJhdG9yQWdncmVnYXRlKHJlZHVjZXIucmVkdWNlciwgcmVkdWNlci5kZWZhdWx0KTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiByZWR1Y2VyID09PSBcIm9iamVjdFwiICYmXG4gICAgICAgIHJlZHVjZXIgJiZcbiAgICAgICAgXCJ2YWx1ZVwiIGluIHJlZHVjZXIgJiZcbiAgICAgICAgcmVkdWNlci52YWx1ZSkge1xuICAgICAgICByZXR1cm4gbmV3IEJpbmFyeU9wZXJhdG9yQWdncmVnYXRlKHJlZHVjZXIudmFsdWUsIHJlZHVjZXIuZGVmYXVsdCk7XG4gICAgfVxuICAgIC8vIEB0cy1leHBlY3QtZXJyb3IgLSBBbm5vdGF0aW9uIHdpdGhvdXQgcmVkdWNlclxuICAgIHJldHVybiBuZXcgTGFzdFZhbHVlKCk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/annotation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/graph.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/graph.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Branch: () => (/* binding */ Branch),\n/* harmony export */   CompiledGraph: () => (/* binding */ CompiledGraph),\n/* harmony export */   Graph: () => (/* binding */ Graph)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_runnables_graph__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/runnables/graph */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables/graph.js\");\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-node/validate.js\");\n/* harmony import */ var _pregel_read_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../pregel/read.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/read.js\");\n/* harmony import */ var _pregel_index_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pregel/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/index.js\");\n/* harmony import */ var _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../channels/ephemeral_value.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/ephemeral_value.js\");\n/* harmony import */ var _pregel_write_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../pregel/write.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/write.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _pregel_utils_subgraph_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../pregel/utils/subgraph.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/subgraph.js\");\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\n\n\n\n\n\n\n\n\n\n\n\nclass Branch {\n    constructor(options) {\n        Object.defineProperty(this, \"condition\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ends\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.Runnable.isRunnable(options.path)) {\n            this.condition = options.path;\n        }\n        else {\n            this.condition = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable)(options.path).withConfig({\n                runName: `Branch`,\n            });\n        }\n        this.ends = Array.isArray(options.pathMap)\n            ? options.pathMap.reduce((acc, n) => {\n                acc[n] = n;\n                return acc;\n            }, {})\n            : options.pathMap;\n    }\n    run(writer, reader) {\n        return _pregel_write_js__WEBPACK_IMPORTED_MODULE_5__.ChannelWrite.registerWriter(new _utils_js__WEBPACK_IMPORTED_MODULE_7__.RunnableCallable({\n            trace: false,\n            func: async (input, config) => {\n                try {\n                    return await this._route(input, config, writer, reader);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (e) {\n                    // Detect & warn if NodeInterrupt is thrown in a conditional edge\n                    if (e.name === _errors_js__WEBPACK_IMPORTED_MODULE_8__.NodeInterrupt.unminifiable_name) {\n                        console.warn(\"[WARN]: 'NodeInterrupt' thrown in conditional edge. This is likely a bug in your graph implementation.\\n\" +\n                            \"NodeInterrupt should only be thrown inside a node, not in edge conditions.\");\n                    }\n                    throw e;\n                }\n            },\n        }));\n    }\n    async _route(input, config, writer, reader\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        let result = await this.condition.invoke(reader ? reader(config) : input, config);\n        if (!Array.isArray(result)) {\n            result = [result];\n        }\n        let destinations;\n        if (this.ends) {\n            destinations = result.map((r) => ((0,_constants_js__WEBPACK_IMPORTED_MODULE_6__._isSend)(r) ? r : this.ends[r]));\n        }\n        else {\n            destinations = result;\n        }\n        if (destinations.some((dest) => !dest)) {\n            throw new Error(\"Branch condition returned unknown or null destination\");\n        }\n        if (destinations.filter(_constants_js__WEBPACK_IMPORTED_MODULE_6__._isSend).some((packet) => packet.node === _constants_js__WEBPACK_IMPORTED_MODULE_6__.END)) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_8__.InvalidUpdateError(\"Cannot send a packet to the END node\");\n        }\n        const writeResult = await writer(destinations, config);\n        return writeResult ?? input;\n    }\n}\nclass Graph {\n    constructor() {\n        Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"edges\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"branches\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"entryPoint\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"compiled\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.nodes = {};\n        this.edges = new Set();\n        this.branches = {};\n    }\n    warnIfCompiled(message) {\n        if (this.compiled) {\n            console.warn(message);\n        }\n    }\n    get allEdges() {\n        return this.edges;\n    }\n    addNode(key, action, options) {\n        for (const reservedChar of [\n            _constants_js__WEBPACK_IMPORTED_MODULE_6__.CHECKPOINT_NAMESPACE_SEPARATOR,\n            _constants_js__WEBPACK_IMPORTED_MODULE_6__.CHECKPOINT_NAMESPACE_END,\n        ]) {\n            if (key.includes(reservedChar)) {\n                throw new Error(`\"${reservedChar}\" is a reserved character and is not allowed in node names.`);\n            }\n        }\n        this.warnIfCompiled(`Adding a node to a graph that has already been compiled. This will not be reflected in the compiled graph.`);\n        if (key in this.nodes) {\n            throw new Error(`Node \\`${key}\\` already present.`);\n        }\n        if (key === _constants_js__WEBPACK_IMPORTED_MODULE_6__.END) {\n            throw new Error(`Node \\`${key}\\` is reserved.`);\n        }\n        const runnable = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable)(\n        // Account for arbitrary state due to Send API\n        action);\n        this.nodes[key] = {\n            runnable,\n            metadata: options?.metadata,\n            subgraphs: (0,_pregel_utils_subgraph_js__WEBPACK_IMPORTED_MODULE_9__.isPregelLike)(runnable) ? [runnable] : options?.subgraphs,\n            ends: options?.ends,\n        };\n        return this;\n    }\n    addEdge(startKey, endKey) {\n        this.warnIfCompiled(`Adding an edge to a graph that has already been compiled. This will not be reflected in the compiled graph.`);\n        if (startKey === _constants_js__WEBPACK_IMPORTED_MODULE_6__.END) {\n            throw new Error(\"END cannot be a start node\");\n        }\n        if (endKey === _constants_js__WEBPACK_IMPORTED_MODULE_6__.START) {\n            throw new Error(\"START cannot be an end node\");\n        }\n        if (Array.from(this.edges).some(([start]) => start === startKey) &&\n            !(\"channels\" in this)) {\n            throw new Error(`Already found path for ${startKey}. For multiple edges, use StateGraph.`);\n        }\n        this.edges.add([startKey, endKey]);\n        return this;\n    }\n    addConditionalEdges(source, path, pathMap) {\n        const options = typeof source === \"object\"\n            ? source\n            : {\n                source,\n                path: path,\n                pathMap,\n            };\n        this.warnIfCompiled(\"Adding an edge to a graph that has already been compiled. This will not be reflected in the compiled graph.\");\n        if (!_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.Runnable.isRunnable(options.path)) {\n            const pathDisplayValues = Array.isArray(options.pathMap)\n                ? options.pathMap.join(\",\")\n                : Object.keys(options.pathMap ?? {}).join(\",\");\n            options.path = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable)(options.path).withConfig({\n                runName: `Branch<${options.source}${pathDisplayValues !== \"\" ? `,${pathDisplayValues}` : \"\"}>`.slice(0, 63),\n            });\n        }\n        // find a name for condition\n        const name = options.path.getName() === \"RunnableLambda\"\n            ? \"condition\"\n            : options.path.getName();\n        // validate condition\n        if (this.branches[options.source] && this.branches[options.source][name]) {\n            throw new Error(`Condition \\`${name}\\` already present for node \\`${source}\\``);\n        }\n        // save it\n        if (!this.branches[options.source]) {\n            this.branches[options.source] = {};\n        }\n        this.branches[options.source][name] = new Branch(options);\n        return this;\n    }\n    /**\n     * @deprecated use `addEdge(START, key)` instead\n     */\n    setEntryPoint(key) {\n        this.warnIfCompiled(\"Setting the entry point of a graph that has already been compiled. This will not be reflected in the compiled graph.\");\n        return this.addEdge(_constants_js__WEBPACK_IMPORTED_MODULE_6__.START, key);\n    }\n    /**\n     * @deprecated use `addEdge(key, END)` instead\n     */\n    setFinishPoint(key) {\n        this.warnIfCompiled(\"Setting a finish point of a graph that has already been compiled. This will not be reflected in the compiled graph.\");\n        return this.addEdge(key, _constants_js__WEBPACK_IMPORTED_MODULE_6__.END);\n    }\n    compile({ checkpointer, interruptBefore, interruptAfter, name, } = {}) {\n        // validate the graph\n        this.validate([\n            ...(Array.isArray(interruptBefore) ? interruptBefore : []),\n            ...(Array.isArray(interruptAfter) ? interruptAfter : []),\n        ]);\n        // create empty compiled graph\n        const compiled = new CompiledGraph({\n            builder: this,\n            checkpointer,\n            interruptAfter,\n            interruptBefore,\n            autoValidate: false,\n            nodes: {},\n            channels: {\n                [_constants_js__WEBPACK_IMPORTED_MODULE_6__.START]: new _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_4__.EphemeralValue(),\n                [_constants_js__WEBPACK_IMPORTED_MODULE_6__.END]: new _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_4__.EphemeralValue(),\n            },\n            inputChannels: _constants_js__WEBPACK_IMPORTED_MODULE_6__.START,\n            outputChannels: _constants_js__WEBPACK_IMPORTED_MODULE_6__.END,\n            streamChannels: [],\n            streamMode: \"values\",\n            name,\n        });\n        // attach nodes, edges and branches\n        for (const [key, node] of Object.entries(this.nodes)) {\n            compiled.attachNode(key, node);\n        }\n        for (const [start, end] of this.edges) {\n            compiled.attachEdge(start, end);\n        }\n        for (const [start, branches] of Object.entries(this.branches)) {\n            for (const [name, branch] of Object.entries(branches)) {\n                compiled.attachBranch(start, name, branch);\n            }\n        }\n        return compiled.validate();\n    }\n    validate(interrupt) {\n        // assemble sources\n        const allSources = new Set([...this.allEdges].map(([src, _]) => src));\n        for (const [start] of Object.entries(this.branches)) {\n            allSources.add(start);\n        }\n        for (const source of allSources) {\n            if (source !== _constants_js__WEBPACK_IMPORTED_MODULE_6__.START && !(source in this.nodes)) {\n                throw new Error(`Found edge starting at unknown node \\`${source}\\``);\n            }\n        }\n        // assemble targets\n        const allTargets = new Set([...this.allEdges].map(([_, target]) => target));\n        for (const [start, branches] of Object.entries(this.branches)) {\n            for (const branch of Object.values(branches)) {\n                if (branch.ends) {\n                    for (const end of Object.values(branch.ends)) {\n                        allTargets.add(end);\n                    }\n                }\n                else {\n                    allTargets.add(_constants_js__WEBPACK_IMPORTED_MODULE_6__.END);\n                    for (const node of Object.keys(this.nodes)) {\n                        if (node !== start) {\n                            allTargets.add(node);\n                        }\n                    }\n                }\n            }\n        }\n        for (const node of Object.values(this.nodes)) {\n            for (const target of node.ends ?? []) {\n                allTargets.add(target);\n            }\n        }\n        // validate targets\n        for (const node of Object.keys(this.nodes)) {\n            if (!allTargets.has(node)) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_8__.UnreachableNodeError([\n                    `Node \\`${node}\\` is not reachable.`,\n                    \"\",\n                    \"If you are returning Command objects from your node,\",\n                    'make sure you are passing names of potential destination nodes as an \"ends\" array',\n                    'into \".addNode(..., { ends: [\"node1\", \"node2\"] })\".',\n                ].join(\"\\n\"), {\n                    lc_error_code: \"UNREACHABLE_NODE\",\n                });\n            }\n        }\n        for (const target of allTargets) {\n            if (target !== _constants_js__WEBPACK_IMPORTED_MODULE_6__.END && !(target in this.nodes)) {\n                throw new Error(`Found edge ending at unknown node \\`${target}\\``);\n            }\n        }\n        // validate interrupts\n        if (interrupt) {\n            for (const node of interrupt) {\n                if (!(node in this.nodes)) {\n                    throw new Error(`Interrupt node \\`${node}\\` is not present`);\n                }\n            }\n        }\n        this.compiled = true;\n    }\n}\nclass CompiledGraph extends _pregel_index_js__WEBPACK_IMPORTED_MODULE_3__.Pregel {\n    constructor({ builder, ...rest }) {\n        super(rest);\n        Object.defineProperty(this, \"builder\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.builder = builder;\n    }\n    attachNode(key, node) {\n        this.channels[key] = new _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_4__.EphemeralValue();\n        this.nodes[key] = new _pregel_read_js__WEBPACK_IMPORTED_MODULE_2__.PregelNode({\n            channels: [],\n            triggers: [],\n            metadata: node.metadata,\n            subgraphs: node.subgraphs,\n            ends: node.ends,\n        })\n            .pipe(node.runnable)\n            .pipe(new _pregel_write_js__WEBPACK_IMPORTED_MODULE_5__.ChannelWrite([{ channel: key, value: _pregel_write_js__WEBPACK_IMPORTED_MODULE_5__.PASSTHROUGH }], [_constants_js__WEBPACK_IMPORTED_MODULE_6__.TAG_HIDDEN]));\n        this.streamChannels.push(key);\n    }\n    attachEdge(start, end) {\n        if (end === _constants_js__WEBPACK_IMPORTED_MODULE_6__.END) {\n            if (start === _constants_js__WEBPACK_IMPORTED_MODULE_6__.START) {\n                throw new Error(\"Cannot have an edge from START to END\");\n            }\n            this.nodes[start].writers.push(new _pregel_write_js__WEBPACK_IMPORTED_MODULE_5__.ChannelWrite([{ channel: _constants_js__WEBPACK_IMPORTED_MODULE_6__.END, value: _pregel_write_js__WEBPACK_IMPORTED_MODULE_5__.PASSTHROUGH }], [_constants_js__WEBPACK_IMPORTED_MODULE_6__.TAG_HIDDEN]));\n        }\n        else {\n            this.nodes[end].triggers.push(start);\n            this.nodes[end].channels.push(start);\n        }\n    }\n    attachBranch(start, name, branch) {\n        // add hidden start node\n        if (start === _constants_js__WEBPACK_IMPORTED_MODULE_6__.START && this.nodes[_constants_js__WEBPACK_IMPORTED_MODULE_6__.START]) {\n            this.nodes[_constants_js__WEBPACK_IMPORTED_MODULE_6__.START] = _pregel_index_js__WEBPACK_IMPORTED_MODULE_3__.Channel.subscribeTo(_constants_js__WEBPACK_IMPORTED_MODULE_6__.START, { tags: [_constants_js__WEBPACK_IMPORTED_MODULE_6__.TAG_HIDDEN] });\n        }\n        // attach branch writer\n        this.nodes[start].pipe(branch.run((dests) => {\n            const writes = dests.map((dest) => {\n                if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_6__._isSend)(dest)) {\n                    return dest;\n                }\n                return {\n                    channel: dest === _constants_js__WEBPACK_IMPORTED_MODULE_6__.END ? _constants_js__WEBPACK_IMPORTED_MODULE_6__.END : `branch:${start}:${name}:${dest}`,\n                    value: _pregel_write_js__WEBPACK_IMPORTED_MODULE_5__.PASSTHROUGH,\n                };\n            });\n            return new _pregel_write_js__WEBPACK_IMPORTED_MODULE_5__.ChannelWrite(writes, [_constants_js__WEBPACK_IMPORTED_MODULE_6__.TAG_HIDDEN]);\n        }));\n        // attach branch readers\n        const ends = branch.ends\n            ? Object.values(branch.ends)\n            : Object.keys(this.nodes);\n        for (const end of ends) {\n            if (end !== _constants_js__WEBPACK_IMPORTED_MODULE_6__.END) {\n                const channelName = `branch:${start}:${name}:${end}`;\n                this.channels[channelName] =\n                    new _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_4__.EphemeralValue();\n                this.nodes[end].triggers.push(channelName);\n                this.nodes[end].channels.push(channelName);\n            }\n        }\n    }\n    /**\n     * Returns a drawable representation of the computation graph.\n     */\n    async getGraphAsync(config) {\n        const xray = config?.xray;\n        const graph = new _langchain_core_runnables_graph__WEBPACK_IMPORTED_MODULE_1__.Graph();\n        const startNodes = {\n            [_constants_js__WEBPACK_IMPORTED_MODULE_6__.START]: graph.addNode({\n                schema: zod__WEBPACK_IMPORTED_MODULE_10__.z.any(),\n            }, _constants_js__WEBPACK_IMPORTED_MODULE_6__.START),\n        };\n        const endNodes = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let subgraphs = {};\n        if (xray) {\n            subgraphs = Object.fromEntries((await (0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.gatherIterator)(this.getSubgraphsAsync())).filter(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (x) => isCompiledGraph(x[1])));\n        }\n        function addEdge(start, end, label, conditional = false) {\n            if (end === _constants_js__WEBPACK_IMPORTED_MODULE_6__.END && endNodes[_constants_js__WEBPACK_IMPORTED_MODULE_6__.END] === undefined) {\n                endNodes[_constants_js__WEBPACK_IMPORTED_MODULE_6__.END] = graph.addNode({ schema: zod__WEBPACK_IMPORTED_MODULE_10__.z.any() }, _constants_js__WEBPACK_IMPORTED_MODULE_6__.END);\n            }\n            return graph.addEdge(startNodes[start], endNodes[end], label !== end ? label : undefined, conditional);\n        }\n        for (const [key, nodeSpec] of Object.entries(this.builder.nodes)) {\n            const displayKey = _escapeMermaidKeywords(key);\n            const node = nodeSpec.runnable;\n            const metadata = nodeSpec.metadata ?? {};\n            if (this.interruptBefore?.includes(key) &&\n                this.interruptAfter?.includes(key)) {\n                metadata.__interrupt = \"before,after\";\n            }\n            else if (this.interruptBefore?.includes(key)) {\n                metadata.__interrupt = \"before\";\n            }\n            else if (this.interruptAfter?.includes(key)) {\n                metadata.__interrupt = \"after\";\n            }\n            if (xray) {\n                const newXrayValue = typeof xray === \"number\" ? xray - 1 : xray;\n                const drawableSubgraph = subgraphs[key] !== undefined\n                    ? await subgraphs[key].getGraphAsync({\n                        ...config,\n                        xray: newXrayValue,\n                    })\n                    : node.getGraph(config);\n                drawableSubgraph.trimFirstNode();\n                drawableSubgraph.trimLastNode();\n                if (Object.keys(drawableSubgraph.nodes).length > 1) {\n                    const [e, s] = graph.extend(drawableSubgraph, displayKey);\n                    if (e === undefined) {\n                        throw new Error(`Could not extend subgraph \"${key}\" due to missing entrypoint.`);\n                    }\n                    // TODO: Remove default name once we stop supporting core 0.2.0\n                    // eslint-disable-next-line no-inner-declarations\n                    function _isRunnableInterface(\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    thing) {\n                        return thing ? thing.lc_runnable : false;\n                    }\n                    // eslint-disable-next-line no-inner-declarations\n                    function _nodeDataStr(id, data) {\n                        if (id !== undefined && !(0,uuid__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(id)) {\n                            return id;\n                        }\n                        else if (_isRunnableInterface(data)) {\n                            try {\n                                let dataStr = data.getName();\n                                dataStr = dataStr.startsWith(\"Runnable\")\n                                    ? dataStr.slice(\"Runnable\".length)\n                                    : dataStr;\n                                return dataStr;\n                            }\n                            catch (error) {\n                                return data.getName();\n                            }\n                        }\n                        else {\n                            return data.name ?? \"UnknownSchema\";\n                        }\n                    }\n                    // TODO: Remove casts when we stop supporting core 0.2.0\n                    if (s !== undefined) {\n                        startNodes[displayKey] = {\n                            name: _nodeDataStr(s.id, s.data),\n                            ...s,\n                        };\n                    }\n                    endNodes[displayKey] = {\n                        name: _nodeDataStr(e.id, e.data),\n                        ...e,\n                    };\n                }\n                else {\n                    // TODO: Remove when we stop supporting core 0.2.0\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    const newNode = graph.addNode(node, displayKey, metadata);\n                    startNodes[displayKey] = newNode;\n                    endNodes[displayKey] = newNode;\n                }\n            }\n            else {\n                // TODO: Remove when we stop supporting core 0.2.0\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                const newNode = graph.addNode(node, displayKey, metadata);\n                startNodes[displayKey] = newNode;\n                endNodes[displayKey] = newNode;\n            }\n        }\n        const sortedEdges = [...this.builder.allEdges].sort(([a], [b]) => {\n            if (a < b) {\n                return -1;\n            }\n            else if (b > a) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n        for (const [start, end] of sortedEdges) {\n            addEdge(_escapeMermaidKeywords(start), _escapeMermaidKeywords(end));\n        }\n        for (const [start, branches] of Object.entries(this.builder.branches)) {\n            const defaultEnds = {\n                ...Object.fromEntries(Object.keys(this.builder.nodes)\n                    .filter((k) => k !== start)\n                    .map((k) => [_escapeMermaidKeywords(k), _escapeMermaidKeywords(k)])),\n                [_constants_js__WEBPACK_IMPORTED_MODULE_6__.END]: _constants_js__WEBPACK_IMPORTED_MODULE_6__.END,\n            };\n            for (const branch of Object.values(branches)) {\n                let ends;\n                if (branch.ends !== undefined) {\n                    ends = branch.ends;\n                }\n                else {\n                    ends = defaultEnds;\n                }\n                for (const [label, end] of Object.entries(ends)) {\n                    addEdge(_escapeMermaidKeywords(start), _escapeMermaidKeywords(end), label, true);\n                }\n            }\n        }\n        for (const [key, node] of Object.entries(this.builder.nodes)) {\n            if (node.ends !== undefined) {\n                for (const end of node.ends) {\n                    addEdge(_escapeMermaidKeywords(key), _escapeMermaidKeywords(end), undefined, true);\n                }\n            }\n        }\n        return graph;\n    }\n    /**\n     * Returns a drawable representation of the computation graph.\n     *\n     * @deprecated Use getGraphAsync instead. The async method will be the default in the next minor core release.\n     */\n    getGraph(config) {\n        const xray = config?.xray;\n        const graph = new _langchain_core_runnables_graph__WEBPACK_IMPORTED_MODULE_1__.Graph();\n        const startNodes = {\n            [_constants_js__WEBPACK_IMPORTED_MODULE_6__.START]: graph.addNode({\n                schema: zod__WEBPACK_IMPORTED_MODULE_10__.z.any(),\n            }, _constants_js__WEBPACK_IMPORTED_MODULE_6__.START),\n        };\n        const endNodes = {};\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let subgraphs = {};\n        if (xray) {\n            subgraphs = Object.fromEntries((0,_utils_js__WEBPACK_IMPORTED_MODULE_7__.gatherIteratorSync)(this.getSubgraphs()).filter(\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            (x) => isCompiledGraph(x[1])));\n        }\n        function addEdge(start, end, label, conditional = false) {\n            if (end === _constants_js__WEBPACK_IMPORTED_MODULE_6__.END && endNodes[_constants_js__WEBPACK_IMPORTED_MODULE_6__.END] === undefined) {\n                endNodes[_constants_js__WEBPACK_IMPORTED_MODULE_6__.END] = graph.addNode({ schema: zod__WEBPACK_IMPORTED_MODULE_10__.z.any() }, _constants_js__WEBPACK_IMPORTED_MODULE_6__.END);\n            }\n            return graph.addEdge(startNodes[start], endNodes[end], label !== end ? label : undefined, conditional);\n        }\n        for (const [key, nodeSpec] of Object.entries(this.builder.nodes)) {\n            const displayKey = _escapeMermaidKeywords(key);\n            const node = nodeSpec.runnable;\n            const metadata = nodeSpec.metadata ?? {};\n            if (this.interruptBefore?.includes(key) &&\n                this.interruptAfter?.includes(key)) {\n                metadata.__interrupt = \"before,after\";\n            }\n            else if (this.interruptBefore?.includes(key)) {\n                metadata.__interrupt = \"before\";\n            }\n            else if (this.interruptAfter?.includes(key)) {\n                metadata.__interrupt = \"after\";\n            }\n            if (xray) {\n                const newXrayValue = typeof xray === \"number\" ? xray - 1 : xray;\n                const drawableSubgraph = subgraphs[key] !== undefined\n                    ? subgraphs[key].getGraph({\n                        ...config,\n                        xray: newXrayValue,\n                    })\n                    : node.getGraph(config);\n                drawableSubgraph.trimFirstNode();\n                drawableSubgraph.trimLastNode();\n                if (Object.keys(drawableSubgraph.nodes).length > 1) {\n                    const [e, s] = graph.extend(drawableSubgraph, displayKey);\n                    if (e === undefined) {\n                        throw new Error(`Could not extend subgraph \"${key}\" due to missing entrypoint.`);\n                    }\n                    // TODO: Remove default name once we stop supporting core 0.2.0\n                    // eslint-disable-next-line no-inner-declarations\n                    function _isRunnableInterface(\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    thing) {\n                        return thing ? thing.lc_runnable : false;\n                    }\n                    // eslint-disable-next-line no-inner-declarations\n                    function _nodeDataStr(id, data) {\n                        if (id !== undefined && !(0,uuid__WEBPACK_IMPORTED_MODULE_11__[\"default\"])(id)) {\n                            return id;\n                        }\n                        else if (_isRunnableInterface(data)) {\n                            try {\n                                let dataStr = data.getName();\n                                dataStr = dataStr.startsWith(\"Runnable\")\n                                    ? dataStr.slice(\"Runnable\".length)\n                                    : dataStr;\n                                return dataStr;\n                            }\n                            catch (error) {\n                                return data.getName();\n                            }\n                        }\n                        else {\n                            return data.name ?? \"UnknownSchema\";\n                        }\n                    }\n                    // TODO: Remove casts when we stop supporting core 0.2.0\n                    if (s !== undefined) {\n                        startNodes[displayKey] = {\n                            name: _nodeDataStr(s.id, s.data),\n                            ...s,\n                        };\n                    }\n                    endNodes[displayKey] = {\n                        name: _nodeDataStr(e.id, e.data),\n                        ...e,\n                    };\n                }\n                else {\n                    // TODO: Remove when we stop supporting core 0.2.0\n                    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                    // @ts-ignore\n                    const newNode = graph.addNode(node, displayKey, metadata);\n                    startNodes[displayKey] = newNode;\n                    endNodes[displayKey] = newNode;\n                }\n            }\n            else {\n                // TODO: Remove when we stop supporting core 0.2.0\n                // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n                // @ts-ignore\n                const newNode = graph.addNode(node, displayKey, metadata);\n                startNodes[displayKey] = newNode;\n                endNodes[displayKey] = newNode;\n            }\n        }\n        const sortedEdges = [...this.builder.allEdges].sort(([a], [b]) => {\n            if (a < b) {\n                return -1;\n            }\n            else if (b > a) {\n                return 1;\n            }\n            else {\n                return 0;\n            }\n        });\n        for (const [start, end] of sortedEdges) {\n            addEdge(_escapeMermaidKeywords(start), _escapeMermaidKeywords(end));\n        }\n        for (const [start, branches] of Object.entries(this.builder.branches)) {\n            const defaultEnds = {\n                ...Object.fromEntries(Object.keys(this.builder.nodes)\n                    .filter((k) => k !== start)\n                    .map((k) => [_escapeMermaidKeywords(k), _escapeMermaidKeywords(k)])),\n                [_constants_js__WEBPACK_IMPORTED_MODULE_6__.END]: _constants_js__WEBPACK_IMPORTED_MODULE_6__.END,\n            };\n            for (const branch of Object.values(branches)) {\n                let ends;\n                if (branch.ends !== undefined) {\n                    ends = branch.ends;\n                }\n                else {\n                    ends = defaultEnds;\n                }\n                for (const [label, end] of Object.entries(ends)) {\n                    addEdge(_escapeMermaidKeywords(start), _escapeMermaidKeywords(end), label, true);\n                }\n            }\n        }\n        return graph;\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isCompiledGraph(x) {\n    return (\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    typeof x.attachNode === \"function\" &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        typeof x.attachEdge === \"function\");\n}\nfunction _escapeMermaidKeywords(key) {\n    if (key === \"subgraph\") {\n        return `\"${key}\"`;\n    }\n    return key;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/graph.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/index.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/index.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Annotation: () => (/* reexport safe */ _annotation_js__WEBPACK_IMPORTED_MODULE_0__.Annotation),\n/* harmony export */   AnnotationRoot: () => (/* reexport safe */ _annotation_js__WEBPACK_IMPORTED_MODULE_0__.AnnotationRoot),\n/* harmony export */   CompiledStateGraph: () => (/* reexport safe */ _state_js__WEBPACK_IMPORTED_MODULE_2__.CompiledStateGraph),\n/* harmony export */   Graph: () => (/* reexport safe */ _graph_js__WEBPACK_IMPORTED_MODULE_1__.Graph),\n/* harmony export */   MessageGraph: () => (/* reexport safe */ _message_js__WEBPACK_IMPORTED_MODULE_3__.MessageGraph),\n/* harmony export */   StateGraph: () => (/* reexport safe */ _state_js__WEBPACK_IMPORTED_MODULE_2__.StateGraph),\n/* harmony export */   messagesStateReducer: () => (/* reexport safe */ _message_js__WEBPACK_IMPORTED_MODULE_3__.messagesStateReducer)\n/* harmony export */ });\n/* harmony import */ var _annotation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./annotation.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/annotation.js\");\n/* harmony import */ var _graph_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./graph.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/graph.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./state.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/state.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./message.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/message.js\");\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2dyYXBoL2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQThEO0FBQzNCO0FBQzBCO0FBQ00iLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvZ3JhcGgvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgQW5ub3RhdGlvbiwgQW5ub3RhdGlvblJvb3QsIH0gZnJvbSBcIi4vYW5ub3RhdGlvbi5qc1wiO1xuZXhwb3J0IHsgR3JhcGggfSBmcm9tIFwiLi9ncmFwaC5qc1wiO1xuZXhwb3J0IHsgU3RhdGVHcmFwaCwgQ29tcGlsZWRTdGF0ZUdyYXBoLCB9IGZyb20gXCIuL3N0YXRlLmpzXCI7XG5leHBvcnQgeyBNZXNzYWdlR3JhcGgsIG1lc3NhZ2VzU3RhdGVSZWR1Y2VyLCB9IGZyb20gXCIuL21lc3NhZ2UuanNcIjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/message.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/message.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MessageGraph: () => (/* binding */ MessageGraph),\n/* harmony export */   messagesStateReducer: () => (/* binding */ messagesStateReducer)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-node/v4.js\");\n/* harmony import */ var _state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./state.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/state.js\");\n\n\n\n/**\n * Prebuilt reducer that combines returned messages.\n * Can handle standard messages and special modifiers like {@link RemoveMessage}\n * instances.\n */\nfunction messagesStateReducer(left, right) {\n    const leftArray = Array.isArray(left) ? left : [left];\n    const rightArray = Array.isArray(right) ? right : [right];\n    // coerce to message\n    const leftMessages = leftArray.map(_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.coerceMessageLikeToMessage);\n    const rightMessages = rightArray.map(_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.coerceMessageLikeToMessage);\n    // assign missing ids\n    for (const m of leftMessages) {\n        if (m.id === null || m.id === undefined) {\n            m.id = (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n            m.lc_kwargs.id = m.id;\n        }\n    }\n    for (const m of rightMessages) {\n        if (m.id === null || m.id === undefined) {\n            m.id = (0,uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n            m.lc_kwargs.id = m.id;\n        }\n    }\n    // merge\n    const merged = [...leftMessages];\n    const mergedById = new Map(merged.map((m, i) => [m.id, i]));\n    const idsToRemove = new Set();\n    for (const m of rightMessages) {\n        const existingIdx = mergedById.get(m.id);\n        if (existingIdx !== undefined) {\n            if (m._getType() === \"remove\") {\n                idsToRemove.add(m.id);\n            }\n            else {\n                idsToRemove.delete(m.id);\n                merged[existingIdx] = m;\n            }\n        }\n        else {\n            if (m._getType() === \"remove\") {\n                throw new Error(`Attempting to delete a message with an ID that doesn't exist ('${m.id}')`);\n            }\n            mergedById.set(m.id, merged.length);\n            merged.push(m);\n        }\n    }\n    return merged.filter((m) => !idsToRemove.has(m.id));\n}\n/** @ignore */\nclass MessageGraph extends _state_js__WEBPACK_IMPORTED_MODULE_1__.StateGraph {\n    constructor() {\n        super({\n            channels: {\n                __root__: {\n                    reducer: messagesStateReducer,\n                    default: () => [],\n                },\n            },\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2dyYXBoL21lc3NhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBdUU7QUFDN0M7QUFDYztBQUN4QztBQUNBO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBLHVDQUF1QyxnRkFBMEI7QUFDakUseUNBQXlDLGdGQUEwQjtBQUNuRTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsZ0RBQUU7QUFDckI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixnREFBRTtBQUNyQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esa0dBQWtHLEtBQUs7QUFDdkc7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQixpREFBVTtBQUM1QztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakIsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2dyYXBoL21lc3NhZ2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgY29lcmNlTWVzc2FnZUxpa2VUb01lc3NhZ2UsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9tZXNzYWdlc1wiO1xuaW1wb3J0IHsgdjQgfSBmcm9tIFwidXVpZFwiO1xuaW1wb3J0IHsgU3RhdGVHcmFwaCB9IGZyb20gXCIuL3N0YXRlLmpzXCI7XG4vKipcbiAqIFByZWJ1aWx0IHJlZHVjZXIgdGhhdCBjb21iaW5lcyByZXR1cm5lZCBtZXNzYWdlcy5cbiAqIENhbiBoYW5kbGUgc3RhbmRhcmQgbWVzc2FnZXMgYW5kIHNwZWNpYWwgbW9kaWZpZXJzIGxpa2Uge0BsaW5rIFJlbW92ZU1lc3NhZ2V9XG4gKiBpbnN0YW5jZXMuXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBtZXNzYWdlc1N0YXRlUmVkdWNlcihsZWZ0LCByaWdodCkge1xuICAgIGNvbnN0IGxlZnRBcnJheSA9IEFycmF5LmlzQXJyYXkobGVmdCkgPyBsZWZ0IDogW2xlZnRdO1xuICAgIGNvbnN0IHJpZ2h0QXJyYXkgPSBBcnJheS5pc0FycmF5KHJpZ2h0KSA/IHJpZ2h0IDogW3JpZ2h0XTtcbiAgICAvLyBjb2VyY2UgdG8gbWVzc2FnZVxuICAgIGNvbnN0IGxlZnRNZXNzYWdlcyA9IGxlZnRBcnJheS5tYXAoY29lcmNlTWVzc2FnZUxpa2VUb01lc3NhZ2UpO1xuICAgIGNvbnN0IHJpZ2h0TWVzc2FnZXMgPSByaWdodEFycmF5Lm1hcChjb2VyY2VNZXNzYWdlTGlrZVRvTWVzc2FnZSk7XG4gICAgLy8gYXNzaWduIG1pc3NpbmcgaWRzXG4gICAgZm9yIChjb25zdCBtIG9mIGxlZnRNZXNzYWdlcykge1xuICAgICAgICBpZiAobS5pZCA9PT0gbnVsbCB8fCBtLmlkID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIG0uaWQgPSB2NCgpO1xuICAgICAgICAgICAgbS5sY19rd2FyZ3MuaWQgPSBtLmlkO1xuICAgICAgICB9XG4gICAgfVxuICAgIGZvciAoY29uc3QgbSBvZiByaWdodE1lc3NhZ2VzKSB7XG4gICAgICAgIGlmIChtLmlkID09PSBudWxsIHx8IG0uaWQgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgbS5pZCA9IHY0KCk7XG4gICAgICAgICAgICBtLmxjX2t3YXJncy5pZCA9IG0uaWQ7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gbWVyZ2VcbiAgICBjb25zdCBtZXJnZWQgPSBbLi4ubGVmdE1lc3NhZ2VzXTtcbiAgICBjb25zdCBtZXJnZWRCeUlkID0gbmV3IE1hcChtZXJnZWQubWFwKChtLCBpKSA9PiBbbS5pZCwgaV0pKTtcbiAgICBjb25zdCBpZHNUb1JlbW92ZSA9IG5ldyBTZXQoKTtcbiAgICBmb3IgKGNvbnN0IG0gb2YgcmlnaHRNZXNzYWdlcykge1xuICAgICAgICBjb25zdCBleGlzdGluZ0lkeCA9IG1lcmdlZEJ5SWQuZ2V0KG0uaWQpO1xuICAgICAgICBpZiAoZXhpc3RpbmdJZHggIT09IHVuZGVmaW5lZCkge1xuICAgICAgICAgICAgaWYgKG0uX2dldFR5cGUoKSA9PT0gXCJyZW1vdmVcIikge1xuICAgICAgICAgICAgICAgIGlkc1RvUmVtb3ZlLmFkZChtLmlkKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGlkc1RvUmVtb3ZlLmRlbGV0ZShtLmlkKTtcbiAgICAgICAgICAgICAgICBtZXJnZWRbZXhpc3RpbmdJZHhdID0gbTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGlmIChtLl9nZXRUeXBlKCkgPT09IFwicmVtb3ZlXCIpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYEF0dGVtcHRpbmcgdG8gZGVsZXRlIGEgbWVzc2FnZSB3aXRoIGFuIElEIHRoYXQgZG9lc24ndCBleGlzdCAoJyR7bS5pZH0nKWApO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWVyZ2VkQnlJZC5zZXQobS5pZCwgbWVyZ2VkLmxlbmd0aCk7XG4gICAgICAgICAgICBtZXJnZWQucHVzaChtKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWVyZ2VkLmZpbHRlcigobSkgPT4gIWlkc1RvUmVtb3ZlLmhhcyhtLmlkKSk7XG59XG4vKiogQGlnbm9yZSAqL1xuZXhwb3J0IGNsYXNzIE1lc3NhZ2VHcmFwaCBleHRlbmRzIFN0YXRlR3JhcGgge1xuICAgIGNvbnN0cnVjdG9yKCkge1xuICAgICAgICBzdXBlcih7XG4gICAgICAgICAgICBjaGFubmVsczoge1xuICAgICAgICAgICAgICAgIF9fcm9vdF9fOiB7XG4gICAgICAgICAgICAgICAgICAgIHJlZHVjZXI6IG1lc3NhZ2VzU3RhdGVSZWR1Y2VyLFxuICAgICAgICAgICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiBbXSxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/message.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/messages_annotation.js":
/*!*************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/messages_annotation.js ***!
  \*************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MessagesAnnotation: () => (/* binding */ MessagesAnnotation)\n/* harmony export */ });\n/* harmony import */ var _annotation_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./annotation.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/annotation.js\");\n/* harmony import */ var _message_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./message.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/message.js\");\n/* __LC_ALLOW_ENTRYPOINT_SIDE_EFFECTS__ */\n\n\n/**\n * Prebuilt state annotation that combines returned messages.\n * Can handle standard messages and special modifiers like {@link RemoveMessage}\n * instances.\n *\n * Specifically, importing and using the prebuilt MessagesAnnotation like this:\n *\n * @example\n * ```ts\n * import { MessagesAnnotation, StateGraph } from \"@langchain/langgraph\";\n *\n * const graph = new StateGraph(MessagesAnnotation)\n *   .addNode(...)\n *   ...\n * ```\n *\n * Is equivalent to initializing your state manually like this:\n *\n * @example\n * ```ts\n * import { BaseMessage } from \"@langchain/core/messages\";\n * import { Annotation, StateGraph, messagesStateReducer } from \"@langchain/langgraph\";\n *\n * export const StateAnnotation = Annotation.Root({\n *   messages: Annotation<BaseMessage[]>({\n *     reducer: messagesStateReducer,\n *     default: () => [],\n *   }),\n * });\n *\n * const graph = new StateGraph(StateAnnotation)\n *   .addNode(...)\n *   ...\n * ```\n */\nconst MessagesAnnotation = _annotation_js__WEBPACK_IMPORTED_MODULE_0__.Annotation.Root({\n    messages: (0,_annotation_js__WEBPACK_IMPORTED_MODULE_0__.Annotation)({\n        reducer: _message_js__WEBPACK_IMPORTED_MODULE_1__.messagesStateReducer,\n        default: () => [],\n    }),\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2dyYXBoL21lc3NhZ2VzX2Fubm90YXRpb24uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUE7QUFDNkM7QUFDTztBQUNwRDtBQUNBO0FBQ0EsNERBQTREO0FBQzVEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFlBQVksaUNBQWlDO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWSxjQUFjO0FBQzFCLFlBQVksK0NBQStDO0FBQzNEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxNQUFNO0FBQ04sSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDJCQUEyQixzREFBVTtBQUM1QyxjQUFjLDBEQUFVO0FBQ3hCLGlCQUFpQiw2REFBb0I7QUFDckM7QUFDQSxLQUFLO0FBQ0wsQ0FBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL0BsYW5nY2hhaW4rbGFuZ2dyYXBoQDAuMi40Nl9AbGFuZ2NoYWluK2NvcmVAMC4zLjQwX29wZW5haUA0Ljg1LjJfd3NAOC4xOC4wX2J1ZmZlcnV0aWxANC4wLjlfdV9hZWwzNGdkcXMzeGJlY2R3Nzd4aWxzeGVtZS9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9sYW5nZ3JhcGgvZGlzdC9ncmFwaC9tZXNzYWdlc19hbm5vdGF0aW9uLmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIF9fTENfQUxMT1dfRU5UUllQT0lOVF9TSURFX0VGRkVDVFNfXyAqL1xuaW1wb3J0IHsgQW5ub3RhdGlvbiB9IGZyb20gXCIuL2Fubm90YXRpb24uanNcIjtcbmltcG9ydCB7IG1lc3NhZ2VzU3RhdGVSZWR1Y2VyIH0gZnJvbSBcIi4vbWVzc2FnZS5qc1wiO1xuLyoqXG4gKiBQcmVidWlsdCBzdGF0ZSBhbm5vdGF0aW9uIHRoYXQgY29tYmluZXMgcmV0dXJuZWQgbWVzc2FnZXMuXG4gKiBDYW4gaGFuZGxlIHN0YW5kYXJkIG1lc3NhZ2VzIGFuZCBzcGVjaWFsIG1vZGlmaWVycyBsaWtlIHtAbGluayBSZW1vdmVNZXNzYWdlfVxuICogaW5zdGFuY2VzLlxuICpcbiAqIFNwZWNpZmljYWxseSwgaW1wb3J0aW5nIGFuZCB1c2luZyB0aGUgcHJlYnVpbHQgTWVzc2FnZXNBbm5vdGF0aW9uIGxpa2UgdGhpczpcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHNcbiAqIGltcG9ydCB7IE1lc3NhZ2VzQW5ub3RhdGlvbiwgU3RhdGVHcmFwaCB9IGZyb20gXCJAbGFuZ2NoYWluL2xhbmdncmFwaFwiO1xuICpcbiAqIGNvbnN0IGdyYXBoID0gbmV3IFN0YXRlR3JhcGgoTWVzc2FnZXNBbm5vdGF0aW9uKVxuICogICAuYWRkTm9kZSguLi4pXG4gKiAgIC4uLlxuICogYGBgXG4gKlxuICogSXMgZXF1aXZhbGVudCB0byBpbml0aWFsaXppbmcgeW91ciBzdGF0ZSBtYW51YWxseSBsaWtlIHRoaXM6XG4gKlxuICogQGV4YW1wbGVcbiAqIGBgYHRzXG4gKiBpbXBvcnQgeyBCYXNlTWVzc2FnZSB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvbWVzc2FnZXNcIjtcbiAqIGltcG9ydCB7IEFubm90YXRpb24sIFN0YXRlR3JhcGgsIG1lc3NhZ2VzU3RhdGVSZWR1Y2VyIH0gZnJvbSBcIkBsYW5nY2hhaW4vbGFuZ2dyYXBoXCI7XG4gKlxuICogZXhwb3J0IGNvbnN0IFN0YXRlQW5ub3RhdGlvbiA9IEFubm90YXRpb24uUm9vdCh7XG4gKiAgIG1lc3NhZ2VzOiBBbm5vdGF0aW9uPEJhc2VNZXNzYWdlW10+KHtcbiAqICAgICByZWR1Y2VyOiBtZXNzYWdlc1N0YXRlUmVkdWNlcixcbiAqICAgICBkZWZhdWx0OiAoKSA9PiBbXSxcbiAqICAgfSksXG4gKiB9KTtcbiAqXG4gKiBjb25zdCBncmFwaCA9IG5ldyBTdGF0ZUdyYXBoKFN0YXRlQW5ub3RhdGlvbilcbiAqICAgLmFkZE5vZGUoLi4uKVxuICogICAuLi5cbiAqIGBgYFxuICovXG5leHBvcnQgY29uc3QgTWVzc2FnZXNBbm5vdGF0aW9uID0gQW5ub3RhdGlvbi5Sb290KHtcbiAgICBtZXNzYWdlczogQW5ub3RhdGlvbih7XG4gICAgICAgIHJlZHVjZXI6IG1lc3NhZ2VzU3RhdGVSZWR1Y2VyLFxuICAgICAgICBkZWZhdWx0OiAoKSA9PiBbXSxcbiAgICB9KSxcbn0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/messages_annotation.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/state.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/state.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CompiledStateGraph: () => (/* binding */ CompiledStateGraph),\n/* harmony export */   StateGraph: () => (/* binding */ StateGraph)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _channels_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../channels/base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js\");\n/* harmony import */ var _graph_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./graph.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/graph.js\");\n/* harmony import */ var _pregel_write_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../pregel/write.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/write.js\");\n/* harmony import */ var _pregel_read_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../pregel/read.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/read.js\");\n/* harmony import */ var _channels_named_barrier_value_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../channels/named_barrier_value.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/named_barrier_value.js\");\n/* harmony import */ var _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../channels/ephemeral_value.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/ephemeral_value.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _annotation_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./annotation.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/annotation.js\");\n/* harmony import */ var _managed_base_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ../managed/base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/base.js\");\n/* harmony import */ var _pregel_utils_subgraph_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ../pregel/utils/subgraph.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/subgraph.js\");\n/* eslint-disable @typescript-eslint/no-use-before-define */\n\n\n\n\n\n\n\n\n\n\n\n\n\nconst ROOT = \"__root__\";\n/**\n * A graph whose nodes communicate by reading and writing to a shared state.\n * Each node takes a defined `State` as input and returns a `Partial<State>`.\n *\n * Each state key can optionally be annotated with a reducer function that\n * will be used to aggregate the values of that key received from multiple nodes.\n * The signature of a reducer function is (left: Value, right: UpdateValue) => Value.\n *\n * See {@link Annotation} for more on defining state.\n *\n * After adding nodes and edges to your graph, you must call `.compile()` on it before\n * you can use it.\n *\n * @example\n * ```ts\n * import {\n *   type BaseMessage,\n *   AIMessage,\n *   HumanMessage,\n * } from \"@langchain/core/messages\";\n * import { StateGraph, Annotation } from \"@langchain/langgraph\";\n *\n * // Define a state with a single key named \"messages\" that will\n * // combine a returned BaseMessage or arrays of BaseMessages\n * const StateAnnotation = Annotation.Root({\n *   sentiment: Annotation<string>,\n *   messages: Annotation<BaseMessage[]>({\n *     reducer: (left: BaseMessage[], right: BaseMessage | BaseMessage[]) => {\n *       if (Array.isArray(right)) {\n *         return left.concat(right);\n *       }\n *       return left.concat([right]);\n *     },\n *     default: () => [],\n *   }),\n * });\n *\n * const graphBuilder = new StateGraph(StateAnnotation);\n *\n * // A node in the graph that returns an object with a \"messages\" key\n * // will update the state by combining the existing value with the returned one.\n * const myNode = (state: typeof StateAnnotation.State) => {\n *   return {\n *     messages: [new AIMessage(\"Some new response\")],\n *     sentiment: \"positive\",\n *   };\n * };\n *\n * const graph = graphBuilder\n *   .addNode(\"myNode\", myNode)\n *   .addEdge(\"__start__\", \"myNode\")\n *   .addEdge(\"myNode\", \"__end__\")\n *   .compile();\n *\n * await graph.invoke({ messages: [new HumanMessage(\"how are you?\")] });\n *\n * // {\n * //   messages: [HumanMessage(\"how are you?\"), AIMessage(\"Some new response\")],\n * //   sentiment: \"positive\",\n * // }\n * ```\n */\nclass StateGraph extends _graph_js__WEBPACK_IMPORTED_MODULE_2__.Graph {\n    constructor(fields, configSchema) {\n        super();\n        Object.defineProperty(this, \"channels\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        // TODO: this doesn't dedupe edges as in py, so worth fixing at some point\n        Object.defineProperty(this, \"waitingEdges\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Set()\n        });\n        /** @internal */\n        Object.defineProperty(this, \"_schemaDefinition\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @internal */\n        Object.defineProperty(this, \"_inputDefinition\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /** @internal */\n        Object.defineProperty(this, \"_outputDefinition\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        /**\n         * Map schemas to managed values\n         * @internal\n         */\n        Object.defineProperty(this, \"_schemaDefinitions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: new Map()\n        });\n        /** @internal Used only for typing. */\n        Object.defineProperty(this, \"_configSchema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        if (isStateGraphArgsWithInputOutputSchemas(fields)) {\n            this._schemaDefinition = fields.input.spec;\n            this._inputDefinition = fields.input.spec;\n            this._outputDefinition = fields.output.spec;\n        }\n        else if (isStateGraphArgsWithStateSchema(fields)) {\n            this._schemaDefinition = fields.stateSchema.spec;\n            this._inputDefinition = (fields.input?.spec ??\n                this._schemaDefinition);\n            this._outputDefinition = (fields.output?.spec ??\n                this._schemaDefinition);\n        }\n        else if (isStateDefinition(fields) || isAnnotationRoot(fields)) {\n            const spec = isAnnotationRoot(fields) ? fields.spec : fields;\n            this._schemaDefinition = spec;\n        }\n        else if (isStateGraphArgs(fields)) {\n            const spec = _getChannels(fields.channels);\n            this._schemaDefinition = spec;\n        }\n        else {\n            throw new Error(\"Invalid StateGraph input.\");\n        }\n        this._inputDefinition = this._inputDefinition ?? this._schemaDefinition;\n        this._outputDefinition = this._outputDefinition ?? this._schemaDefinition;\n        this._addSchema(this._schemaDefinition);\n        this._addSchema(this._inputDefinition);\n        this._addSchema(this._outputDefinition);\n        this._configSchema = configSchema?.spec;\n    }\n    get allEdges() {\n        return new Set([\n            ...this.edges,\n            ...Array.from(this.waitingEdges).flatMap(([starts, end]) => starts.map((start) => [start, end])),\n        ]);\n    }\n    _addSchema(stateDefinition) {\n        if (this._schemaDefinitions.has(stateDefinition)) {\n            return;\n        }\n        // TODO: Support managed values\n        this._schemaDefinitions.set(stateDefinition, stateDefinition);\n        for (const [key, val] of Object.entries(stateDefinition)) {\n            let channel;\n            if (typeof val === \"function\") {\n                channel = val();\n            }\n            else {\n                channel = val;\n            }\n            if (this.channels[key] !== undefined) {\n                if (this.channels[key] !== channel) {\n                    if (!(0,_managed_base_js__WEBPACK_IMPORTED_MODULE_11__.isConfiguredManagedValue)(channel) &&\n                        channel.lc_graph_name !== \"LastValue\") {\n                        throw new Error(`Channel \"${key}\" already exists with a different type.`);\n                    }\n                }\n            }\n            else {\n                this.channels[key] = channel;\n            }\n        }\n    }\n    addNode(key, action, options) {\n        if (key in this.channels) {\n            throw new Error(`${key} is already being used as a state attribute (a.k.a. a channel), cannot also be used as a node name.`);\n        }\n        for (const reservedChar of [\n            _constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_SEPARATOR,\n            _constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_END,\n        ]) {\n            if (key.includes(reservedChar)) {\n                throw new Error(`\"${reservedChar}\" is a reserved character and is not allowed in node names.`);\n            }\n        }\n        this.warnIfCompiled(`Adding a node to a graph that has already been compiled. This will not be reflected in the compiled graph.`);\n        if (key in this.nodes) {\n            throw new Error(`Node \\`${key}\\` already present.`);\n        }\n        if (key === _constants_js__WEBPACK_IMPORTED_MODULE_8__.END || key === _constants_js__WEBPACK_IMPORTED_MODULE_8__.START) {\n            throw new Error(`Node \\`${key}\\` is reserved.`);\n        }\n        if (options?.input !== undefined) {\n            this._addSchema(options.input.spec);\n        }\n        let runnable;\n        if (_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.Runnable.isRunnable(action)) {\n            runnable = action;\n        }\n        else if (typeof action === \"function\") {\n            runnable = new _utils_js__WEBPACK_IMPORTED_MODULE_7__.RunnableCallable({\n                func: action,\n                name: key,\n                trace: false,\n            });\n        }\n        else {\n            runnable = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable)(action);\n        }\n        const nodeSpec = {\n            runnable: runnable,\n            retryPolicy: options?.retryPolicy,\n            metadata: options?.metadata,\n            input: options?.input?.spec ?? this._schemaDefinition,\n            subgraphs: (0,_pregel_utils_subgraph_js__WEBPACK_IMPORTED_MODULE_12__.isPregelLike)(runnable)\n                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    [runnable]\n                : options?.subgraphs,\n            ends: options?.ends,\n        };\n        this.nodes[key] = nodeSpec;\n        return this;\n    }\n    addEdge(startKey, endKey) {\n        if (typeof startKey === \"string\") {\n            return super.addEdge(startKey, endKey);\n        }\n        if (this.compiled) {\n            console.warn(\"Adding an edge to a graph that has already been compiled. This will \" +\n                \"not be reflected in the compiled graph.\");\n        }\n        for (const start of startKey) {\n            if (start === _constants_js__WEBPACK_IMPORTED_MODULE_8__.END) {\n                throw new Error(\"END cannot be a start node\");\n            }\n            if (!Object.keys(this.nodes).some((node) => node === start)) {\n                throw new Error(`Need to add a node named \"${start}\" first`);\n            }\n        }\n        if (endKey === _constants_js__WEBPACK_IMPORTED_MODULE_8__.END) {\n            throw new Error(\"END cannot be an end node\");\n        }\n        if (!Object.keys(this.nodes).some((node) => node === endKey)) {\n            throw new Error(`Need to add a node named \"${endKey}\" first`);\n        }\n        this.waitingEdges.add([startKey, endKey]);\n        return this;\n    }\n    compile({ checkpointer, store, interruptBefore, interruptAfter, name, } = {}) {\n        // validate the graph\n        this.validate([\n            ...(Array.isArray(interruptBefore) ? interruptBefore : []),\n            ...(Array.isArray(interruptAfter) ? interruptAfter : []),\n        ]);\n        // prepare output channels\n        const outputKeys = Object.keys(this._schemaDefinitions.get(this._outputDefinition));\n        const outputChannels = outputKeys.length === 1 && outputKeys[0] === ROOT ? ROOT : outputKeys;\n        const streamKeys = Object.keys(this.channels);\n        const streamChannels = streamKeys.length === 1 && streamKeys[0] === ROOT ? ROOT : streamKeys;\n        // create empty compiled graph\n        const compiled = new CompiledStateGraph({\n            builder: this,\n            checkpointer,\n            interruptAfter,\n            interruptBefore,\n            autoValidate: false,\n            nodes: {},\n            channels: {\n                ...this.channels,\n                [_constants_js__WEBPACK_IMPORTED_MODULE_8__.START]: new _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_6__.EphemeralValue(),\n            },\n            inputChannels: _constants_js__WEBPACK_IMPORTED_MODULE_8__.START,\n            outputChannels,\n            streamChannels,\n            streamMode: \"updates\",\n            store,\n            name,\n        });\n        // attach nodes, edges and branches\n        compiled.attachNode(_constants_js__WEBPACK_IMPORTED_MODULE_8__.START);\n        for (const [key, node] of Object.entries(this.nodes)) {\n            compiled.attachNode(key, node);\n        }\n        compiled.attachBranch(_constants_js__WEBPACK_IMPORTED_MODULE_8__.START, _constants_js__WEBPACK_IMPORTED_MODULE_8__.SELF, _getControlBranch(), {\n            withReader: false,\n        });\n        for (const [key] of Object.entries(this.nodes)) {\n            compiled.attachBranch(key, _constants_js__WEBPACK_IMPORTED_MODULE_8__.SELF, _getControlBranch(), {\n                withReader: false,\n            });\n        }\n        for (const [start, end] of this.edges) {\n            compiled.attachEdge(start, end);\n        }\n        for (const [starts, end] of this.waitingEdges) {\n            compiled.attachEdge(starts, end);\n        }\n        for (const [start, branches] of Object.entries(this.branches)) {\n            for (const [name, branch] of Object.entries(branches)) {\n                compiled.attachBranch(start, name, branch);\n            }\n        }\n        return compiled.validate();\n    }\n}\nfunction _getChannels(schema) {\n    const channels = {};\n    for (const [name, val] of Object.entries(schema)) {\n        if (name === ROOT) {\n            channels[name] = (0,_annotation_js__WEBPACK_IMPORTED_MODULE_10__.getChannel)(val);\n        }\n        else {\n            const key = name;\n            channels[name] = (0,_annotation_js__WEBPACK_IMPORTED_MODULE_10__.getChannel)(val);\n        }\n    }\n    return channels;\n}\n/**\n * Final result from building and compiling a {@link StateGraph}.\n * Should not be instantiated directly, only using the StateGraph `.compile()`\n * instance method.\n */\nclass CompiledStateGraph extends _graph_js__WEBPACK_IMPORTED_MODULE_2__.CompiledGraph {\n    attachNode(key, node) {\n        let outputKeys;\n        if (key === _constants_js__WEBPACK_IMPORTED_MODULE_8__.START) {\n            // Get input schema keys excluding managed values\n            outputKeys = Object.entries(this.builder._schemaDefinitions.get(this.builder._inputDefinition))\n                .filter(([_, v]) => !(0,_managed_base_js__WEBPACK_IMPORTED_MODULE_11__.isConfiguredManagedValue)(v))\n                .map(([k]) => k);\n        }\n        else {\n            outputKeys = Object.keys(this.builder.channels);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function _getRoot(input) {\n            if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_8__.isCommand)(input)) {\n                if (input.graph === _constants_js__WEBPACK_IMPORTED_MODULE_8__.Command.PARENT) {\n                    return null;\n                }\n                return input._updateAsTuples();\n            }\n            else if (Array.isArray(input) &&\n                input.length > 0 &&\n                input.some((i) => (0,_constants_js__WEBPACK_IMPORTED_MODULE_8__.isCommand)(i))) {\n                const updates = [];\n                for (const i of input) {\n                    if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_8__.isCommand)(i)) {\n                        if (i.graph === _constants_js__WEBPACK_IMPORTED_MODULE_8__.Command.PARENT) {\n                            continue;\n                        }\n                        updates.push(...i._updateAsTuples());\n                    }\n                    else {\n                        updates.push([ROOT, i]);\n                    }\n                }\n                return updates;\n            }\n            else if (input != null) {\n                return [[ROOT, input]];\n            }\n            return null;\n        }\n        // to avoid name collision below\n        const nodeKey = key;\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        function _getUpdates(input) {\n            if (!input) {\n                return null;\n            }\n            else if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_8__.isCommand)(input)) {\n                if (input.graph === _constants_js__WEBPACK_IMPORTED_MODULE_8__.Command.PARENT) {\n                    return null;\n                }\n                return input._updateAsTuples();\n            }\n            else if (Array.isArray(input) &&\n                input.length > 0 &&\n                input.some(_constants_js__WEBPACK_IMPORTED_MODULE_8__.isCommand)) {\n                const updates = [];\n                for (const item of input) {\n                    if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_8__.isCommand)(item)) {\n                        if (item.graph === _constants_js__WEBPACK_IMPORTED_MODULE_8__.Command.PARENT) {\n                            continue;\n                        }\n                        updates.push(...item._updateAsTuples());\n                    }\n                    else {\n                        const itemUpdates = _getUpdates(item);\n                        if (itemUpdates) {\n                            updates.push(...(itemUpdates ?? []));\n                        }\n                    }\n                }\n                return updates;\n            }\n            else if (typeof input === \"object\" && !Array.isArray(input)) {\n                return Object.entries(input).filter(([k]) => outputKeys.includes(k));\n            }\n            else {\n                const typeofInput = Array.isArray(input) ? \"array\" : typeof input;\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidUpdateError(`Expected node \"${nodeKey.toString()}\" to return an object or an array containing at least one Command object, received ${typeofInput}`, {\n                    lc_error_code: \"INVALID_GRAPH_NODE_RETURN_VALUE\",\n                });\n            }\n        }\n        const stateWriteEntries = [\n            {\n                value: _pregel_write_js__WEBPACK_IMPORTED_MODULE_3__.PASSTHROUGH,\n                mapper: new _utils_js__WEBPACK_IMPORTED_MODULE_7__.RunnableCallable({\n                    func: outputKeys.length && outputKeys[0] === ROOT\n                        ? _getRoot\n                        : _getUpdates,\n                    trace: false,\n                    recurse: false,\n                }),\n            },\n        ];\n        // add node and output channel\n        if (key === _constants_js__WEBPACK_IMPORTED_MODULE_8__.START) {\n            this.nodes[key] = new _pregel_read_js__WEBPACK_IMPORTED_MODULE_4__.PregelNode({\n                tags: [_constants_js__WEBPACK_IMPORTED_MODULE_8__.TAG_HIDDEN],\n                triggers: [_constants_js__WEBPACK_IMPORTED_MODULE_8__.START],\n                channels: [_constants_js__WEBPACK_IMPORTED_MODULE_8__.START],\n                writers: [new _pregel_write_js__WEBPACK_IMPORTED_MODULE_3__.ChannelWrite(stateWriteEntries, [_constants_js__WEBPACK_IMPORTED_MODULE_8__.TAG_HIDDEN])],\n            });\n        }\n        else {\n            const inputDefinition = node?.input ?? this.builder._schemaDefinition;\n            const inputValues = Object.fromEntries(Object.keys(this.builder._schemaDefinitions.get(inputDefinition)).map((k) => [k, k]));\n            const isSingleInput = Object.keys(inputValues).length === 1 && ROOT in inputValues;\n            this.channels[key] = new _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_6__.EphemeralValue(false);\n            this.nodes[key] = new _pregel_read_js__WEBPACK_IMPORTED_MODULE_4__.PregelNode({\n                triggers: [],\n                // read state keys\n                channels: isSingleInput ? Object.keys(inputValues) : inputValues,\n                // publish to this channel and state keys\n                writers: [\n                    new _pregel_write_js__WEBPACK_IMPORTED_MODULE_3__.ChannelWrite(stateWriteEntries.concat({ channel: key, value: key }), [_constants_js__WEBPACK_IMPORTED_MODULE_8__.TAG_HIDDEN]),\n                ],\n                mapper: isSingleInput\n                    ? undefined\n                    : // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        (input) => {\n                            return Object.fromEntries(Object.entries(input).filter(([k]) => k in inputValues));\n                        },\n                bound: node?.runnable,\n                metadata: node?.metadata,\n                retryPolicy: node?.retryPolicy,\n                subgraphs: node?.subgraphs,\n                ends: node?.ends,\n            });\n        }\n    }\n    attachEdge(start, end) {\n        if (end === _constants_js__WEBPACK_IMPORTED_MODULE_8__.END) {\n            return;\n        }\n        if (Array.isArray(start)) {\n            const channelName = `join:${start.join(\"+\")}:${end}`;\n            // register channel\n            this.channels[channelName] =\n                new _channels_named_barrier_value_js__WEBPACK_IMPORTED_MODULE_5__.NamedBarrierValue(new Set(start));\n            // subscribe to channel\n            this.nodes[end].triggers.push(channelName);\n            // publish to channel\n            for (const s of start) {\n                this.nodes[s].writers.push(new _pregel_write_js__WEBPACK_IMPORTED_MODULE_3__.ChannelWrite([{ channel: channelName, value: s }], [_constants_js__WEBPACK_IMPORTED_MODULE_8__.TAG_HIDDEN]));\n            }\n        }\n        else if (start === _constants_js__WEBPACK_IMPORTED_MODULE_8__.START) {\n            const channelName = `${_constants_js__WEBPACK_IMPORTED_MODULE_8__.START}:${end}`;\n            // register channel\n            this.channels[channelName] =\n                new _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_6__.EphemeralValue();\n            // subscribe to channel\n            this.nodes[end].triggers.push(channelName);\n            // publish to channel\n            this.nodes[_constants_js__WEBPACK_IMPORTED_MODULE_8__.START].writers.push(new _pregel_write_js__WEBPACK_IMPORTED_MODULE_3__.ChannelWrite([{ channel: channelName, value: _constants_js__WEBPACK_IMPORTED_MODULE_8__.START }], [_constants_js__WEBPACK_IMPORTED_MODULE_8__.TAG_HIDDEN]));\n        }\n        else {\n            this.nodes[end].triggers.push(start);\n        }\n    }\n    attachBranch(start, name, branch, options = { withReader: true }) {\n        const branchWriter = async (packets, config) => {\n            const filteredPackets = packets.filter((p) => p !== _constants_js__WEBPACK_IMPORTED_MODULE_8__.END);\n            if (!filteredPackets.length) {\n                return;\n            }\n            const writes = filteredPackets.map((p) => {\n                if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_8__._isSend)(p)) {\n                    return p;\n                }\n                return {\n                    channel: `branch:${start}:${name}:${p}`,\n                    value: start,\n                };\n            });\n            await _pregel_write_js__WEBPACK_IMPORTED_MODULE_3__.ChannelWrite.doWrite({ ...config, tags: (config.tags ?? []).concat([_constants_js__WEBPACK_IMPORTED_MODULE_8__.TAG_HIDDEN]) }, writes);\n        };\n        // attach branch publisher\n        this.nodes[start].writers.push(branch.run(branchWriter, \n        // reader\n        options.withReader\n            ? (config) => _pregel_read_js__WEBPACK_IMPORTED_MODULE_4__.ChannelRead.doRead(config, this.streamChannels ?? this.outputChannels, true)\n            : undefined));\n        // attach branch subscribers\n        const ends = branch.ends\n            ? Object.values(branch.ends)\n            : Object.keys(this.builder.nodes);\n        for (const end of ends) {\n            if (end === _constants_js__WEBPACK_IMPORTED_MODULE_8__.END) {\n                continue;\n            }\n            const channelName = `branch:${start}:${name}:${end}`;\n            this.channels[channelName] =\n                new _channels_ephemeral_value_js__WEBPACK_IMPORTED_MODULE_6__.EphemeralValue(false);\n            this.nodes[end].triggers.push(channelName);\n        }\n    }\n}\nfunction isStateDefinition(obj) {\n    return (typeof obj === \"object\" &&\n        obj !== null &&\n        !Array.isArray(obj) &&\n        Object.keys(obj).length > 0 &&\n        Object.values(obj).every((v) => typeof v === \"function\" || (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_1__.isBaseChannel)(v)));\n}\nfunction isAnnotationRoot(obj) {\n    return (typeof obj === \"object\" &&\n        obj !== null &&\n        \"lc_graph_name\" in obj &&\n        obj.lc_graph_name === \"AnnotationRoot\");\n}\nfunction isStateGraphArgs(obj) {\n    return (typeof obj === \"object\" &&\n        obj !== null &&\n        obj.channels !== undefined);\n}\nfunction isStateGraphArgsWithStateSchema(obj) {\n    return (typeof obj === \"object\" &&\n        obj !== null &&\n        obj.stateSchema !== undefined);\n}\nfunction isStateGraphArgsWithInputOutputSchemas(obj) {\n    return (typeof obj === \"object\" &&\n        obj !== null &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        obj.stateSchema === undefined &&\n        obj.input !== undefined &&\n        obj.output !== undefined);\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _controlBranch(value) {\n    if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_8__._isSend)(value)) {\n        return [value];\n    }\n    const commands = [];\n    if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_8__.isCommand)(value)) {\n        commands.push(value);\n    }\n    else if (Array.isArray(value) && value.every(_constants_js__WEBPACK_IMPORTED_MODULE_8__.isCommand)) {\n        commands.push(...value);\n    }\n    else {\n        return [];\n    }\n    const destinations = [];\n    for (const command of commands) {\n        if (command.graph === _constants_js__WEBPACK_IMPORTED_MODULE_8__.Command.PARENT) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_9__.ParentCommand(command);\n        }\n        if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_8__._isSend)(command.goto) || typeof command.goto === \"string\") {\n            destinations.push(command.goto);\n        }\n        else {\n            destinations.push(...command.goto);\n        }\n    }\n    return destinations;\n}\nfunction _getControlBranch() {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const CONTROL_BRANCH_PATH = new _utils_js__WEBPACK_IMPORTED_MODULE_7__.RunnableCallable({\n        func: _controlBranch,\n        tags: [_constants_js__WEBPACK_IMPORTED_MODULE_8__.TAG_HIDDEN],\n        trace: false,\n        recurse: false,\n    });\n    return new _graph_js__WEBPACK_IMPORTED_MODULE_2__.Branch({\n        path: CONTROL_BRANCH_PATH,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/state.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/index.js":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/index.js ***!
  \*****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Annotation: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.Annotation),\n/* harmony export */   AsyncBatchedStore: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.AsyncBatchedStore),\n/* harmony export */   BaseChannel: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.BaseChannel),\n/* harmony export */   BaseCheckpointSaver: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.BaseCheckpointSaver),\n/* harmony export */   BaseLangGraphError: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.BaseLangGraphError),\n/* harmony export */   BaseStore: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.BaseStore),\n/* harmony export */   BinaryOperatorAggregate: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.BinaryOperatorAggregate),\n/* harmony export */   ChannelKeyPlaceholder: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.ChannelKeyPlaceholder),\n/* harmony export */   Command: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.Command),\n/* harmony export */   CompiledStateGraph: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.CompiledStateGraph),\n/* harmony export */   END: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.END),\n/* harmony export */   EmptyChannelError: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.EmptyChannelError),\n/* harmony export */   EmptyInputError: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.EmptyInputError),\n/* harmony export */   Graph: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.Graph),\n/* harmony export */   GraphBubbleUp: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.GraphBubbleUp),\n/* harmony export */   GraphInterrupt: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.GraphInterrupt),\n/* harmony export */   GraphRecursionError: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.GraphRecursionError),\n/* harmony export */   GraphValueError: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.GraphValueError),\n/* harmony export */   InMemoryStore: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.InMemoryStore),\n/* harmony export */   InvalidUpdateError: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.InvalidUpdateError),\n/* harmony export */   IsLastStepManager: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.IsLastStepManager),\n/* harmony export */   ManagedValue: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.ManagedValue),\n/* harmony export */   ManagedValueMapping: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.ManagedValueMapping),\n/* harmony export */   MemorySaver: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.MemorySaver),\n/* harmony export */   MessageGraph: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.MessageGraph),\n/* harmony export */   MessagesAnnotation: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.MessagesAnnotation),\n/* harmony export */   MultipleSubgraphsError: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.MultipleSubgraphsError),\n/* harmony export */   NodeInterrupt: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.NodeInterrupt),\n/* harmony export */   NoopManagedValue: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.NoopManagedValue),\n/* harmony export */   ParentCommand: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.ParentCommand),\n/* harmony export */   RemoteException: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.RemoteException),\n/* harmony export */   START: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.START),\n/* harmony export */   Send: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.Send),\n/* harmony export */   SharedValue: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.SharedValue),\n/* harmony export */   StateGraph: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.StateGraph),\n/* harmony export */   UnreachableNodeError: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.UnreachableNodeError),\n/* harmony export */   WritableManagedValue: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.WritableManagedValue),\n/* harmony export */   addMessages: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.addMessages),\n/* harmony export */   copyCheckpoint: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.copyCheckpoint),\n/* harmony export */   emptyCheckpoint: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.emptyCheckpoint),\n/* harmony export */   entrypoint: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.entrypoint),\n/* harmony export */   getPreviousState: () => (/* reexport safe */ _func_index_js__WEBPACK_IMPORTED_MODULE_4__.getPreviousState),\n/* harmony export */   getStore: () => (/* reexport safe */ _pregel_utils_config_js__WEBPACK_IMPORTED_MODULE_3__.getStore),\n/* harmony export */   getSubgraphsSeenSet: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.getSubgraphsSeenSet),\n/* harmony export */   getWriter: () => (/* reexport safe */ _pregel_utils_config_js__WEBPACK_IMPORTED_MODULE_3__.getWriter),\n/* harmony export */   interrupt: () => (/* reexport safe */ _interrupt_js__WEBPACK_IMPORTED_MODULE_2__.interrupt),\n/* harmony export */   isCommand: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.isCommand),\n/* harmony export */   isConfiguredManagedValue: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.isConfiguredManagedValue),\n/* harmony export */   isGraphBubbleUp: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.isGraphBubbleUp),\n/* harmony export */   isGraphInterrupt: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.isGraphInterrupt),\n/* harmony export */   isManagedValue: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.isManagedValue),\n/* harmony export */   isParentCommand: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.isParentCommand),\n/* harmony export */   messagesStateReducer: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.messagesStateReducer),\n/* harmony export */   task: () => (/* reexport safe */ _web_js__WEBPACK_IMPORTED_MODULE_1__.task)\n/* harmony export */ });\n/* harmony import */ var _setup_async_local_storage_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./setup/async_local_storage.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/setup/async_local_storage.js\");\n/* harmony import */ var _web_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./web.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/web.js\");\n/* harmony import */ var _interrupt_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./interrupt.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/interrupt.js\");\n/* harmony import */ var _pregel_utils_config_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./pregel/utils/config.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/config.js\");\n/* harmony import */ var _func_index_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./func/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/func/index.js\");\n/* __LC_ALLOW_ENTRYPOINT_SIDE_EFFECTS__ */\n\n// Initialize global async local storage instance for tracing\n(0,_setup_async_local_storage_js__WEBPACK_IMPORTED_MODULE_0__.initializeAsyncLocalStorageSingleton)();\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDc0Y7QUFDdEY7QUFDQSxtR0FBb0M7QUFDWDtBQUNrQjtBQUNvQjtBQUNaIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbIi8qIF9fTENfQUxMT1dfRU5UUllQT0lOVF9TSURFX0VGRkVDVFNfXyAqL1xuaW1wb3J0IHsgaW5pdGlhbGl6ZUFzeW5jTG9jYWxTdG9yYWdlU2luZ2xldG9uIH0gZnJvbSBcIi4vc2V0dXAvYXN5bmNfbG9jYWxfc3RvcmFnZS5qc1wiO1xuLy8gSW5pdGlhbGl6ZSBnbG9iYWwgYXN5bmMgbG9jYWwgc3RvcmFnZSBpbnN0YW5jZSBmb3IgdHJhY2luZ1xuaW5pdGlhbGl6ZUFzeW5jTG9jYWxTdG9yYWdlU2luZ2xldG9uKCk7XG5leHBvcnQgKiBmcm9tIFwiLi93ZWIuanNcIjtcbmV4cG9ydCB7IGludGVycnVwdCB9IGZyb20gXCIuL2ludGVycnVwdC5qc1wiO1xuZXhwb3J0IHsgZ2V0U3RvcmUsIGdldFdyaXRlciB9IGZyb20gXCIuL3ByZWdlbC91dGlscy9jb25maWcuanNcIjtcbmV4cG9ydCB7IGdldFByZXZpb3VzU3RhdGUgfSBmcm9tIFwiLi9mdW5jL2luZGV4LmpzXCI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/interrupt.js":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/interrupt.js ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   interrupt: () => (/* binding */ interrupt)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/singletons */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/singletons.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n\n\n\n/**\n * Interrupts the execution of a graph node.\n * This function can be used to pause execution of a node, and return the value of the `resume`\n * input when the graph is re-invoked using `Command`.\n * Multiple interrupts can be called within a single node, and each will be handled sequentially.\n *\n * When an interrupt is called:\n * 1. If there's a `resume` value available (from a previous `Command`), it returns that value.\n * 2. Otherwise, it throws a `GraphInterrupt` with the provided value\n * 3. The graph can be resumed by passing a `Command` with a `resume` value\n *\n * @param value - The value to include in the interrupt. This will be available in task.interrupts[].value\n * @returns The `resume` value provided when the graph is re-invoked with a Command\n *\n * @example\n * ```typescript\n * // Define a node that uses multiple interrupts\n * const nodeWithInterrupts = () => {\n *   // First interrupt - will pause execution and include {value: 1} in task values\n *   const answer1 = interrupt({ value: 1 });\n *\n *   // Second interrupt - only called after first interrupt is resumed\n *   const answer2 = interrupt({ value: 2 });\n *\n *   // Use the resume values\n *   return { myKey: answer1 + \" \" + answer2 };\n * };\n *\n * // Resume the graph after first interrupt\n * await graph.stream(new Command({ resume: \"answer 1\" }));\n *\n * // Resume the graph after second interrupt\n * await graph.stream(new Command({ resume: \"answer 2\" }));\n * // Final result: { myKey: \"answer 1 answer 2\" }\n * ```\n *\n * @throws {Error} If called outside the context of a graph\n * @throws {GraphInterrupt} When no resume value is available\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction interrupt(value) {\n    const config = _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    if (!config) {\n        throw new Error(\"Called interrupt() outside the context of a graph.\");\n    }\n    const conf = config.configurable;\n    if (!conf) {\n        throw new Error(\"No configurable found in config\");\n    }\n    // Track interrupt index\n    const scratchpad = conf[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_SCRATCHPAD];\n    scratchpad.interruptCounter += 1;\n    const idx = scratchpad.interruptCounter;\n    // Find previous resume values\n    if (scratchpad.resume.length > 0 && idx < scratchpad.resume.length) {\n        return scratchpad.resume[idx];\n    }\n    // Find current resume value\n    if (scratchpad.nullResume !== undefined) {\n        if (scratchpad.resume.length !== idx) {\n            throw new Error(`Resume length mismatch: ${scratchpad.resume.length} !== ${idx}`);\n        }\n        const v = scratchpad.nullResume;\n        delete scratchpad.nullResume;\n        scratchpad.resume.push(v);\n        const send = conf[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_SEND];\n        if (send) {\n            send([[_constants_js__WEBPACK_IMPORTED_MODULE_2__.RESUME, scratchpad.resume]]);\n        }\n        return v;\n    }\n    // No resume value found\n    throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.GraphInterrupt([\n        {\n            value,\n            when: \"during\",\n            resumable: true,\n            ns: conf[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_CHECKPOINT_NS]?.split(_constants_js__WEBPACK_IMPORTED_MODULE_2__.CHECKPOINT_NAMESPACE_SEPARATOR),\n        },\n    ]);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2ludGVycnVwdC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQWdGO0FBQ25DO0FBQzhGO0FBQzNJO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCxVQUFVO0FBQ3RFLGlDQUFpQyxVQUFVO0FBQzNDO0FBQ0E7QUFDQSxpQ0FBaUMsVUFBVTtBQUMzQztBQUNBO0FBQ0EsY0FBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLG9DQUFvQyxvQkFBb0I7QUFDeEQ7QUFDQTtBQUNBLG9DQUFvQyxvQkFBb0I7QUFDeEQsc0JBQXNCO0FBQ3RCO0FBQ0E7QUFDQSxZQUFZLE9BQU87QUFDbkIsWUFBWSxnQkFBZ0I7QUFDNUI7QUFDQTtBQUNPO0FBQ1AsbUJBQW1CLDBGQUFrQztBQUNyRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLGdFQUFxQjtBQUNqRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQsMEJBQTBCLE1BQU0sSUFBSTtBQUMzRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQiwwREFBZTtBQUN6QztBQUNBLG1CQUFtQixpREFBTTtBQUN6QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWMsc0RBQWM7QUFDNUI7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsbUVBQXdCLFNBQVMseUVBQThCO0FBQ3BGLFNBQVM7QUFDVDtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L2ludGVycnVwdC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBBc3luY0xvY2FsU3RvcmFnZVByb3ZpZGVyU2luZ2xldG9uIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9zaW5nbGV0b25zXCI7XG5pbXBvcnQgeyBHcmFwaEludGVycnVwdCB9IGZyb20gXCIuL2Vycm9ycy5qc1wiO1xuaW1wb3J0IHsgQ09ORklHX0tFWV9DSEVDS1BPSU5UX05TLCBDT05GSUdfS0VZX1NDUkFUQ0hQQUQsIENPTkZJR19LRVlfU0VORCwgQ0hFQ0tQT0lOVF9OQU1FU1BBQ0VfU0VQQVJBVE9SLCBSRVNVTUUsIH0gZnJvbSBcIi4vY29uc3RhbnRzLmpzXCI7XG4vKipcbiAqIEludGVycnVwdHMgdGhlIGV4ZWN1dGlvbiBvZiBhIGdyYXBoIG5vZGUuXG4gKiBUaGlzIGZ1bmN0aW9uIGNhbiBiZSB1c2VkIHRvIHBhdXNlIGV4ZWN1dGlvbiBvZiBhIG5vZGUsIGFuZCByZXR1cm4gdGhlIHZhbHVlIG9mIHRoZSBgcmVzdW1lYFxuICogaW5wdXQgd2hlbiB0aGUgZ3JhcGggaXMgcmUtaW52b2tlZCB1c2luZyBgQ29tbWFuZGAuXG4gKiBNdWx0aXBsZSBpbnRlcnJ1cHRzIGNhbiBiZSBjYWxsZWQgd2l0aGluIGEgc2luZ2xlIG5vZGUsIGFuZCBlYWNoIHdpbGwgYmUgaGFuZGxlZCBzZXF1ZW50aWFsbHkuXG4gKlxuICogV2hlbiBhbiBpbnRlcnJ1cHQgaXMgY2FsbGVkOlxuICogMS4gSWYgdGhlcmUncyBhIGByZXN1bWVgIHZhbHVlIGF2YWlsYWJsZSAoZnJvbSBhIHByZXZpb3VzIGBDb21tYW5kYCksIGl0IHJldHVybnMgdGhhdCB2YWx1ZS5cbiAqIDIuIE90aGVyd2lzZSwgaXQgdGhyb3dzIGEgYEdyYXBoSW50ZXJydXB0YCB3aXRoIHRoZSBwcm92aWRlZCB2YWx1ZVxuICogMy4gVGhlIGdyYXBoIGNhbiBiZSByZXN1bWVkIGJ5IHBhc3NpbmcgYSBgQ29tbWFuZGAgd2l0aCBhIGByZXN1bWVgIHZhbHVlXG4gKlxuICogQHBhcmFtIHZhbHVlIC0gVGhlIHZhbHVlIHRvIGluY2x1ZGUgaW4gdGhlIGludGVycnVwdC4gVGhpcyB3aWxsIGJlIGF2YWlsYWJsZSBpbiB0YXNrLmludGVycnVwdHNbXS52YWx1ZVxuICogQHJldHVybnMgVGhlIGByZXN1bWVgIHZhbHVlIHByb3ZpZGVkIHdoZW4gdGhlIGdyYXBoIGlzIHJlLWludm9rZWQgd2l0aCBhIENvbW1hbmRcbiAqXG4gKiBAZXhhbXBsZVxuICogYGBgdHlwZXNjcmlwdFxuICogLy8gRGVmaW5lIGEgbm9kZSB0aGF0IHVzZXMgbXVsdGlwbGUgaW50ZXJydXB0c1xuICogY29uc3Qgbm9kZVdpdGhJbnRlcnJ1cHRzID0gKCkgPT4ge1xuICogICAvLyBGaXJzdCBpbnRlcnJ1cHQgLSB3aWxsIHBhdXNlIGV4ZWN1dGlvbiBhbmQgaW5jbHVkZSB7dmFsdWU6IDF9IGluIHRhc2sgdmFsdWVzXG4gKiAgIGNvbnN0IGFuc3dlcjEgPSBpbnRlcnJ1cHQoeyB2YWx1ZTogMSB9KTtcbiAqXG4gKiAgIC8vIFNlY29uZCBpbnRlcnJ1cHQgLSBvbmx5IGNhbGxlZCBhZnRlciBmaXJzdCBpbnRlcnJ1cHQgaXMgcmVzdW1lZFxuICogICBjb25zdCBhbnN3ZXIyID0gaW50ZXJydXB0KHsgdmFsdWU6IDIgfSk7XG4gKlxuICogICAvLyBVc2UgdGhlIHJlc3VtZSB2YWx1ZXNcbiAqICAgcmV0dXJuIHsgbXlLZXk6IGFuc3dlcjEgKyBcIiBcIiArIGFuc3dlcjIgfTtcbiAqIH07XG4gKlxuICogLy8gUmVzdW1lIHRoZSBncmFwaCBhZnRlciBmaXJzdCBpbnRlcnJ1cHRcbiAqIGF3YWl0IGdyYXBoLnN0cmVhbShuZXcgQ29tbWFuZCh7IHJlc3VtZTogXCJhbnN3ZXIgMVwiIH0pKTtcbiAqXG4gKiAvLyBSZXN1bWUgdGhlIGdyYXBoIGFmdGVyIHNlY29uZCBpbnRlcnJ1cHRcbiAqIGF3YWl0IGdyYXBoLnN0cmVhbShuZXcgQ29tbWFuZCh7IHJlc3VtZTogXCJhbnN3ZXIgMlwiIH0pKTtcbiAqIC8vIEZpbmFsIHJlc3VsdDogeyBteUtleTogXCJhbnN3ZXIgMSBhbnN3ZXIgMlwiIH1cbiAqIGBgYFxuICpcbiAqIEB0aHJvd3Mge0Vycm9yfSBJZiBjYWxsZWQgb3V0c2lkZSB0aGUgY29udGV4dCBvZiBhIGdyYXBoXG4gKiBAdGhyb3dzIHtHcmFwaEludGVycnVwdH0gV2hlbiBubyByZXN1bWUgdmFsdWUgaXMgYXZhaWxhYmxlXG4gKi9cbi8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG5leHBvcnQgZnVuY3Rpb24gaW50ZXJydXB0KHZhbHVlKSB7XG4gICAgY29uc3QgY29uZmlnID0gQXN5bmNMb2NhbFN0b3JhZ2VQcm92aWRlclNpbmdsZXRvbi5nZXRSdW5uYWJsZUNvbmZpZygpO1xuICAgIGlmICghY29uZmlnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcihcIkNhbGxlZCBpbnRlcnJ1cHQoKSBvdXRzaWRlIHRoZSBjb250ZXh0IG9mIGEgZ3JhcGguXCIpO1xuICAgIH1cbiAgICBjb25zdCBjb25mID0gY29uZmlnLmNvbmZpZ3VyYWJsZTtcbiAgICBpZiAoIWNvbmYpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKFwiTm8gY29uZmlndXJhYmxlIGZvdW5kIGluIGNvbmZpZ1wiKTtcbiAgICB9XG4gICAgLy8gVHJhY2sgaW50ZXJydXB0IGluZGV4XG4gICAgY29uc3Qgc2NyYXRjaHBhZCA9IGNvbmZbQ09ORklHX0tFWV9TQ1JBVENIUEFEXTtcbiAgICBzY3JhdGNocGFkLmludGVycnVwdENvdW50ZXIgKz0gMTtcbiAgICBjb25zdCBpZHggPSBzY3JhdGNocGFkLmludGVycnVwdENvdW50ZXI7XG4gICAgLy8gRmluZCBwcmV2aW91cyByZXN1bWUgdmFsdWVzXG4gICAgaWYgKHNjcmF0Y2hwYWQucmVzdW1lLmxlbmd0aCA+IDAgJiYgaWR4IDwgc2NyYXRjaHBhZC5yZXN1bWUubGVuZ3RoKSB7XG4gICAgICAgIHJldHVybiBzY3JhdGNocGFkLnJlc3VtZVtpZHhdO1xuICAgIH1cbiAgICAvLyBGaW5kIGN1cnJlbnQgcmVzdW1lIHZhbHVlXG4gICAgaWYgKHNjcmF0Y2hwYWQubnVsbFJlc3VtZSAhPT0gdW5kZWZpbmVkKSB7XG4gICAgICAgIGlmIChzY3JhdGNocGFkLnJlc3VtZS5sZW5ndGggIT09IGlkeCkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBSZXN1bWUgbGVuZ3RoIG1pc21hdGNoOiAke3NjcmF0Y2hwYWQucmVzdW1lLmxlbmd0aH0gIT09ICR7aWR4fWApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHYgPSBzY3JhdGNocGFkLm51bGxSZXN1bWU7XG4gICAgICAgIGRlbGV0ZSBzY3JhdGNocGFkLm51bGxSZXN1bWU7XG4gICAgICAgIHNjcmF0Y2hwYWQucmVzdW1lLnB1c2godik7XG4gICAgICAgIGNvbnN0IHNlbmQgPSBjb25mW0NPTkZJR19LRVlfU0VORF07XG4gICAgICAgIGlmIChzZW5kKSB7XG4gICAgICAgICAgICBzZW5kKFtbUkVTVU1FLCBzY3JhdGNocGFkLnJlc3VtZV1dKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdjtcbiAgICB9XG4gICAgLy8gTm8gcmVzdW1lIHZhbHVlIGZvdW5kXG4gICAgdGhyb3cgbmV3IEdyYXBoSW50ZXJydXB0KFtcbiAgICAgICAge1xuICAgICAgICAgICAgdmFsdWUsXG4gICAgICAgICAgICB3aGVuOiBcImR1cmluZ1wiLFxuICAgICAgICAgICAgcmVzdW1hYmxlOiB0cnVlLFxuICAgICAgICAgICAgbnM6IGNvbmZbQ09ORklHX0tFWV9DSEVDS1BPSU5UX05TXT8uc3BsaXQoQ0hFQ0tQT0lOVF9OQU1FU1BBQ0VfU0VQQVJBVE9SKSxcbiAgICAgICAgfSxcbiAgICBdKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/interrupt.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/base.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/base.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChannelKeyPlaceholder: () => (/* binding */ ChannelKeyPlaceholder),\n/* harmony export */   ManagedValue: () => (/* binding */ ManagedValue),\n/* harmony export */   ManagedValueMapping: () => (/* binding */ ManagedValueMapping),\n/* harmony export */   NoopManagedValue: () => (/* binding */ NoopManagedValue),\n/* harmony export */   WritableManagedValue: () => (/* binding */ WritableManagedValue),\n/* harmony export */   isConfiguredManagedValue: () => (/* binding */ isConfiguredManagedValue),\n/* harmony export */   isManagedValue: () => (/* binding */ isManagedValue)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass ManagedValue {\n    constructor(config, _params) {\n        Object.defineProperty(this, \"runtime\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_promises\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"lg_is_managed_value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.config = config;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    static async initialize(_config, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _args) {\n        throw new Error(\"Not implemented\");\n    }\n    async promises() {\n        return Promise.all(this._promises);\n    }\n    addPromise(promise) {\n        this._promises.push(promise);\n    }\n}\nclass WritableManagedValue extends ManagedValue {\n}\nconst ChannelKeyPlaceholder = \"__channel_key_placeholder__\";\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass ManagedValueMapping extends Map {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(entries) {\n        super(entries ? Array.from(entries) : undefined);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    replaceRuntimeValues(step, values) {\n        if (this.size === 0 || !values) {\n            return;\n        }\n        if (Array.from(this.values()).every((mv) => !mv.runtime)) {\n            return;\n        }\n        if (typeof values === \"object\" && !Array.isArray(values)) {\n            for (const [key, value] of Object.entries(values)) {\n                for (const [chan, mv] of this.entries()) {\n                    if (mv.runtime && mv.call(step) === value) {\n                        // eslint-disable-next-line no-param-reassign\n                        values[key] = { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.RUNTIME_PLACEHOLDER]: chan };\n                    }\n                }\n            }\n        }\n        else if (typeof values === \"object\" && \"constructor\" in values) {\n            for (const key of Object.getOwnPropertyNames(Object.getPrototypeOf(values))) {\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const value = values[key];\n                    for (const [chan, mv] of this.entries()) {\n                        if (mv.runtime && mv.call(step) === value) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any, no-param-reassign\n                            values[key] = { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.RUNTIME_PLACEHOLDER]: chan };\n                        }\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (error) {\n                    // Ignore if TypeError\n                    if (error.name !== TypeError.name) {\n                        throw error;\n                    }\n                }\n            }\n        }\n    }\n    replaceRuntimePlaceholders(step, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    values) {\n        if (this.size === 0 || !values) {\n            return;\n        }\n        if (Array.from(this.values()).every((mv) => !mv.runtime)) {\n            return;\n        }\n        if (typeof values === \"object\" && !Array.isArray(values)) {\n            for (const [key, value] of Object.entries(values)) {\n                if (typeof value === \"object\" &&\n                    value !== null &&\n                    _constants_js__WEBPACK_IMPORTED_MODULE_0__.RUNTIME_PLACEHOLDER in value) {\n                    const placeholder = value[_constants_js__WEBPACK_IMPORTED_MODULE_0__.RUNTIME_PLACEHOLDER];\n                    if (typeof placeholder === \"string\") {\n                        // eslint-disable-next-line no-param-reassign\n                        values[key] = this.get(placeholder)?.call(step);\n                    }\n                }\n            }\n        }\n        else if (typeof values === \"object\" && \"constructor\" in values) {\n            for (const key of Object.getOwnPropertyNames(Object.getPrototypeOf(values))) {\n                try {\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    const value = values[key];\n                    if (typeof value === \"object\" &&\n                        value !== null &&\n                        _constants_js__WEBPACK_IMPORTED_MODULE_0__.RUNTIME_PLACEHOLDER in value) {\n                        const managedValue = this.get(value[_constants_js__WEBPACK_IMPORTED_MODULE_0__.RUNTIME_PLACEHOLDER]);\n                        if (managedValue) {\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any, no-param-reassign\n                            values[key] = managedValue.call(step);\n                        }\n                    }\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (error) {\n                    // Ignore if TypeError\n                    if (error.name !== TypeError.name) {\n                        throw error;\n                    }\n                }\n            }\n        }\n    }\n}\nfunction isManagedValue(value) {\n    if (typeof value === \"object\" && value && \"lg_is_managed_value\" in value) {\n        return true;\n    }\n    return false;\n}\nfunction isConfiguredManagedValue(value) {\n    if (typeof value === \"object\" &&\n        value &&\n        \"cls\" in value &&\n        \"params\" in value) {\n        return true;\n    }\n    return false;\n}\n/**\n * No-op class used when getting state values, as managed values should never be returned\n * in get state calls.\n */\nclass NoopManagedValue extends ManagedValue {\n    call() { }\n    static async initialize(config, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    _args) {\n        return Promise.resolve(new NoopManagedValue(config));\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/index.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/index.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChannelKeyPlaceholder: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.ChannelKeyPlaceholder),\n/* harmony export */   IsLastStepManager: () => (/* reexport safe */ _is_last_step_js__WEBPACK_IMPORTED_MODULE_1__.IsLastStepManager),\n/* harmony export */   ManagedValue: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.ManagedValue),\n/* harmony export */   ManagedValueMapping: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.ManagedValueMapping),\n/* harmony export */   NoopManagedValue: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.NoopManagedValue),\n/* harmony export */   SharedValue: () => (/* reexport safe */ _shared_value_js__WEBPACK_IMPORTED_MODULE_2__.SharedValue),\n/* harmony export */   WritableManagedValue: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.WritableManagedValue),\n/* harmony export */   isConfiguredManagedValue: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.isConfiguredManagedValue),\n/* harmony export */   isManagedValue: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.isManagedValue)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/base.js\");\n/* harmony import */ var _is_last_step_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./is_last_step.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/is_last_step.js\");\n/* harmony import */ var _shared_value_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./shared_value.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/shared_value.js\");\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L21hbmFnZWQvaW5kZXguanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQTBCO0FBQ1E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL0BsYW5nY2hhaW4rbGFuZ2dyYXBoQDAuMi40Nl9AbGFuZ2NoYWluK2NvcmVAMC4zLjQwX29wZW5haUA0Ljg1LjJfd3NAOC4xOC4wX2J1ZmZlcnV0aWxANC4wLjlfdV9hZWwzNGdkcXMzeGJlY2R3Nzd4aWxzeGVtZS9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9sYW5nZ3JhcGgvZGlzdC9tYW5hZ2VkL2luZGV4LmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCAqIGZyb20gXCIuL2Jhc2UuanNcIjtcbmV4cG9ydCAqIGZyb20gXCIuL2lzX2xhc3Rfc3RlcC5qc1wiO1xuZXhwb3J0ICogZnJvbSBcIi4vc2hhcmVkX3ZhbHVlLmpzXCI7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/is_last_step.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/is_last_step.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IsLastStepManager: () => (/* binding */ IsLastStepManager)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/base.js\");\n\n\nclass IsLastStepManager extends _base_js__WEBPACK_IMPORTED_MODULE_1__.ManagedValue {\n    call(step) {\n        return step === (this.config.recursionLimit ?? _constants_js__WEBPACK_IMPORTED_MODULE_0__.RECURSION_LIMIT_DEFAULT) - 1;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L21hbmFnZWQvaXNfbGFzdF9zdGVwLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUEwRDtBQUNqQjtBQUNsQyxnQ0FBZ0Msa0RBQVk7QUFDbkQ7QUFDQSx1REFBdUQsa0VBQXVCO0FBQzlFO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvbWFuYWdlZC9pc19sYXN0X3N0ZXAuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUkVDVVJTSU9OX0xJTUlUX0RFRkFVTFQgfSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgeyBNYW5hZ2VkVmFsdWUgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG5leHBvcnQgY2xhc3MgSXNMYXN0U3RlcE1hbmFnZXIgZXh0ZW5kcyBNYW5hZ2VkVmFsdWUge1xuICAgIGNhbGwoc3RlcCkge1xuICAgICAgICByZXR1cm4gc3RlcCA9PT0gKHRoaXMuY29uZmlnLnJlY3Vyc2lvbkxpbWl0ID8/IFJFQ1VSU0lPTl9MSU1JVF9ERUZBVUxUKSAtIDE7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/is_last_step.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/shared_value.js":
/*!********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/shared_value.js ***!
  \********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SharedValue: () => (/* binding */ SharedValue)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/base.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* eslint-disable @typescript-eslint/no-explicit-any */\n\n\nclass SharedValue extends _base_js__WEBPACK_IMPORTED_MODULE_0__.WritableManagedValue {\n    constructor(config, params) {\n        super(config, params);\n        Object.defineProperty(this, \"scope\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"store\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ns\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"value\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        this.scope = params.scope;\n        this.store = config.store || null;\n        if (!this.store) {\n            this.ns = null;\n        }\n        else if (config.configurable?.[this.scope]) {\n            const scopeValue = config.configurable[this.scope];\n            const scopedValueString = typeof scopeValue === \"string\"\n                ? scopeValue\n                : JSON.stringify(scopeValue);\n            this.ns = [\"scoped\", this.scope, params.key, scopedValueString];\n        }\n        else {\n            throw new Error(`Required scope \"${this.scope}\" for shared state key was not passed in \"config.configurable\".`);\n        }\n    }\n    static async initialize(config, args) {\n        const instance = new this(config, args);\n        await instance.loadStore();\n        return instance;\n    }\n    static on(scope) {\n        return {\n            cls: SharedValue,\n            params: {\n                scope,\n                key: _base_js__WEBPACK_IMPORTED_MODULE_0__.ChannelKeyPlaceholder,\n            },\n        };\n    }\n    call(_step) {\n        return { ...this.value };\n    }\n    processUpdate(values) {\n        const writes = [];\n        for (const vv of values) {\n            for (const [k, v] of Object.entries(vv)) {\n                if (v === null) {\n                    if (k in this.value) {\n                        delete this.value[k];\n                        if (this.ns) {\n                            writes.push({ namespace: this.ns, key: k, value: null });\n                        }\n                    }\n                }\n                else if (typeof v !== \"object\" || v === null) {\n                    throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidUpdateError(\"Received a non-object value\");\n                }\n                else {\n                    this.value[k] = v;\n                    if (this.ns) {\n                        writes.push({ namespace: this.ns, key: k, value: v });\n                    }\n                }\n            }\n        }\n        return writes;\n    }\n    async update(values) {\n        if (!this.store) {\n            this.processUpdate(values);\n        }\n        else {\n            await this.store.batch(this.processUpdate(values));\n        }\n    }\n    async loadStore() {\n        if (this.store && this.ns) {\n            const saved = await this.store.search(this.ns);\n            this.value = saved.reduce((acc, item) => {\n                acc[item.key] = item.value;\n                return acc;\n            }, {});\n        }\n        return false;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L21hbmFnZWQvc2hhcmVkX3ZhbHVlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ3lFO0FBQ3ZCO0FBQzNDLDBCQUEwQiwwREFBb0I7QUFDckQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwrQ0FBK0MsV0FBVztBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsMkRBQXFCO0FBQzFDLGFBQWE7QUFDYjtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMENBQTBDLHlDQUF5QztBQUNuRjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhCQUE4QiwwREFBa0I7QUFDaEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQ0FBc0Msc0NBQXNDO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLElBQUk7QUFDakI7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvbWFuYWdlZC9zaGFyZWRfdmFsdWUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueSAqL1xuaW1wb3J0IHsgQ2hhbm5lbEtleVBsYWNlaG9sZGVyLCBXcml0YWJsZU1hbmFnZWRWYWx1ZSwgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG5pbXBvcnQgeyBJbnZhbGlkVXBkYXRlRXJyb3IgfSBmcm9tIFwiLi4vZXJyb3JzLmpzXCI7XG5leHBvcnQgY2xhc3MgU2hhcmVkVmFsdWUgZXh0ZW5kcyBXcml0YWJsZU1hbmFnZWRWYWx1ZSB7XG4gICAgY29uc3RydWN0b3IoY29uZmlnLCBwYXJhbXMpIHtcbiAgICAgICAgc3VwZXIoY29uZmlnLCBwYXJhbXMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJzY29wZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJzdG9yZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ2YWx1ZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZToge31cbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc2NvcGUgPSBwYXJhbXMuc2NvcGU7XG4gICAgICAgIHRoaXMuc3RvcmUgPSBjb25maWcuc3RvcmUgfHwgbnVsbDtcbiAgICAgICAgaWYgKCF0aGlzLnN0b3JlKSB7XG4gICAgICAgICAgICB0aGlzLm5zID0gbnVsbDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChjb25maWcuY29uZmlndXJhYmxlPy5bdGhpcy5zY29wZV0pIHtcbiAgICAgICAgICAgIGNvbnN0IHNjb3BlVmFsdWUgPSBjb25maWcuY29uZmlndXJhYmxlW3RoaXMuc2NvcGVdO1xuICAgICAgICAgICAgY29uc3Qgc2NvcGVkVmFsdWVTdHJpbmcgPSB0eXBlb2Ygc2NvcGVWYWx1ZSA9PT0gXCJzdHJpbmdcIlxuICAgICAgICAgICAgICAgID8gc2NvcGVWYWx1ZVxuICAgICAgICAgICAgICAgIDogSlNPTi5zdHJpbmdpZnkoc2NvcGVWYWx1ZSk7XG4gICAgICAgICAgICB0aGlzLm5zID0gW1wic2NvcGVkXCIsIHRoaXMuc2NvcGUsIHBhcmFtcy5rZXksIHNjb3BlZFZhbHVlU3RyaW5nXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgUmVxdWlyZWQgc2NvcGUgXCIke3RoaXMuc2NvcGV9XCIgZm9yIHNoYXJlZCBzdGF0ZSBrZXkgd2FzIG5vdCBwYXNzZWQgaW4gXCJjb25maWcuY29uZmlndXJhYmxlXCIuYCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc3RhdGljIGFzeW5jIGluaXRpYWxpemUoY29uZmlnLCBhcmdzKSB7XG4gICAgICAgIGNvbnN0IGluc3RhbmNlID0gbmV3IHRoaXMoY29uZmlnLCBhcmdzKTtcbiAgICAgICAgYXdhaXQgaW5zdGFuY2UubG9hZFN0b3JlKCk7XG4gICAgICAgIHJldHVybiBpbnN0YW5jZTtcbiAgICB9XG4gICAgc3RhdGljIG9uKHNjb3BlKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjbHM6IFNoYXJlZFZhbHVlLFxuICAgICAgICAgICAgcGFyYW1zOiB7XG4gICAgICAgICAgICAgICAgc2NvcGUsXG4gICAgICAgICAgICAgICAga2V5OiBDaGFubmVsS2V5UGxhY2Vob2xkZXIsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9O1xuICAgIH1cbiAgICBjYWxsKF9zdGVwKSB7XG4gICAgICAgIHJldHVybiB7IC4uLnRoaXMudmFsdWUgfTtcbiAgICB9XG4gICAgcHJvY2Vzc1VwZGF0ZSh2YWx1ZXMpIHtcbiAgICAgICAgY29uc3Qgd3JpdGVzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgdnYgb2YgdmFsdWVzKSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyh2dikpIHtcbiAgICAgICAgICAgICAgICBpZiAodiA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICBpZiAoayBpbiB0aGlzLnZhbHVlKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBkZWxldGUgdGhpcy52YWx1ZVtrXTtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm5zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgd3JpdGVzLnB1c2goeyBuYW1lc3BhY2U6IHRoaXMubnMsIGtleTogaywgdmFsdWU6IG51bGwgfSk7XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAodHlwZW9mIHYgIT09IFwib2JqZWN0XCIgfHwgdiA9PT0gbnVsbCkge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgSW52YWxpZFVwZGF0ZUVycm9yKFwiUmVjZWl2ZWQgYSBub24tb2JqZWN0IHZhbHVlXCIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy52YWx1ZVtrXSA9IHY7XG4gICAgICAgICAgICAgICAgICAgIGlmICh0aGlzLm5zKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICB3cml0ZXMucHVzaCh7IG5hbWVzcGFjZTogdGhpcy5ucywga2V5OiBrLCB2YWx1ZTogdiB9KTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gd3JpdGVzO1xuICAgIH1cbiAgICBhc3luYyB1cGRhdGUodmFsdWVzKSB7XG4gICAgICAgIGlmICghdGhpcy5zdG9yZSkge1xuICAgICAgICAgICAgdGhpcy5wcm9jZXNzVXBkYXRlKHZhbHVlcyk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBhd2FpdCB0aGlzLnN0b3JlLmJhdGNoKHRoaXMucHJvY2Vzc1VwZGF0ZSh2YWx1ZXMpKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBhc3luYyBsb2FkU3RvcmUoKSB7XG4gICAgICAgIGlmICh0aGlzLnN0b3JlICYmIHRoaXMubnMpIHtcbiAgICAgICAgICAgIGNvbnN0IHNhdmVkID0gYXdhaXQgdGhpcy5zdG9yZS5zZWFyY2godGhpcy5ucyk7XG4gICAgICAgICAgICB0aGlzLnZhbHVlID0gc2F2ZWQucmVkdWNlKChhY2MsIGl0ZW0pID0+IHtcbiAgICAgICAgICAgICAgICBhY2NbaXRlbS5rZXldID0gaXRlbS52YWx1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICAgICAgfSwge30pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/shared_value.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/agent_executor.js":
/*!***********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/agent_executor.js ***!
  \***********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createAgentExecutor: () => (/* binding */ createAgentExecutor)\n/* harmony export */ });\n/* harmony import */ var _tool_executor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./tool_executor.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_executor.js\");\n/* harmony import */ var _graph_state_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../graph/state.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/state.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n\n\n\n/** @ignore */\nfunction createAgentExecutor({ agentRunnable, tools, }) {\n    let toolExecutor;\n    if (!Array.isArray(tools)) {\n        toolExecutor = tools;\n    }\n    else {\n        toolExecutor = new _tool_executor_js__WEBPACK_IMPORTED_MODULE_0__.ToolExecutor({\n            tools,\n        });\n    }\n    // Define logic that will be used to determine which conditional edge to go down\n    const shouldContinue = (data) => {\n        if (data.agentOutcome && \"returnValues\" in data.agentOutcome) {\n            return \"end\";\n        }\n        return \"continue\";\n    };\n    const runAgent = async (data, config) => {\n        const agentOutcome = await agentRunnable.invoke(data, config);\n        return {\n            agentOutcome,\n        };\n    };\n    const executeTools = async (data, config) => {\n        const agentAction = data.agentOutcome;\n        if (!agentAction || \"returnValues\" in agentAction) {\n            throw new Error(\"Agent has not been run yet\");\n        }\n        const output = await toolExecutor.invoke(agentAction, config);\n        return {\n            steps: [{ action: agentAction, observation: output }],\n        };\n    };\n    // Define a new graph\n    const workflow = new _graph_state_js__WEBPACK_IMPORTED_MODULE_1__.StateGraph({\n        channels: {\n            input: null,\n            agentOutcome: null,\n            steps: {\n                reducer: (x, y) => x.concat(y),\n                default: () => [],\n            },\n        },\n    })\n        // Define the two nodes we will cycle between\n        .addNode(\"agent\", runAgent)\n        .addNode(\"action\", executeTools)\n        // Set the entrypoint as `agent`\n        // This means that this node is the first one called\n        .addEdge(_constants_js__WEBPACK_IMPORTED_MODULE_2__.START, \"agent\")\n        // We now add a conditional edge\n        .addConditionalEdges(\n    // First, we define the start node. We use `agent`.\n    // This means these are the edges taken after the `agent` node is called.\n    \"agent\", \n    // Next, we pass in the function that will determine which node is called next.\n    shouldContinue, \n    // Finally we pass in a mapping.\n    // The keys are strings, and the values are other nodes.\n    // END is a special node marking that the graph should finish.\n    // What will happen is we will call `should_continue`, and then the output of that\n    // will be matched against the keys in this mapping.\n    // Based on which one it matches, that node will then be called.\n    {\n        // If `tools`, then we call the tool node.\n        continue: \"action\",\n        // Otherwise we finish.\n        end: _constants_js__WEBPACK_IMPORTED_MODULE_2__.END,\n    })\n        // We now add a normal edge from `tools` to `agent`.\n        // This means that after `tools` is called, `agent` node is called next.\n        .addEdge(\"action\", \"agent\");\n    return workflow.compile();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWJ1aWx0L2FnZW50X2V4ZWN1dG9yLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBa0Q7QUFDSDtBQUNGO0FBQzdDO0FBQ08sK0JBQStCLHVCQUF1QjtBQUM3RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLDJEQUFZO0FBQ3ZDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNCQUFzQiwwQ0FBMEM7QUFDaEU7QUFDQTtBQUNBO0FBQ0EseUJBQXlCLHVEQUFVO0FBQ25DO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWE7QUFDYixTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpQkFBaUIsZ0RBQUs7QUFDdEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGFBQWEsOENBQUc7QUFDaEIsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvcHJlYnVpbHQvYWdlbnRfZXhlY3V0b3IuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9vbEV4ZWN1dG9yIH0gZnJvbSBcIi4vdG9vbF9leGVjdXRvci5qc1wiO1xuaW1wb3J0IHsgU3RhdGVHcmFwaCB9IGZyb20gXCIuLi9ncmFwaC9zdGF0ZS5qc1wiO1xuaW1wb3J0IHsgRU5ELCBTVEFSVCB9IGZyb20gXCIuLi9jb25zdGFudHMuanNcIjtcbi8qKiBAaWdub3JlICovXG5leHBvcnQgZnVuY3Rpb24gY3JlYXRlQWdlbnRFeGVjdXRvcih7IGFnZW50UnVubmFibGUsIHRvb2xzLCB9KSB7XG4gICAgbGV0IHRvb2xFeGVjdXRvcjtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodG9vbHMpKSB7XG4gICAgICAgIHRvb2xFeGVjdXRvciA9IHRvb2xzO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdG9vbEV4ZWN1dG9yID0gbmV3IFRvb2xFeGVjdXRvcih7XG4gICAgICAgICAgICB0b29scyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIC8vIERlZmluZSBsb2dpYyB0aGF0IHdpbGwgYmUgdXNlZCB0byBkZXRlcm1pbmUgd2hpY2ggY29uZGl0aW9uYWwgZWRnZSB0byBnbyBkb3duXG4gICAgY29uc3Qgc2hvdWxkQ29udGludWUgPSAoZGF0YSkgPT4ge1xuICAgICAgICBpZiAoZGF0YS5hZ2VudE91dGNvbWUgJiYgXCJyZXR1cm5WYWx1ZXNcIiBpbiBkYXRhLmFnZW50T3V0Y29tZSkge1xuICAgICAgICAgICAgcmV0dXJuIFwiZW5kXCI7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFwiY29udGludWVcIjtcbiAgICB9O1xuICAgIGNvbnN0IHJ1bkFnZW50ID0gYXN5bmMgKGRhdGEsIGNvbmZpZykgPT4ge1xuICAgICAgICBjb25zdCBhZ2VudE91dGNvbWUgPSBhd2FpdCBhZ2VudFJ1bm5hYmxlLmludm9rZShkYXRhLCBjb25maWcpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgYWdlbnRPdXRjb21lLFxuICAgICAgICB9O1xuICAgIH07XG4gICAgY29uc3QgZXhlY3V0ZVRvb2xzID0gYXN5bmMgKGRhdGEsIGNvbmZpZykgPT4ge1xuICAgICAgICBjb25zdCBhZ2VudEFjdGlvbiA9IGRhdGEuYWdlbnRPdXRjb21lO1xuICAgICAgICBpZiAoIWFnZW50QWN0aW9uIHx8IFwicmV0dXJuVmFsdWVzXCIgaW4gYWdlbnRBY3Rpb24pIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihcIkFnZW50IGhhcyBub3QgYmVlbiBydW4geWV0XCIpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IG91dHB1dCA9IGF3YWl0IHRvb2xFeGVjdXRvci5pbnZva2UoYWdlbnRBY3Rpb24sIGNvbmZpZyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBzdGVwczogW3sgYWN0aW9uOiBhZ2VudEFjdGlvbiwgb2JzZXJ2YXRpb246IG91dHB1dCB9XSxcbiAgICAgICAgfTtcbiAgICB9O1xuICAgIC8vIERlZmluZSBhIG5ldyBncmFwaFxuICAgIGNvbnN0IHdvcmtmbG93ID0gbmV3IFN0YXRlR3JhcGgoe1xuICAgICAgICBjaGFubmVsczoge1xuICAgICAgICAgICAgaW5wdXQ6IG51bGwsXG4gICAgICAgICAgICBhZ2VudE91dGNvbWU6IG51bGwsXG4gICAgICAgICAgICBzdGVwczoge1xuICAgICAgICAgICAgICAgIHJlZHVjZXI6ICh4LCB5KSA9PiB4LmNvbmNhdCh5KSxcbiAgICAgICAgICAgICAgICBkZWZhdWx0OiAoKSA9PiBbXSxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgfSlcbiAgICAgICAgLy8gRGVmaW5lIHRoZSB0d28gbm9kZXMgd2Ugd2lsbCBjeWNsZSBiZXR3ZWVuXG4gICAgICAgIC5hZGROb2RlKFwiYWdlbnRcIiwgcnVuQWdlbnQpXG4gICAgICAgIC5hZGROb2RlKFwiYWN0aW9uXCIsIGV4ZWN1dGVUb29scylcbiAgICAgICAgLy8gU2V0IHRoZSBlbnRyeXBvaW50IGFzIGBhZ2VudGBcbiAgICAgICAgLy8gVGhpcyBtZWFucyB0aGF0IHRoaXMgbm9kZSBpcyB0aGUgZmlyc3Qgb25lIGNhbGxlZFxuICAgICAgICAuYWRkRWRnZShTVEFSVCwgXCJhZ2VudFwiKVxuICAgICAgICAvLyBXZSBub3cgYWRkIGEgY29uZGl0aW9uYWwgZWRnZVxuICAgICAgICAuYWRkQ29uZGl0aW9uYWxFZGdlcyhcbiAgICAvLyBGaXJzdCwgd2UgZGVmaW5lIHRoZSBzdGFydCBub2RlLiBXZSB1c2UgYGFnZW50YC5cbiAgICAvLyBUaGlzIG1lYW5zIHRoZXNlIGFyZSB0aGUgZWRnZXMgdGFrZW4gYWZ0ZXIgdGhlIGBhZ2VudGAgbm9kZSBpcyBjYWxsZWQuXG4gICAgXCJhZ2VudFwiLCBcbiAgICAvLyBOZXh0LCB3ZSBwYXNzIGluIHRoZSBmdW5jdGlvbiB0aGF0IHdpbGwgZGV0ZXJtaW5lIHdoaWNoIG5vZGUgaXMgY2FsbGVkIG5leHQuXG4gICAgc2hvdWxkQ29udGludWUsIFxuICAgIC8vIEZpbmFsbHkgd2UgcGFzcyBpbiBhIG1hcHBpbmcuXG4gICAgLy8gVGhlIGtleXMgYXJlIHN0cmluZ3MsIGFuZCB0aGUgdmFsdWVzIGFyZSBvdGhlciBub2Rlcy5cbiAgICAvLyBFTkQgaXMgYSBzcGVjaWFsIG5vZGUgbWFya2luZyB0aGF0IHRoZSBncmFwaCBzaG91bGQgZmluaXNoLlxuICAgIC8vIFdoYXQgd2lsbCBoYXBwZW4gaXMgd2Ugd2lsbCBjYWxsIGBzaG91bGRfY29udGludWVgLCBhbmQgdGhlbiB0aGUgb3V0cHV0IG9mIHRoYXRcbiAgICAvLyB3aWxsIGJlIG1hdGNoZWQgYWdhaW5zdCB0aGUga2V5cyBpbiB0aGlzIG1hcHBpbmcuXG4gICAgLy8gQmFzZWQgb24gd2hpY2ggb25lIGl0IG1hdGNoZXMsIHRoYXQgbm9kZSB3aWxsIHRoZW4gYmUgY2FsbGVkLlxuICAgIHtcbiAgICAgICAgLy8gSWYgYHRvb2xzYCwgdGhlbiB3ZSBjYWxsIHRoZSB0b29sIG5vZGUuXG4gICAgICAgIGNvbnRpbnVlOiBcImFjdGlvblwiLFxuICAgICAgICAvLyBPdGhlcndpc2Ugd2UgZmluaXNoLlxuICAgICAgICBlbmQ6IEVORCxcbiAgICB9KVxuICAgICAgICAvLyBXZSBub3cgYWRkIGEgbm9ybWFsIGVkZ2UgZnJvbSBgdG9vbHNgIHRvIGBhZ2VudGAuXG4gICAgICAgIC8vIFRoaXMgbWVhbnMgdGhhdCBhZnRlciBgdG9vbHNgIGlzIGNhbGxlZCwgYGFnZW50YCBub2RlIGlzIGNhbGxlZCBuZXh0LlxuICAgICAgICAuYWRkRWRnZShcImFjdGlvblwiLCBcImFnZW50XCIpO1xuICAgIHJldHVybiB3b3JrZmxvdy5jb21waWxlKCk7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/agent_executor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/chat_agent_executor.js":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/chat_agent_executor.js ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createFunctionCallingExecutor: () => (/* binding */ createFunctionCallingExecutor)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/utils/function_calling */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/utils/function_calling.js\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _tool_executor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tool_executor.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_executor.js\");\n/* harmony import */ var _graph_state_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../graph/state.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/state.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n\n\n\n\n\n\n/** @deprecated Use {@link createReactAgent} instead with tool calling. */\nfunction createFunctionCallingExecutor({ model, tools, }) {\n    let toolExecutor;\n    let toolClasses;\n    if (!Array.isArray(tools)) {\n        toolExecutor = tools;\n        toolClasses = tools.tools;\n    }\n    else {\n        toolExecutor = new _tool_executor_js__WEBPACK_IMPORTED_MODULE_3__.ToolExecutor({\n            tools,\n        });\n        toolClasses = tools;\n    }\n    if (!(\"bind\" in model) || typeof model.bind !== \"function\") {\n        throw new Error(\"Model must be bindable\");\n    }\n    const toolsAsOpenAIFunctions = toolClasses.map((tool) => (0,_langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_0__.convertToOpenAIFunction)(tool));\n    const newModel = model.bind({\n        functions: toolsAsOpenAIFunctions,\n    });\n    // Define the function that determines whether to continue or not\n    const shouldContinue = (state) => {\n        const { messages } = state;\n        const lastMessage = messages[messages.length - 1];\n        // If there is no function call, then we finish\n        if (!(\"function_call\" in lastMessage.additional_kwargs) ||\n            !lastMessage.additional_kwargs.function_call) {\n            return \"end\";\n        }\n        // Otherwise if there is, we continue\n        return \"continue\";\n    };\n    // Define the function that calls the model\n    const callModel = async (state, config) => {\n        const { messages } = state;\n        const response = await newModel.invoke(messages, config);\n        // We return a list, because this will get added to the existing list\n        return {\n            messages: [response],\n        };\n    };\n    // Define the function to execute tools\n    const _getAction = (state) => {\n        const { messages } = state;\n        // Based on the continue condition\n        // we know the last message involves a function call\n        const lastMessage = messages[messages.length - 1];\n        if (!lastMessage) {\n            throw new Error(\"No messages found.\");\n        }\n        if (!lastMessage.additional_kwargs.function_call) {\n            throw new Error(\"No function call found in message.\");\n        }\n        // We construct an AgentAction from the function_call\n        return {\n            tool: lastMessage.additional_kwargs.function_call.name,\n            toolInput: JSON.stringify(lastMessage.additional_kwargs.function_call.arguments),\n            log: \"\",\n        };\n    };\n    const callTool = async (state, config) => {\n        const action = _getAction(state);\n        // We call the tool_executor and get back a response\n        const response = await toolExecutor.invoke(action, config);\n        // We use the response to create a FunctionMessage\n        const functionMessage = new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.FunctionMessage({\n            content: response,\n            name: action.tool,\n        });\n        // We return a list, because this will get added to the existing list\n        return { messages: [functionMessage] };\n    };\n    // We create the AgentState that we will pass around\n    // This simply involves a list of messages\n    // We want steps to return messages to append to the list\n    // So we annotate the messages attribute with operator.add\n    const schema = {\n        messages: {\n            value: (x, y) => x.concat(y),\n            default: () => [],\n        },\n    };\n    // Define a new graph\n    const workflow = new _graph_state_js__WEBPACK_IMPORTED_MODULE_4__.StateGraph({\n        channels: schema,\n    })\n        // Define the two nodes we will cycle between\n        .addNode(\"agent\", new _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.RunnableLambda({ func: callModel }))\n        .addNode(\"action\", new _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.RunnableLambda({ func: callTool }))\n        // Set the entrypoint as `agent`\n        // This means that this node is the first one called\n        .addEdge(_constants_js__WEBPACK_IMPORTED_MODULE_5__.START, \"agent\")\n        // We now add a conditional edge\n        .addConditionalEdges(\n    // First, we define the start node. We use `agent`.\n    // This means these are the edges taken after the `agent` node is called.\n    \"agent\", \n    // Next, we pass in the function that will determine which node is called next.\n    shouldContinue, \n    // Finally we pass in a mapping.\n    // The keys are strings, and the values are other nodes.\n    // END is a special node marking that the graph should finish.\n    // What will happen is we will call `should_continue`, and then the output of that\n    // will be matched against the keys in this mapping.\n    // Based on which one it matches, that node will then be called.\n    {\n        // If `tools`, then we call the tool node.\n        continue: \"action\",\n        // Otherwise we finish.\n        end: _constants_js__WEBPACK_IMPORTED_MODULE_5__.END,\n    })\n        // We now add a normal edge from `tools` to `agent`.\n        // This means that after `tools` is called, `agent` node is called next.\n        .addEdge(\"action\", \"agent\");\n    // Finally, we compile it!\n    // This compiles it into a LangChain Runnable,\n    // meaning you can use it as you would any other runnable\n    return workflow.compile();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/chat_agent_executor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/index.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/index.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolExecutor: () => (/* reexport safe */ _tool_executor_js__WEBPACK_IMPORTED_MODULE_3__.ToolExecutor),\n/* harmony export */   ToolNode: () => (/* reexport safe */ _tool_node_js__WEBPACK_IMPORTED_MODULE_4__.ToolNode),\n/* harmony export */   createAgentExecutor: () => (/* reexport safe */ _agent_executor_js__WEBPACK_IMPORTED_MODULE_0__.createAgentExecutor),\n/* harmony export */   createFunctionCallingExecutor: () => (/* reexport safe */ _chat_agent_executor_js__WEBPACK_IMPORTED_MODULE_1__.createFunctionCallingExecutor),\n/* harmony export */   createReactAgent: () => (/* reexport safe */ _react_agent_executor_js__WEBPACK_IMPORTED_MODULE_2__.createReactAgent),\n/* harmony export */   toolsCondition: () => (/* reexport safe */ _tool_node_js__WEBPACK_IMPORTED_MODULE_4__.toolsCondition)\n/* harmony export */ });\n/* harmony import */ var _agent_executor_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./agent_executor.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/agent_executor.js\");\n/* harmony import */ var _chat_agent_executor_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./chat_agent_executor.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/chat_agent_executor.js\");\n/* harmony import */ var _react_agent_executor_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./react_agent_executor.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/react_agent_executor.js\");\n/* harmony import */ var _tool_executor_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tool_executor.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_executor.js\");\n/* harmony import */ var _tool_node_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./tool_node.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_node.js\");\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWJ1aWx0L2luZGV4LmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBQTJEO0FBQ2U7QUFDWjtBQUNYO0FBQ08iLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvcHJlYnVpbHQvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgY3JlYXRlQWdlbnRFeGVjdXRvciwgfSBmcm9tIFwiLi9hZ2VudF9leGVjdXRvci5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlRnVuY3Rpb25DYWxsaW5nRXhlY3V0b3IsIH0gZnJvbSBcIi4vY2hhdF9hZ2VudF9leGVjdXRvci5qc1wiO1xuZXhwb3J0IHsgY3JlYXRlUmVhY3RBZ2VudCwgfSBmcm9tIFwiLi9yZWFjdF9hZ2VudF9leGVjdXRvci5qc1wiO1xuZXhwb3J0IHsgVG9vbEV4ZWN1dG9yLCB9IGZyb20gXCIuL3Rvb2xfZXhlY3V0b3IuanNcIjtcbmV4cG9ydCB7IFRvb2xOb2RlLCB0b29sc0NvbmRpdGlvbiB9IGZyb20gXCIuL3Rvb2xfbm9kZS5qc1wiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/react_agent_executor.js":
/*!*****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/react_agent_executor.js ***!
  \*****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createReactAgent: () => (/* binding */ createReactAgent),\n/* harmony export */   createReactAgentAnnotation: () => (/* binding */ createReactAgentAnnotation)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _graph_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../graph/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/index.js\");\n/* harmony import */ var _tool_node_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./tool_node.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_node.js\");\n/* harmony import */ var _graph_annotation_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../graph/annotation.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/annotation.js\");\n/* harmony import */ var _graph_message_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../graph/message.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/message.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n\n\n\n\n\n\n\nfunction _convertMessageModifierToPrompt(messageModifier) {\n    // Handle string or SystemMessage\n    if (typeof messageModifier === \"string\" ||\n        ((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(messageModifier) && messageModifier._getType() === \"system\")) {\n        return messageModifier;\n    }\n    // Handle callable function\n    if (typeof messageModifier === \"function\") {\n        return async (state) => messageModifier(state.messages);\n    }\n    // Handle Runnable\n    if (_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.Runnable.isRunnable(messageModifier)) {\n        return _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.RunnableLambda.from((state) => state.messages).pipe(messageModifier);\n    }\n    throw new Error(`Unexpected type for messageModifier: ${typeof messageModifier}`);\n}\nconst PROMPT_RUNNABLE_NAME = \"prompt\";\nfunction _getPromptRunnable(prompt) {\n    let promptRunnable;\n    if (prompt == null) {\n        promptRunnable = _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.RunnableLambda.from((state) => state.messages).withConfig({ runName: PROMPT_RUNNABLE_NAME });\n    }\n    else if (typeof prompt === \"string\") {\n        const systemMessage = new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.SystemMessage(prompt);\n        promptRunnable = _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.RunnableLambda.from((state) => {\n            return [systemMessage, ...(state.messages ?? [])];\n        }).withConfig({ runName: PROMPT_RUNNABLE_NAME });\n    }\n    else if ((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(prompt) && prompt._getType() === \"system\") {\n        promptRunnable = _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.RunnableLambda.from((state) => [prompt, ...state.messages]).withConfig({ runName: PROMPT_RUNNABLE_NAME });\n    }\n    else if (typeof prompt === \"function\") {\n        promptRunnable = _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.RunnableLambda.from(prompt).withConfig({\n            runName: PROMPT_RUNNABLE_NAME,\n        });\n    }\n    else if (_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.Runnable.isRunnable(prompt)) {\n        promptRunnable = prompt;\n    }\n    else {\n        throw new Error(`Got unexpected type for 'prompt': ${typeof prompt}`);\n    }\n    return promptRunnable;\n}\nfunction _getPrompt(prompt, stateModifier, messageModifier) {\n    // Check if multiple modifiers exist\n    const definedCount = [prompt, stateModifier, messageModifier].filter((x) => x != null).length;\n    if (definedCount > 1) {\n        throw new Error(\"Expected only one of prompt, stateModifier, or messageModifier, got multiple values\");\n    }\n    let finalPrompt = prompt;\n    if (stateModifier != null) {\n        finalPrompt = stateModifier;\n    }\n    else if (messageModifier != null) {\n        finalPrompt = _convertMessageModifierToPrompt(messageModifier);\n    }\n    return _getPromptRunnable(finalPrompt);\n}\nfunction _shouldBindTools(llm, tools) {\n    if (!_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.Runnable.isRunnable(llm) || !(\"kwargs\" in llm)) {\n        return true;\n    }\n    if (!llm.kwargs ||\n        typeof llm.kwargs !== \"object\" ||\n        !(\"tools\" in llm.kwargs)) {\n        return true;\n    }\n    const boundTools = llm.kwargs.tools;\n    if (tools.length !== boundTools.length) {\n        throw new Error(\"Number of tools in the model.bindTools() and tools passed to createReactAgent must match\");\n    }\n    const toolNames = new Set(tools.map((tool) => tool.name));\n    const boundToolNames = new Set();\n    for (const boundTool of boundTools) {\n        let boundToolName;\n        // OpenAI-style tool\n        if (\"type\" in boundTool && boundTool.type === \"function\") {\n            boundToolName = boundTool.function.name;\n        }\n        // Anthropic-style tool\n        else if (\"name\" in boundTool) {\n            boundToolName = boundTool.name;\n        }\n        // unknown tool type so we'll ignore it\n        else {\n            continue;\n        }\n        boundToolNames.add(boundToolName);\n    }\n    const missingTools = [...toolNames].filter((x) => !boundToolNames.has(x));\n    if (missingTools.length > 0) {\n        throw new Error(`Missing tools '${missingTools}' in the model.bindTools().` +\n            `Tools in the model.bindTools() must match the tools passed to createReactAgent.`);\n    }\n    return false;\n}\nfunction _getModel(llm) {\n    // Get the underlying model from a RunnableBinding or return the model itself\n    let model = llm;\n    if (_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_1__.Runnable.isRunnable(llm) && \"bound\" in llm) {\n        model = llm.bound;\n    }\n    if (!(\"invoke\" in model &&\n        typeof model.invoke === \"function\" &&\n        \"_modelType\" in model)) {\n        throw new Error(`Expected \\`llm\\` to be a ChatModel or RunnableBinding (e.g. llm.bind_tools(...)) with invoke() and generate() methods, got ${model.constructor.name}`);\n    }\n    return model;\n}\nconst createReactAgentAnnotation = () => _graph_annotation_js__WEBPACK_IMPORTED_MODULE_4__.Annotation.Root({\n    messages: (0,_graph_annotation_js__WEBPACK_IMPORTED_MODULE_4__.Annotation)({\n        reducer: _graph_message_js__WEBPACK_IMPORTED_MODULE_5__.messagesStateReducer,\n        default: () => [],\n    }),\n    structuredResponse: (_graph_annotation_js__WEBPACK_IMPORTED_MODULE_4__.Annotation),\n});\n/**\n * Creates a StateGraph agent that relies on a chat model utilizing tool calling.\n *\n * @example\n * ```ts\n * import { ChatOpenAI } from \"@langchain/openai\";\n * import { tool } from \"@langchain/core/tools\";\n * import { z } from \"zod\";\n * import { createReactAgent } from \"@langchain/langgraph/prebuilt\";\n *\n * const model = new ChatOpenAI({\n *   model: \"gpt-4o\",\n * });\n *\n * const getWeather = tool((input) => {\n *   if ([\"sf\", \"san francisco\"].includes(input.location.toLowerCase())) {\n *     return \"It's 60 degrees and foggy.\";\n *   } else {\n *     return \"It's 90 degrees and sunny.\";\n *   }\n * }, {\n *   name: \"get_weather\",\n *   description: \"Call to get the current weather.\",\n *   schema: z.object({\n *     location: z.string().describe(\"Location to get the weather for.\"),\n *   })\n * })\n *\n * const agent = createReactAgent({ llm: model, tools: [getWeather] });\n *\n * const inputs = {\n *   messages: [{ role: \"user\", content: \"what is the weather in SF?\" }],\n * };\n *\n * const stream = await agent.stream(inputs, { streamMode: \"values\" });\n *\n * for await (const { messages } of stream) {\n *   console.log(messages);\n * }\n * // Returns the messages in the state at each step of execution\n * ```\n */\nfunction createReactAgent(params) {\n    const { llm, tools, messageModifier, stateModifier, prompt, stateSchema, checkpointSaver, checkpointer, interruptBefore, interruptAfter, store, responseFormat, name, } = params;\n    let toolClasses;\n    if (!Array.isArray(tools)) {\n        toolClasses = tools.tools;\n    }\n    else {\n        toolClasses = tools;\n    }\n    let modelWithTools;\n    if (_shouldBindTools(llm, toolClasses)) {\n        if (!(\"bindTools\" in llm) || typeof llm.bindTools !== \"function\") {\n            throw new Error(`llm ${llm} must define bindTools method.`);\n        }\n        modelWithTools = llm.bindTools(toolClasses);\n    }\n    else {\n        modelWithTools = llm;\n    }\n    const modelRunnable = _getPrompt(prompt, stateModifier, messageModifier).pipe(modelWithTools);\n    // If any of the tools are configured to return_directly after running,\n    // our graph needs to check if these were called\n    const shouldReturnDirect = new Set(toolClasses\n        .filter((tool) => \"returnDirect\" in tool && tool.returnDirect)\n        .map((tool) => tool.name));\n    const shouldContinue = (state) => {\n        const { messages } = state;\n        const lastMessage = messages[messages.length - 1];\n        if ((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isAIMessage)(lastMessage) &&\n            (!lastMessage.tool_calls || lastMessage.tool_calls.length === 0)) {\n            return responseFormat != null ? \"generate_structured_response\" : _constants_js__WEBPACK_IMPORTED_MODULE_6__.END;\n        }\n        else {\n            return \"continue\";\n        }\n    };\n    const generateStructuredResponse = async (state, config) => {\n        if (responseFormat == null) {\n            throw new Error(\"Attempted to generate structured output with no passed response schema. Please contact us for help.\");\n        }\n        // Exclude the last message as there's enough information\n        // for the LLM to generate the structured response\n        const messages = state.messages.slice(0, -1);\n        let modelWithStructuredOutput;\n        if (typeof responseFormat === \"object\" &&\n            \"prompt\" in responseFormat &&\n            \"schema\" in responseFormat) {\n            const { prompt, schema } = responseFormat;\n            modelWithStructuredOutput = _getModel(llm).withStructuredOutput(schema);\n            messages.unshift(new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.SystemMessage({ content: prompt }));\n        }\n        else {\n            modelWithStructuredOutput =\n                _getModel(llm).withStructuredOutput(responseFormat);\n        }\n        const response = await modelWithStructuredOutput.invoke(messages, config);\n        return { structuredResponse: response };\n    };\n    const callModel = async (state, config) => {\n        // TODO: Auto-promote streaming.\n        return { messages: [await modelRunnable.invoke(state, config)] };\n    };\n    const workflow = new _graph_index_js__WEBPACK_IMPORTED_MODULE_2__.StateGraph(stateSchema ?? createReactAgentAnnotation())\n        .addNode(\"agent\", callModel)\n        .addNode(\"tools\", new _tool_node_js__WEBPACK_IMPORTED_MODULE_3__.ToolNode(toolClasses))\n        .addEdge(_constants_js__WEBPACK_IMPORTED_MODULE_6__.START, \"agent\");\n    if (responseFormat !== undefined) {\n        workflow\n            .addNode(\"generate_structured_response\", generateStructuredResponse)\n            .addEdge(\"generate_structured_response\", _constants_js__WEBPACK_IMPORTED_MODULE_6__.END)\n            .addConditionalEdges(\"agent\", shouldContinue, {\n            continue: \"tools\",\n            [_constants_js__WEBPACK_IMPORTED_MODULE_6__.END]: _constants_js__WEBPACK_IMPORTED_MODULE_6__.END,\n            generate_structured_response: \"generate_structured_response\",\n        });\n    }\n    else {\n        workflow.addConditionalEdges(\"agent\", shouldContinue, {\n            continue: \"tools\",\n            [_constants_js__WEBPACK_IMPORTED_MODULE_6__.END]: _constants_js__WEBPACK_IMPORTED_MODULE_6__.END,\n        });\n    }\n    const routeToolResponses = (state) => {\n        // Check the last consecutive tool calls\n        for (let i = state.messages.length - 1; i >= 0; i -= 1) {\n            const message = state.messages[i];\n            if (!(0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isToolMessage)(message)) {\n                break;\n            }\n            // Check if this tool is configured to return directly\n            if (message.name !== undefined && shouldReturnDirect.has(message.name)) {\n                return _constants_js__WEBPACK_IMPORTED_MODULE_6__.END;\n            }\n        }\n        return \"agent\";\n    };\n    if (shouldReturnDirect.size > 0) {\n        workflow.addConditionalEdges(\"tools\", routeToolResponses, [\"agent\", _constants_js__WEBPACK_IMPORTED_MODULE_6__.END]);\n    }\n    else {\n        workflow.addEdge(\"tools\", \"agent\");\n    }\n    return workflow.compile({\n        checkpointer: checkpointer ?? checkpointSaver,\n        interruptBefore,\n        interruptAfter,\n        store,\n        name,\n    });\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/react_agent_executor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_executor.js":
/*!**********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_executor.js ***!
  \**********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolExecutor: () => (/* binding */ ToolExecutor)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n\nconst INVALID_TOOL_MSG_TEMPLATE = `{requestedToolName} is not a valid tool, try one of {availableToolNamesString}.`;\n/** @deprecated Use {@link ToolNode} instead. */\nclass ToolExecutor extends _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnableBinding {\n    constructor(fields) {\n        const fieldsWithDefaults = {\n            invalidToolMsgTemplate: INVALID_TOOL_MSG_TEMPLATE,\n            ...fields,\n        };\n        const bound = _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnableLambda.from(async (input, config) => this._execute(input, config));\n        super({\n            bound,\n            config: {},\n        });\n        Object.defineProperty(this, \"lc_graph_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ToolExecutor\"\n        });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"toolMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"invalidToolMsgTemplate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.tools = fieldsWithDefaults.tools;\n        this.invalidToolMsgTemplate = fieldsWithDefaults.invalidToolMsgTemplate;\n        this.toolMap = this.tools.reduce((acc, tool) => {\n            acc[tool.name] = tool;\n            return acc;\n        }, {});\n    }\n    /**\n     * Execute a tool invocation\n     *\n     * @param {ToolInvocationInterface} toolInvocation The tool to invoke and the input to pass to it.\n     * @param {RunnableConfig | undefined} config Optional configuration to pass to the tool when invoked.\n     * @returns Either the result of the tool invocation (`string` or `ToolMessage`, set by the `ToolOutput` generic) or a string error message.\n     */\n    async _execute(toolInvocation, config) {\n        if (!(toolInvocation.tool in this.toolMap)) {\n            return this.invalidToolMsgTemplate\n                .replace(\"{requestedToolName}\", toolInvocation.tool)\n                .replace(\"{availableToolNamesString}\", Object.keys(this.toolMap).join(\", \"));\n        }\n        else {\n            const tool = this.toolMap[toolInvocation.tool];\n            const output = await tool.invoke(toolInvocation.toolInput, config);\n            return output;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWJ1aWx0L3Rvb2xfZXhlY3V0b3IuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBNkU7QUFDN0Usb0NBQW9DLG1CQUFtQixpQ0FBaUMseUJBQXlCO0FBQ2pILHFCQUFxQixnQkFBZ0I7QUFDOUIsMkJBQTJCLHNFQUFlO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IscUVBQWM7QUFDcEM7QUFDQTtBQUNBLHNCQUFzQjtBQUN0QixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUyxJQUFJO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxlQUFlLHlCQUF5QjtBQUN4QyxlQUFlLDRCQUE0QjtBQUMzQztBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsMkJBQTJCLGtCQUFrQjtBQUM3QywyQkFBMkIseUJBQXlCO0FBQ3BEO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvcHJlYnVpbHQvdG9vbF9leGVjdXRvci5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBSdW5uYWJsZUJpbmRpbmcsIFJ1bm5hYmxlTGFtYmRhLCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvcnVubmFibGVzXCI7XG5jb25zdCBJTlZBTElEX1RPT0xfTVNHX1RFTVBMQVRFID0gYHtyZXF1ZXN0ZWRUb29sTmFtZX0gaXMgbm90IGEgdmFsaWQgdG9vbCwgdHJ5IG9uZSBvZiB7YXZhaWxhYmxlVG9vbE5hbWVzU3RyaW5nfS5gO1xuLyoqIEBkZXByZWNhdGVkIFVzZSB7QGxpbmsgVG9vbE5vZGV9IGluc3RlYWQuICovXG5leHBvcnQgY2xhc3MgVG9vbEV4ZWN1dG9yIGV4dGVuZHMgUnVubmFibGVCaW5kaW5nIHtcbiAgICBjb25zdHJ1Y3RvcihmaWVsZHMpIHtcbiAgICAgICAgY29uc3QgZmllbGRzV2l0aERlZmF1bHRzID0ge1xuICAgICAgICAgICAgaW52YWxpZFRvb2xNc2dUZW1wbGF0ZTogSU5WQUxJRF9UT09MX01TR19URU1QTEFURSxcbiAgICAgICAgICAgIC4uLmZpZWxkcyxcbiAgICAgICAgfTtcbiAgICAgICAgY29uc3QgYm91bmQgPSBSdW5uYWJsZUxhbWJkYS5mcm9tKGFzeW5jIChpbnB1dCwgY29uZmlnKSA9PiB0aGlzLl9leGVjdXRlKGlucHV0LCBjb25maWcpKTtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgYm91bmQsXG4gICAgICAgICAgICBjb25maWc6IHt9LFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibGNfZ3JhcGhfbmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJUb29sRXhlY3V0b3JcIlxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidG9vbHNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwidG9vbE1hcFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbnZhbGlkVG9vbE1zZ1RlbXBsYXRlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMudG9vbHMgPSBmaWVsZHNXaXRoRGVmYXVsdHMudG9vbHM7XG4gICAgICAgIHRoaXMuaW52YWxpZFRvb2xNc2dUZW1wbGF0ZSA9IGZpZWxkc1dpdGhEZWZhdWx0cy5pbnZhbGlkVG9vbE1zZ1RlbXBsYXRlO1xuICAgICAgICB0aGlzLnRvb2xNYXAgPSB0aGlzLnRvb2xzLnJlZHVjZSgoYWNjLCB0b29sKSA9PiB7XG4gICAgICAgICAgICBhY2NbdG9vbC5uYW1lXSA9IHRvb2w7XG4gICAgICAgICAgICByZXR1cm4gYWNjO1xuICAgICAgICB9LCB7fSk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIEV4ZWN1dGUgYSB0b29sIGludm9jYXRpb25cbiAgICAgKlxuICAgICAqIEBwYXJhbSB7VG9vbEludm9jYXRpb25JbnRlcmZhY2V9IHRvb2xJbnZvY2F0aW9uIFRoZSB0b29sIHRvIGludm9rZSBhbmQgdGhlIGlucHV0IHRvIHBhc3MgdG8gaXQuXG4gICAgICogQHBhcmFtIHtSdW5uYWJsZUNvbmZpZyB8IHVuZGVmaW5lZH0gY29uZmlnIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gdG8gcGFzcyB0byB0aGUgdG9vbCB3aGVuIGludm9rZWQuXG4gICAgICogQHJldHVybnMgRWl0aGVyIHRoZSByZXN1bHQgb2YgdGhlIHRvb2wgaW52b2NhdGlvbiAoYHN0cmluZ2Agb3IgYFRvb2xNZXNzYWdlYCwgc2V0IGJ5IHRoZSBgVG9vbE91dHB1dGAgZ2VuZXJpYykgb3IgYSBzdHJpbmcgZXJyb3IgbWVzc2FnZS5cbiAgICAgKi9cbiAgICBhc3luYyBfZXhlY3V0ZSh0b29sSW52b2NhdGlvbiwgY29uZmlnKSB7XG4gICAgICAgIGlmICghKHRvb2xJbnZvY2F0aW9uLnRvb2wgaW4gdGhpcy50b29sTWFwKSkge1xuICAgICAgICAgICAgcmV0dXJuIHRoaXMuaW52YWxpZFRvb2xNc2dUZW1wbGF0ZVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKFwie3JlcXVlc3RlZFRvb2xOYW1lfVwiLCB0b29sSW52b2NhdGlvbi50b29sKVxuICAgICAgICAgICAgICAgIC5yZXBsYWNlKFwie2F2YWlsYWJsZVRvb2xOYW1lc1N0cmluZ31cIiwgT2JqZWN0LmtleXModGhpcy50b29sTWFwKS5qb2luKFwiLCBcIikpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc3QgdG9vbCA9IHRoaXMudG9vbE1hcFt0b29sSW52b2NhdGlvbi50b29sXTtcbiAgICAgICAgICAgIGNvbnN0IG91dHB1dCA9IGF3YWl0IHRvb2wuaW52b2tlKHRvb2xJbnZvY2F0aW9uLnRvb2xJbnB1dCwgY29uZmlnKTtcbiAgICAgICAgICAgIHJldHVybiBvdXRwdXQ7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_executor.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_node.js":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_node.js ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ToolNode: () => (/* binding */ ToolNode),\n/* harmony export */   toolsCondition: () => (/* binding */ toolsCondition)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n\n\n\n\n/**\n * A node that runs the tools requested in the last AIMessage. It can be used\n * either in StateGraph with a \"messages\" key or in MessageGraph. If multiple\n * tool calls are requested, they will be run in parallel. The output will be\n * a list of ToolMessages, one for each tool call.\n *\n * @example\n * ```ts\n * import { ToolNode } from \"@langchain/langgraph/prebuilt\";\n * import { tool } from \"@langchain/core/tools\";\n * import { z } from \"zod\";\n * import { AIMessage } from \"@langchain/core/messages\";\n *\n * const getWeather = tool((input) => {\n *   if ([\"sf\", \"san francisco\"].includes(input.location.toLowerCase())) {\n *     return \"It's 60 degrees and foggy.\";\n *   } else {\n *     return \"It's 90 degrees and sunny.\";\n *   }\n * }, {\n *   name: \"get_weather\",\n *   description: \"Call to get the current weather.\",\n *   schema: z.object({\n *     location: z.string().describe(\"Location to get the weather for.\"),\n *   }),\n * });\n *\n * const tools = [getWeather];\n * const toolNode = new ToolNode(tools);\n *\n * const messageWithSingleToolCall = new AIMessage({\n *   content: \"\",\n *   tool_calls: [\n *     {\n *       name: \"get_weather\",\n *       args: { location: \"sf\" },\n *       id: \"tool_call_id\",\n *       type: \"tool_call\",\n *     }\n *   ]\n * })\n *\n * await toolNode.invoke({ messages: [messageWithSingleToolCall] });\n * // Returns tool invocation responses as:\n * // { messages: ToolMessage[] }\n * ```\n *\n * @example\n * ```ts\n * import {\n *   StateGraph,\n *   MessagesAnnotation,\n * } from \"@langchain/langgraph\";\n * import { ToolNode } from \"@langchain/langgraph/prebuilt\";\n * import { tool } from \"@langchain/core/tools\";\n * import { z } from \"zod\";\n * import { ChatAnthropic } from \"@langchain/anthropic\";\n *\n * const getWeather = tool((input) => {\n *   if ([\"sf\", \"san francisco\"].includes(input.location.toLowerCase())) {\n *     return \"It's 60 degrees and foggy.\";\n *   } else {\n *     return \"It's 90 degrees and sunny.\";\n *   }\n * }, {\n *   name: \"get_weather\",\n *   description: \"Call to get the current weather.\",\n *   schema: z.object({\n *     location: z.string().describe(\"Location to get the weather for.\"),\n *   }),\n * });\n *\n * const tools = [getWeather];\n * const modelWithTools = new ChatAnthropic({\n *   model: \"claude-3-haiku-20240307\",\n *   temperature: 0\n * }).bindTools(tools);\n *\n * const toolNodeForGraph = new ToolNode(tools)\n *\n * const shouldContinue = (state: typeof MessagesAnnotation.State) => {\n *   const { messages } = state;\n *   const lastMessage = messages[messages.length - 1];\n *   if (\"tool_calls\" in lastMessage && Array.isArray(lastMessage.tool_calls) && lastMessage.tool_calls?.length) {\n *     return \"tools\";\n *   }\n *   return \"__end__\";\n * }\n *\n * const callModel = async (state: typeof MessagesAnnotation.State) => {\n *   const { messages } = state;\n *   const response = await modelWithTools.invoke(messages);\n *   return { messages: response };\n * }\n *\n * const graph = new StateGraph(MessagesAnnotation)\n *   .addNode(\"agent\", callModel)\n *   .addNode(\"tools\", toolNodeForGraph)\n *   .addEdge(\"__start__\", \"agent\")\n *   .addConditionalEdges(\"agent\", shouldContinue)\n *   .addEdge(\"tools\", \"agent\")\n *   .compile();\n *\n * const inputs = {\n *   messages: [{ role: \"user\", content: \"what is the weather in SF?\" }],\n * };\n *\n * const stream = await graph.stream(inputs, {\n *   streamMode: \"values\",\n * });\n *\n * for await (const { messages } of stream) {\n *   console.log(messages);\n * }\n * // Returns the messages in the state at each step of execution\n * ```\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nclass ToolNode extends _utils_js__WEBPACK_IMPORTED_MODULE_1__.RunnableCallable {\n    constructor(tools, options) {\n        const { name, tags, handleToolErrors } = options ?? {};\n        super({ name, tags, func: (input, config) => this.run(input, config) });\n        Object.defineProperty(this, \"tools\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"handleToolErrors\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"trace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.tools = tools;\n        this.handleToolErrors = handleToolErrors ?? this.handleToolErrors;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async run(input, config) {\n        const message = Array.isArray(input)\n            ? input[input.length - 1]\n            : input.messages[input.messages.length - 1];\n        if (message?._getType() !== \"ai\") {\n            throw new Error(\"ToolNode only accepts AIMessages as input.\");\n        }\n        const outputs = await Promise.all(message.tool_calls?.map(async (call) => {\n            const tool = this.tools.find((tool) => tool.name === call.name);\n            try {\n                if (tool === undefined) {\n                    throw new Error(`Tool \"${call.name}\" not found.`);\n                }\n                const output = await tool.invoke({ ...call, type: \"tool_call\" }, config);\n                if (((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.isBaseMessage)(output) && output._getType() === \"tool\") ||\n                    (0,_constants_js__WEBPACK_IMPORTED_MODULE_3__.isCommand)(output)) {\n                    return output;\n                }\n                else {\n                    return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.ToolMessage({\n                        name: tool.name,\n                        content: typeof output === \"string\" ? output : JSON.stringify(output),\n                        tool_call_id: call.id,\n                    });\n                }\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (e) {\n                if (!this.handleToolErrors) {\n                    throw e;\n                }\n                if ((0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.isGraphInterrupt)(e.name)) {\n                    // `NodeInterrupt` errors are a breakpoint to bring a human into the loop.\n                    // As such, they are not recoverable by the agent and shouldn't be fed\n                    // back. Instead, re-throw these errors even when `handleToolErrors = true`.\n                    throw e;\n                }\n                return new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_0__.ToolMessage({\n                    content: `Error: ${e.message}\\n Please fix your mistakes.`,\n                    name: call.name,\n                    tool_call_id: call.id ?? \"\",\n                });\n            }\n        }) ?? []);\n        // Preserve existing behavior for non-command tool outputs for backwards compatibility\n        if (!outputs.some(_constants_js__WEBPACK_IMPORTED_MODULE_3__.isCommand)) {\n            return (Array.isArray(input) ? outputs : { messages: outputs });\n        }\n        // Handle mixed Command and non-Command outputs\n        const combinedOutputs = outputs.map((output) => {\n            if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_3__.isCommand)(output)) {\n                return output;\n            }\n            return Array.isArray(input) ? [output] : { messages: [output] };\n        });\n        return combinedOutputs;\n    }\n}\nfunction toolsCondition(state) {\n    const message = Array.isArray(state)\n        ? state[state.length - 1]\n        : state.messages[state.messages.length - 1];\n    if (\"tool_calls\" in message &&\n        (message.tool_calls?.length ?? 0) > 0) {\n        return \"tools\";\n    }\n    else {\n        return _constants_js__WEBPACK_IMPORTED_MODULE_3__.END;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/tool_node.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/algo.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/algo.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _applyWrites: () => (/* binding */ _applyWrites),\n/* harmony export */   _localRead: () => (/* binding */ _localRead),\n/* harmony export */   _localWrite: () => (/* binding */ _localWrite),\n/* harmony export */   _prepareNextTasks: () => (/* binding */ _prepareNextTasks),\n/* harmony export */   _prepareSingleTask: () => (/* binding */ _prepareSingleTask),\n/* harmony export */   increment: () => (/* binding */ increment),\n/* harmony export */   shouldInterrupt: () => (/* binding */ shouldInterrupt)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/langgraph-checkpoint */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph-checkpoint@0.0.15_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferu_wxyqc73w5wk4lx2cfu5zaddqqi/node_modules/@langchain/langgraph-checkpoint/index.js\");\n/* harmony import */ var _channels_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channels/base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js\");\n/* harmony import */ var _io_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./io.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/io.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/types.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/index.js\");\n/* harmony import */ var _call_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./call.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/call.js\");\n/* eslint-disable no-param-reassign */\n\n\n\n\n\n\n\n\n\nconst increment = (current) => {\n    return current !== undefined ? current + 1 : 1;\n};\nfunction shouldInterrupt(checkpoint, interruptNodes, tasks) {\n    const versionValues = Object.values(checkpoint.channel_versions);\n    const versionType = versionValues.length > 0 ? typeof versionValues[0] : undefined;\n    let nullVersion;\n    if (versionType === \"number\") {\n        nullVersion = 0;\n    }\n    else if (versionType === \"string\") {\n        nullVersion = \"\";\n    }\n    const seen = checkpoint.versions_seen[_constants_js__WEBPACK_IMPORTED_MODULE_4__.INTERRUPT] ?? {};\n    const anyChannelUpdated = Object.entries(checkpoint.channel_versions).some(([chan, version]) => {\n        return version > (seen[chan] ?? nullVersion);\n    });\n    const anyTriggeredNodeInInterruptNodes = tasks.some((task) => interruptNodes === \"*\"\n        ? !task.config?.tags?.includes(_constants_js__WEBPACK_IMPORTED_MODULE_4__.TAG_HIDDEN)\n        : interruptNodes.includes(task.name));\n    return anyChannelUpdated && anyTriggeredNodeInInterruptNodes;\n}\nfunction _localRead(step, checkpoint, channels, managed, task, select, fresh = false) {\n    let managedKeys = [];\n    let updated = new Set();\n    if (!Array.isArray(select)) {\n        for (const [c] of task.writes) {\n            if (c === select) {\n                updated = new Set([c]);\n                break;\n            }\n        }\n        updated = updated || new Set();\n    }\n    else {\n        managedKeys = select.filter((k) => managed.get(k));\n        select = select.filter((k) => !managed.get(k));\n        updated = new Set(select.filter((c) => task.writes.some(([key, _]) => key === c)));\n    }\n    let values;\n    if (fresh && updated.size > 0) {\n        const localChannels = Object.fromEntries(Object.entries(channels).filter(([k, _]) => updated.has(k)));\n        const newCheckpoint = (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_2__.createCheckpoint)(checkpoint, localChannels, -1);\n        const newChannels = (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_2__.emptyChannels)(localChannels, newCheckpoint);\n        _applyWrites((0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.copyCheckpoint)(newCheckpoint), newChannels, [task]);\n        values = (0,_io_js__WEBPACK_IMPORTED_MODULE_3__.readChannels)({ ...channels, ...newChannels }, select);\n    }\n    else {\n        values = (0,_io_js__WEBPACK_IMPORTED_MODULE_3__.readChannels)(channels, select);\n    }\n    if (managedKeys.length > 0) {\n        for (const k of managedKeys) {\n            const managedValue = managed.get(k);\n            if (managedValue) {\n                const resultOfManagedCall = managedValue.call(step);\n                values[k] = resultOfManagedCall;\n            }\n        }\n    }\n    return values;\n}\nfunction _localWrite(step, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ncommit, processes, managed, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nwrites) {\n    for (const [chan, value] of writes) {\n        if (chan === _constants_js__WEBPACK_IMPORTED_MODULE_4__.TASKS && value != null) {\n            if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_4__._isSend)(value)) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.InvalidUpdateError(`Invalid packet type, expected SendProtocol, got ${JSON.stringify(value)}`);\n            }\n            if (!(value.node in processes)) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.InvalidUpdateError(`Invalid node name \"${value.node}\" in Send packet`);\n            }\n            // replace any runtime values with placeholders\n            managed.replaceRuntimeValues(step, value.args);\n        }\n    }\n    commit(writes);\n}\nconst IGNORE = new Set([\n    _constants_js__WEBPACK_IMPORTED_MODULE_4__.NO_WRITES,\n    _constants_js__WEBPACK_IMPORTED_MODULE_4__.PUSH,\n    _constants_js__WEBPACK_IMPORTED_MODULE_4__.RESUME,\n    _constants_js__WEBPACK_IMPORTED_MODULE_4__.INTERRUPT,\n    _constants_js__WEBPACK_IMPORTED_MODULE_4__.RETURN,\n    _constants_js__WEBPACK_IMPORTED_MODULE_4__.ERROR,\n]);\nfunction _applyWrites(checkpoint, channels, tasks, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\ngetNextVersion) {\n    // Sort tasks by first 3 path elements for deterministic order\n    // Later path parts (like task IDs) are ignored for sorting\n    tasks.sort((a, b) => {\n        const aPath = a.path?.slice(0, 3) || [];\n        const bPath = b.path?.slice(0, 3) || [];\n        // Compare each path element\n        for (let i = 0; i < Math.min(aPath.length, bPath.length); i += 1) {\n            if (aPath[i] < bPath[i])\n                return -1;\n            if (aPath[i] > bPath[i])\n                return 1;\n        }\n        // If one path is shorter, it comes first\n        return aPath.length - bPath.length;\n    });\n    // if no task has triggers this is applying writes from the null task only\n    // so we don't do anything other than update the channels written to\n    const bumpStep = tasks.some((task) => task.triggers.length > 0);\n    // Filter out non instances of BaseChannel\n    const onlyChannels = Object.fromEntries(Object.entries(channels).filter(([_, value]) => (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_2__.isBaseChannel)(value)));\n    // Update seen versions\n    for (const task of tasks) {\n        if (checkpoint.versions_seen[task.name] === undefined) {\n            checkpoint.versions_seen[task.name] = {};\n        }\n        for (const chan of task.triggers) {\n            if (chan in checkpoint.channel_versions) {\n                checkpoint.versions_seen[task.name][chan] =\n                    checkpoint.channel_versions[chan];\n            }\n        }\n    }\n    // Find the highest version of all channels\n    let maxVersion;\n    if (Object.keys(checkpoint.channel_versions).length > 0) {\n        maxVersion = (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.maxChannelVersion)(...Object.values(checkpoint.channel_versions));\n    }\n    // Consume all channels that were read\n    const channelsToConsume = new Set(tasks\n        .flatMap((task) => task.triggers)\n        .filter((chan) => !_constants_js__WEBPACK_IMPORTED_MODULE_4__.RESERVED.includes(chan)));\n    for (const chan of channelsToConsume) {\n        if (chan in onlyChannels && onlyChannels[chan].consume()) {\n            if (getNextVersion !== undefined) {\n                checkpoint.channel_versions[chan] = getNextVersion(maxVersion, onlyChannels[chan]);\n            }\n        }\n    }\n    // Clear pending sends\n    if (checkpoint.pending_sends?.length && bumpStep) {\n        checkpoint.pending_sends = [];\n    }\n    // Group writes by channel\n    const pendingWriteValuesByChannel = {};\n    const pendingWritesByManaged = {};\n    for (const task of tasks) {\n        for (const [chan, val] of task.writes) {\n            if (IGNORE.has(chan)) {\n                // do nothing\n            }\n            else if (chan === _constants_js__WEBPACK_IMPORTED_MODULE_4__.TASKS) {\n                // TODO: remove branch in 1.0\n                checkpoint.pending_sends.push({\n                    node: val.node,\n                    args: val.args,\n                });\n            }\n            else if (chan in onlyChannels) {\n                if (chan in pendingWriteValuesByChannel) {\n                    pendingWriteValuesByChannel[chan].push(val);\n                }\n                else {\n                    pendingWriteValuesByChannel[chan] = [val];\n                }\n            }\n            else {\n                if (chan in pendingWritesByManaged) {\n                    pendingWritesByManaged[chan].push(val);\n                }\n                else {\n                    pendingWritesByManaged[chan] = [val];\n                }\n            }\n        }\n    }\n    // find the highest version of all channels\n    maxVersion = undefined;\n    if (Object.keys(checkpoint.channel_versions).length > 0) {\n        maxVersion = (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.maxChannelVersion)(...Object.values(checkpoint.channel_versions));\n    }\n    const updatedChannels = new Set();\n    // Apply writes to channels\n    for (const [chan, vals] of Object.entries(pendingWriteValuesByChannel)) {\n        if (chan in onlyChannels) {\n            let updated;\n            try {\n                updated = onlyChannels[chan].update(vals);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (e) {\n                if (e.name === _errors_js__WEBPACK_IMPORTED_MODULE_6__.InvalidUpdateError.unminifiable_name) {\n                    const wrappedError = new _errors_js__WEBPACK_IMPORTED_MODULE_6__.InvalidUpdateError(`Invalid update for channel \"${chan}\" with values ${JSON.stringify(vals)}: ${e.message}`);\n                    wrappedError.lc_error_code = e.lc_error_code;\n                    throw wrappedError;\n                }\n                else {\n                    throw e;\n                }\n            }\n            if (updated && getNextVersion !== undefined) {\n                checkpoint.channel_versions[chan] = getNextVersion(maxVersion, onlyChannels[chan]);\n            }\n            updatedChannels.add(chan);\n        }\n    }\n    // Channels that weren't updated in this step are notified of a new step\n    if (bumpStep) {\n        for (const chan of Object.keys(onlyChannels)) {\n            if (!updatedChannels.has(chan)) {\n                const updated = onlyChannels[chan].update([]);\n                if (updated && getNextVersion !== undefined) {\n                    checkpoint.channel_versions[chan] = getNextVersion(maxVersion, onlyChannels[chan]);\n                }\n            }\n        }\n    }\n    // Return managed values writes to be applied externally\n    return pendingWritesByManaged;\n}\n/**\n * Prepare the set of tasks that will make up the next Pregel step.\n * This is the union of all PUSH tasks (Sends) and PULL tasks (nodes triggered\n * by edges).\n */\nfunction _prepareNextTasks(checkpoint, pendingWrites, processes, channels, managed, config, forExecution, extra) {\n    const tasks = {};\n    // Consume pending packets\n    for (let i = 0; i < checkpoint.pending_sends.length; i += 1) {\n        const task = _prepareSingleTask([_constants_js__WEBPACK_IMPORTED_MODULE_4__.PUSH, i], checkpoint, pendingWrites, processes, channels, managed, config, forExecution, extra);\n        if (task !== undefined) {\n            tasks[task.id] = task;\n        }\n    }\n    // Check if any processes should be run in next step\n    // If so, prepare the values to be passed to them\n    for (const name of Object.keys(processes)) {\n        const task = _prepareSingleTask([_constants_js__WEBPACK_IMPORTED_MODULE_4__.PULL, name], checkpoint, pendingWrites, processes, channels, managed, config, forExecution, extra);\n        if (task !== undefined) {\n            tasks[task.id] = task;\n        }\n    }\n    return tasks;\n}\n/**\n * Prepares a single task for the next Pregel step, given a task path, which\n * uniquely identifies a PUSH or PULL task within the graph.\n */\nfunction _prepareSingleTask(taskPath, checkpoint, pendingWrites, processes, channels, managed, config, forExecution, extra) {\n    const { step, checkpointer, manager } = extra;\n    const configurable = config.configurable ?? {};\n    const parentNamespace = configurable.checkpoint_ns ?? \"\";\n    if (taskPath[0] === _constants_js__WEBPACK_IMPORTED_MODULE_4__.PUSH && (0,_types_js__WEBPACK_IMPORTED_MODULE_5__.isCall)(taskPath[taskPath.length - 1])) {\n        const call = taskPath[taskPath.length - 1];\n        const proc = (0,_call_js__WEBPACK_IMPORTED_MODULE_8__.getRunnableForFunc)(call.name, call.func);\n        const triggers = [_constants_js__WEBPACK_IMPORTED_MODULE_4__.PUSH];\n        const checkpointNamespace = parentNamespace === \"\"\n            ? call.name\n            : `${parentNamespace}${_constants_js__WEBPACK_IMPORTED_MODULE_4__.CHECKPOINT_NAMESPACE_SEPARATOR}${call.name}`;\n        const id = (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.uuid5)(JSON.stringify([\n            checkpointNamespace,\n            step.toString(),\n            call.name,\n            _constants_js__WEBPACK_IMPORTED_MODULE_4__.PUSH,\n            taskPath[1],\n            taskPath[2],\n        ]), checkpoint.id);\n        const taskCheckpointNamespace = `${checkpointNamespace}${_constants_js__WEBPACK_IMPORTED_MODULE_4__.CHECKPOINT_NAMESPACE_END}${id}`;\n        const metadata = {\n            langgraph_step: step,\n            langgraph_node: call.name,\n            langgraph_triggers: triggers,\n            langgraph_path: taskPath.slice(0, 3),\n            langgraph_checkpoint_ns: taskCheckpointNamespace,\n        };\n        if (forExecution) {\n            const writes = [];\n            const task = {\n                name: call.name,\n                input: call.input,\n                proc,\n                writes,\n                config: (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.patchConfig)((0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.mergeConfigs)(config, {\n                    metadata,\n                    store: extra.store ?? config.store,\n                }), {\n                    runName: call.name,\n                    callbacks: manager?.getChild(`graph:step:${step}`),\n                    configurable: {\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_TASK_ID]: id,\n                        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_SEND]: (writes_) => _localWrite(step, (items) => writes.push(...items), processes, managed, writes_),\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_READ]: (select_, fresh_ = false) => _localRead(step, checkpoint, channels, managed, {\n                            name: call.name,\n                            writes: writes,\n                            triggers,\n                            path: taskPath.slice(0, 3),\n                        }, select_, fresh_),\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINTER]: checkpointer ?? configurable[_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINTER],\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINT_MAP]: {\n                            ...configurable[_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINT_MAP],\n                            [parentNamespace]: checkpoint.id,\n                        },\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_SCRATCHPAD]: _scratchpad([\n                            ...(pendingWrites || []),\n                            ...(configurable[_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_SCRATCHPAD]?.resume || []).map((v) => [id, _constants_js__WEBPACK_IMPORTED_MODULE_4__.RESUME, v]),\n                        ], id),\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_PREVIOUS_STATE]: checkpoint.channel_values[_constants_js__WEBPACK_IMPORTED_MODULE_4__.PREVIOUS],\n                        checkpoint_id: undefined,\n                        checkpoint_ns: taskCheckpointNamespace,\n                    },\n                }),\n                triggers,\n                retry_policy: call.retry,\n                id,\n                path: taskPath.slice(0, 3),\n                writers: [],\n            };\n            return task;\n        }\n        else {\n            return {\n                id,\n                name: call.name,\n                interrupts: [],\n                path: taskPath.slice(0, 3),\n            };\n        }\n    }\n    else if (taskPath[0] === _constants_js__WEBPACK_IMPORTED_MODULE_4__.PUSH) {\n        const index = typeof taskPath[1] === \"number\"\n            ? taskPath[1]\n            : parseInt(taskPath[1], 10);\n        if (index >= checkpoint.pending_sends.length) {\n            return undefined;\n        }\n        const packet = checkpoint.pending_sends[index];\n        if (!(0,_constants_js__WEBPACK_IMPORTED_MODULE_4__._isSendInterface)(packet)) {\n            console.warn(`Ignoring invalid packet ${JSON.stringify(packet)} in pending sends.`);\n            return undefined;\n        }\n        if (!(packet.node in processes)) {\n            console.warn(`Ignoring unknown node name ${packet.node} in pending sends.`);\n            return undefined;\n        }\n        const triggers = [_constants_js__WEBPACK_IMPORTED_MODULE_4__.PUSH];\n        const checkpointNamespace = parentNamespace === \"\"\n            ? packet.node\n            : `${parentNamespace}${_constants_js__WEBPACK_IMPORTED_MODULE_4__.CHECKPOINT_NAMESPACE_SEPARATOR}${packet.node}`;\n        const taskId = (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.uuid5)(JSON.stringify([\n            checkpointNamespace,\n            step.toString(),\n            packet.node,\n            _constants_js__WEBPACK_IMPORTED_MODULE_4__.PUSH,\n            index.toString(),\n        ]), checkpoint.id);\n        const taskCheckpointNamespace = `${checkpointNamespace}${_constants_js__WEBPACK_IMPORTED_MODULE_4__.CHECKPOINT_NAMESPACE_END}${taskId}`;\n        let metadata = {\n            langgraph_step: step,\n            langgraph_node: packet.node,\n            langgraph_triggers: triggers,\n            langgraph_path: taskPath,\n            langgraph_checkpoint_ns: taskCheckpointNamespace,\n        };\n        if (forExecution) {\n            const proc = processes[packet.node];\n            const node = proc.getNode();\n            if (node !== undefined) {\n                managed.replaceRuntimePlaceholders(step, packet.args);\n                if (proc.metadata !== undefined) {\n                    metadata = { ...metadata, ...proc.metadata };\n                }\n                const writes = [];\n                return {\n                    name: packet.node,\n                    input: packet.args,\n                    proc: node,\n                    subgraphs: proc.subgraphs,\n                    writes,\n                    config: (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.patchConfig)((0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.mergeConfigs)(config, {\n                        metadata,\n                        tags: proc.tags,\n                        store: extra.store ?? config.store,\n                    }), {\n                        runName: packet.node,\n                        callbacks: manager?.getChild(`graph:step:${step}`),\n                        configurable: {\n                            [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_TASK_ID]: taskId,\n                            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                            [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_SEND]: (writes_) => _localWrite(step, (items) => writes.push(...items), processes, managed, writes_),\n                            [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_READ]: (select_, fresh_ = false) => _localRead(step, checkpoint, channels, managed, {\n                                name: packet.node,\n                                writes: writes,\n                                triggers,\n                                path: taskPath,\n                            }, select_, fresh_),\n                            [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINTER]: checkpointer ?? configurable[_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINTER],\n                            [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINT_MAP]: {\n                                ...configurable[_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINT_MAP],\n                                [parentNamespace]: checkpoint.id,\n                            },\n                            [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_SCRATCHPAD]: _scratchpad([\n                                ...(pendingWrites || []),\n                                ...(configurable[_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_SCRATCHPAD]?.resume || []).map((v) => [\n                                    taskId,\n                                    _constants_js__WEBPACK_IMPORTED_MODULE_4__.RESUME,\n                                    v,\n                                ]),\n                            ], taskId),\n                            [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_PREVIOUS_STATE]: checkpoint.channel_values[_constants_js__WEBPACK_IMPORTED_MODULE_4__.PREVIOUS],\n                            checkpoint_id: undefined,\n                            checkpoint_ns: taskCheckpointNamespace,\n                        },\n                    }),\n                    triggers,\n                    retry_policy: proc.retryPolicy,\n                    id: taskId,\n                    path: taskPath,\n                    writers: proc.getWriters(),\n                };\n            }\n        }\n        else {\n            return {\n                id: taskId,\n                name: packet.node,\n                interrupts: [],\n                path: taskPath,\n            };\n        }\n    }\n    else if (taskPath[0] === _constants_js__WEBPACK_IMPORTED_MODULE_4__.PULL) {\n        const name = taskPath[1].toString();\n        const proc = processes[name];\n        if (proc === undefined) {\n            return undefined;\n        }\n        const nullVersion = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.getNullChannelVersion)(checkpoint.channel_versions);\n        if (nullVersion === undefined) {\n            return undefined;\n        }\n        const seen = checkpoint.versions_seen[name] ?? {};\n        const triggers = proc.triggers\n            .filter((chan) => {\n            const result = (0,_io_js__WEBPACK_IMPORTED_MODULE_3__.readChannel)(channels, chan, false, true);\n            const isEmptyChannelError = \n            // eslint-disable-next-line no-instanceof/no-instanceof\n            result instanceof Error &&\n                result.name === _errors_js__WEBPACK_IMPORTED_MODULE_6__.EmptyChannelError.unminifiable_name;\n            return (!isEmptyChannelError &&\n                (checkpoint.channel_versions[chan] ?? nullVersion) >\n                    (seen[chan] ?? nullVersion));\n        })\n            .sort();\n        // If any of the channels read by this process were updated\n        if (triggers.length > 0) {\n            const val = _procInput(step, proc, managed, channels, forExecution);\n            if (val === undefined) {\n                return undefined;\n            }\n            const checkpointNamespace = parentNamespace === \"\"\n                ? name\n                : `${parentNamespace}${_constants_js__WEBPACK_IMPORTED_MODULE_4__.CHECKPOINT_NAMESPACE_SEPARATOR}${name}`;\n            const taskId = (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.uuid5)(JSON.stringify([\n                checkpointNamespace,\n                step.toString(),\n                name,\n                _constants_js__WEBPACK_IMPORTED_MODULE_4__.PULL,\n                triggers,\n            ]), checkpoint.id);\n            const taskCheckpointNamespace = `${checkpointNamespace}${_constants_js__WEBPACK_IMPORTED_MODULE_4__.CHECKPOINT_NAMESPACE_END}${taskId}`;\n            let metadata = {\n                langgraph_step: step,\n                langgraph_node: name,\n                langgraph_triggers: triggers,\n                langgraph_path: taskPath,\n                langgraph_checkpoint_ns: taskCheckpointNamespace,\n            };\n            if (forExecution) {\n                const node = proc.getNode();\n                if (node !== undefined) {\n                    if (proc.metadata !== undefined) {\n                        metadata = { ...metadata, ...proc.metadata };\n                    }\n                    const writes = [];\n                    const taskCheckpointNamespace = `${checkpointNamespace}${_constants_js__WEBPACK_IMPORTED_MODULE_4__.CHECKPOINT_NAMESPACE_END}${taskId}`;\n                    return {\n                        name,\n                        input: val,\n                        proc: node,\n                        subgraphs: proc.subgraphs,\n                        writes,\n                        config: (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.patchConfig)((0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.mergeConfigs)(config, {\n                            metadata,\n                            tags: proc.tags,\n                            store: extra.store ?? config.store,\n                        }), {\n                            runName: name,\n                            callbacks: manager?.getChild(`graph:step:${step}`),\n                            configurable: {\n                                [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_TASK_ID]: taskId,\n                                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                                [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_SEND]: (writes_) => _localWrite(step, (items) => {\n                                    writes.push(...items);\n                                }, processes, managed, writes_),\n                                [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_READ]: (select_, fresh_ = false) => _localRead(step, checkpoint, channels, managed, {\n                                    name,\n                                    writes: writes,\n                                    triggers,\n                                    path: taskPath,\n                                }, select_, fresh_),\n                                [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINTER]: checkpointer ?? configurable[_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINTER],\n                                [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINT_MAP]: {\n                                    ...configurable[_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_CHECKPOINT_MAP],\n                                    [parentNamespace]: checkpoint.id,\n                                },\n                                [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_SCRATCHPAD]: _scratchpad([\n                                    ...(pendingWrites || []),\n                                    ...(configurable[_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_SCRATCHPAD]?.resume || []).map((v) => [\n                                        taskId,\n                                        _constants_js__WEBPACK_IMPORTED_MODULE_4__.RESUME,\n                                        v,\n                                    ]),\n                                ], taskId),\n                                [_constants_js__WEBPACK_IMPORTED_MODULE_4__.CONFIG_KEY_PREVIOUS_STATE]: checkpoint.channel_values[_constants_js__WEBPACK_IMPORTED_MODULE_4__.PREVIOUS],\n                                checkpoint_id: undefined,\n                                checkpoint_ns: taskCheckpointNamespace,\n                            },\n                        }),\n                        triggers,\n                        retry_policy: proc.retryPolicy,\n                        id: taskId,\n                        path: taskPath,\n                        writers: proc.getWriters(),\n                    };\n                }\n            }\n            else {\n                return { id: taskId, name, interrupts: [], path: taskPath };\n            }\n        }\n    }\n    return undefined;\n}\nfunction _procInput(step, proc, managed, channels, forExecution) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let val;\n    if (typeof proc.channels === \"object\" && !Array.isArray(proc.channels)) {\n        val = {};\n        for (const [k, chan] of Object.entries(proc.channels)) {\n            if (proc.triggers.includes(chan)) {\n                try {\n                    val[k] = (0,_io_js__WEBPACK_IMPORTED_MODULE_3__.readChannel)(channels, chan, false);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (e) {\n                    if (e.name === _errors_js__WEBPACK_IMPORTED_MODULE_6__.EmptyChannelError.unminifiable_name) {\n                        return undefined;\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            else if (chan in channels) {\n                try {\n                    val[k] = (0,_io_js__WEBPACK_IMPORTED_MODULE_3__.readChannel)(channels, chan, true);\n                    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                }\n                catch (e) {\n                    if (e.name === _errors_js__WEBPACK_IMPORTED_MODULE_6__.EmptyChannelError.unminifiable_name) {\n                        continue;\n                    }\n                    else {\n                        throw e;\n                    }\n                }\n            }\n            else {\n                val[k] = managed.get(k)?.call(step);\n            }\n        }\n    }\n    else if (Array.isArray(proc.channels)) {\n        let successfulRead = false;\n        for (const chan of proc.channels) {\n            try {\n                val = (0,_io_js__WEBPACK_IMPORTED_MODULE_3__.readChannel)(channels, chan, false);\n                successfulRead = true;\n                break;\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (e) {\n                if (e.name === _errors_js__WEBPACK_IMPORTED_MODULE_6__.EmptyChannelError.unminifiable_name) {\n                    continue;\n                }\n                else {\n                    throw e;\n                }\n            }\n        }\n        if (!successfulRead) {\n            return undefined;\n        }\n    }\n    else {\n        throw new Error(`Invalid channels type, expected list or dict, got ${proc.channels}`);\n    }\n    // If the process has a mapper, apply it to the value\n    if (forExecution && proc.mapper !== undefined) {\n        val = proc.mapper(val);\n    }\n    return val;\n}\nfunction _scratchpad(pendingWrites, taskId) {\n    return {\n        callCounter: 0,\n        interruptCounter: -1,\n        resume: pendingWrites\n            .filter(([writeTaskId, chan]) => writeTaskId === taskId && chan === _constants_js__WEBPACK_IMPORTED_MODULE_4__.RESUME)\n            .flatMap(([_writeTaskId, _chan, resume]) => resume),\n        nullResume: pendingWrites.find(([writeTaskId, chan]) => writeTaskId === _constants_js__WEBPACK_IMPORTED_MODULE_4__.NULL_TASK_ID && chan === _constants_js__WEBPACK_IMPORTED_MODULE_4__.RESUME)?.[2],\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/algo.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/call.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/call.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   call: () => (/* binding */ call),\n/* harmony export */   getRunnableForEntrypoint: () => (/* binding */ getRunnableForEntrypoint),\n/* harmony export */   getRunnableForFunc: () => (/* binding */ getRunnableForFunc)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/singletons */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/singletons.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _write_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./write.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/write.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js\");\n/* harmony import */ var _func_types_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ../func/types.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/func/types.js\");\n\n\n\n\n\n\n/**\n * Wraps a user function in a Runnable that writes the returned value to the RETURN channel.\n */\nfunction getRunnableForFunc(name, func) {\n    const run = new _utils_js__WEBPACK_IMPORTED_MODULE_4__.RunnableCallable({\n        func: (input) => func(...input),\n        name,\n        trace: false,\n        recurse: false,\n    });\n    return new _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnableSequence({\n        name,\n        first: run,\n        last: new _write_js__WEBPACK_IMPORTED_MODULE_3__.ChannelWrite([{ channel: _constants_js__WEBPACK_IMPORTED_MODULE_2__.RETURN, value: _write_js__WEBPACK_IMPORTED_MODULE_3__.PASSTHROUGH }], [_constants_js__WEBPACK_IMPORTED_MODULE_2__.TAG_HIDDEN]),\n    });\n}\nfunction getRunnableForEntrypoint(name, func) {\n    const run = new _utils_js__WEBPACK_IMPORTED_MODULE_4__.RunnableCallable({\n        func: (input, config) => {\n            return func(input, config);\n        },\n        name,\n        trace: false,\n        recurse: false,\n    });\n    return new _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnableSequence({\n        name,\n        first: run,\n        middle: [\n            new _write_js__WEBPACK_IMPORTED_MODULE_3__.ChannelWrite([\n                {\n                    channel: _constants_js__WEBPACK_IMPORTED_MODULE_2__.END,\n                    value: _write_js__WEBPACK_IMPORTED_MODULE_3__.PASSTHROUGH,\n                    mapper: new _utils_js__WEBPACK_IMPORTED_MODULE_4__.RunnableCallable({\n                        func: (value) => ((0,_func_types_js__WEBPACK_IMPORTED_MODULE_5__.isEntrypointFinal)(value) ? value.value : value),\n                    }),\n                },\n            ], [_constants_js__WEBPACK_IMPORTED_MODULE_2__.TAG_HIDDEN]),\n            new _write_js__WEBPACK_IMPORTED_MODULE_3__.ChannelWrite([\n                {\n                    channel: _constants_js__WEBPACK_IMPORTED_MODULE_2__.PREVIOUS,\n                    value: _write_js__WEBPACK_IMPORTED_MODULE_3__.PASSTHROUGH,\n                    mapper: new _utils_js__WEBPACK_IMPORTED_MODULE_4__.RunnableCallable({\n                        func: (value) => {\n                            return (0,_func_types_js__WEBPACK_IMPORTED_MODULE_5__.isEntrypointFinal)(value) ? value.save : value;\n                        },\n                    }),\n                },\n            ]),\n        ],\n        last: new _utils_js__WEBPACK_IMPORTED_MODULE_4__.RunnableCallable({\n            func: (final) => (0,_func_types_js__WEBPACK_IMPORTED_MODULE_5__.isEntrypointFinal)(final) ? final.value : final,\n        }),\n    });\n}\nfunction call({ func, name, retry }, ...args) {\n    const config = _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_1__.AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    if (typeof config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_CALL] === \"function\") {\n        return config.configurable[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_CALL](func, name, args, {\n            retry,\n            callbacks: config.callbacks,\n        });\n    }\n    throw new Error(\"Async local storage not initialized. Please call initializeAsyncLocalStorageSingleton() before using this function.\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC9jYWxsLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQUE4RDtBQUNrQjtBQUNNO0FBQy9CO0FBQ1I7QUFDTztBQUN0RDtBQUNBO0FBQ0E7QUFDTztBQUNQLG9CQUFvQix1REFBZ0I7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsZUFBZSx1RUFBZ0I7QUFDL0I7QUFDQTtBQUNBLGtCQUFrQixtREFBWSxJQUFJLFNBQVMsaURBQU0sU0FBUyxrREFBVyxFQUFFLElBQUkscURBQVU7QUFDckYsS0FBSztBQUNMO0FBQ087QUFDUCxvQkFBb0IsdURBQWdCO0FBQ3BDO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMLGVBQWUsdUVBQWdCO0FBQy9CO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixtREFBWTtBQUM1QjtBQUNBLDZCQUE2Qiw4Q0FBRztBQUNoQywyQkFBMkIsa0RBQVc7QUFDdEMsZ0NBQWdDLHVEQUFnQjtBQUNoRCwwQ0FBMEMsaUVBQWlCO0FBQzNELHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakIsZ0JBQWdCLHFEQUFVO0FBQzFCLGdCQUFnQixtREFBWTtBQUM1QjtBQUNBLDZCQUE2QixtREFBUTtBQUNyQywyQkFBMkIsa0RBQVc7QUFDdEMsZ0NBQWdDLHVEQUFnQjtBQUNoRDtBQUNBLG1DQUFtQyxpRUFBaUI7QUFDcEQseUJBQXlCO0FBQ3pCLHFCQUFxQjtBQUNyQixpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGtCQUFrQix1REFBZ0I7QUFDbEMsNkJBQTZCLGlFQUFpQjtBQUM5QyxTQUFTO0FBQ1QsS0FBSztBQUNMO0FBQ08sZ0JBQWdCLG1CQUFtQjtBQUMxQyxtQkFBbUIsMEZBQWtDO0FBQ3JELHFDQUFxQywwREFBZTtBQUNwRCxtQ0FBbUMsMERBQWU7QUFDbEQ7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3QvcHJlZ2VsL2NhbGwuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgUnVubmFibGVTZXF1ZW5jZSwgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3J1bm5hYmxlc1wiO1xuaW1wb3J0IHsgQXN5bmNMb2NhbFN0b3JhZ2VQcm92aWRlclNpbmdsZXRvbiB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvc2luZ2xldG9uc1wiO1xuaW1wb3J0IHsgQ09ORklHX0tFWV9DQUxMLCBFTkQsIFBSRVZJT1VTLCBSRVRVUk4sIFRBR19ISURERU4sIH0gZnJvbSBcIi4uL2NvbnN0YW50cy5qc1wiO1xuaW1wb3J0IHsgQ2hhbm5lbFdyaXRlLCBQQVNTVEhST1VHSCB9IGZyb20gXCIuL3dyaXRlLmpzXCI7XG5pbXBvcnQgeyBSdW5uYWJsZUNhbGxhYmxlIH0gZnJvbSBcIi4uL3V0aWxzLmpzXCI7XG5pbXBvcnQgeyBpc0VudHJ5cG9pbnRGaW5hbCwgfSBmcm9tIFwiLi4vZnVuYy90eXBlcy5qc1wiO1xuLyoqXG4gKiBXcmFwcyBhIHVzZXIgZnVuY3Rpb24gaW4gYSBSdW5uYWJsZSB0aGF0IHdyaXRlcyB0aGUgcmV0dXJuZWQgdmFsdWUgdG8gdGhlIFJFVFVSTiBjaGFubmVsLlxuICovXG5leHBvcnQgZnVuY3Rpb24gZ2V0UnVubmFibGVGb3JGdW5jKG5hbWUsIGZ1bmMpIHtcbiAgICBjb25zdCBydW4gPSBuZXcgUnVubmFibGVDYWxsYWJsZSh7XG4gICAgICAgIGZ1bmM6IChpbnB1dCkgPT4gZnVuYyguLi5pbnB1dCksXG4gICAgICAgIG5hbWUsXG4gICAgICAgIHRyYWNlOiBmYWxzZSxcbiAgICAgICAgcmVjdXJzZTogZmFsc2UsXG4gICAgfSk7XG4gICAgcmV0dXJuIG5ldyBSdW5uYWJsZVNlcXVlbmNlKHtcbiAgICAgICAgbmFtZSxcbiAgICAgICAgZmlyc3Q6IHJ1bixcbiAgICAgICAgbGFzdDogbmV3IENoYW5uZWxXcml0ZShbeyBjaGFubmVsOiBSRVRVUk4sIHZhbHVlOiBQQVNTVEhST1VHSCB9XSwgW1RBR19ISURERU5dKSxcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRSdW5uYWJsZUZvckVudHJ5cG9pbnQobmFtZSwgZnVuYykge1xuICAgIGNvbnN0IHJ1biA9IG5ldyBSdW5uYWJsZUNhbGxhYmxlKHtcbiAgICAgICAgZnVuYzogKGlucHV0LCBjb25maWcpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBmdW5jKGlucHV0LCBjb25maWcpO1xuICAgICAgICB9LFxuICAgICAgICBuYW1lLFxuICAgICAgICB0cmFjZTogZmFsc2UsXG4gICAgICAgIHJlY3Vyc2U6IGZhbHNlLFxuICAgIH0pO1xuICAgIHJldHVybiBuZXcgUnVubmFibGVTZXF1ZW5jZSh7XG4gICAgICAgIG5hbWUsXG4gICAgICAgIGZpcnN0OiBydW4sXG4gICAgICAgIG1pZGRsZTogW1xuICAgICAgICAgICAgbmV3IENoYW5uZWxXcml0ZShbXG4gICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICBjaGFubmVsOiBFTkQsXG4gICAgICAgICAgICAgICAgICAgIHZhbHVlOiBQQVNTVEhST1VHSCxcbiAgICAgICAgICAgICAgICAgICAgbWFwcGVyOiBuZXcgUnVubmFibGVDYWxsYWJsZSh7XG4gICAgICAgICAgICAgICAgICAgICAgICBmdW5jOiAodmFsdWUpID0+IChpc0VudHJ5cG9pbnRGaW5hbCh2YWx1ZSkgPyB2YWx1ZS52YWx1ZSA6IHZhbHVlKSxcbiAgICAgICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIF0sIFtUQUdfSElEREVOXSksXG4gICAgICAgICAgICBuZXcgQ2hhbm5lbFdyaXRlKFtcbiAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIGNoYW5uZWw6IFBSRVZJT1VTLFxuICAgICAgICAgICAgICAgICAgICB2YWx1ZTogUEFTU1RIUk9VR0gsXG4gICAgICAgICAgICAgICAgICAgIG1hcHBlcjogbmV3IFJ1bm5hYmxlQ2FsbGFibGUoe1xuICAgICAgICAgICAgICAgICAgICAgICAgZnVuYzogKHZhbHVlKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGlzRW50cnlwb2ludEZpbmFsKHZhbHVlKSA/IHZhbHVlLnNhdmUgOiB2YWx1ZTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBdKSxcbiAgICAgICAgXSxcbiAgICAgICAgbGFzdDogbmV3IFJ1bm5hYmxlQ2FsbGFibGUoe1xuICAgICAgICAgICAgZnVuYzogKGZpbmFsKSA9PiBpc0VudHJ5cG9pbnRGaW5hbChmaW5hbCkgPyBmaW5hbC52YWx1ZSA6IGZpbmFsLFxuICAgICAgICB9KSxcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjYWxsKHsgZnVuYywgbmFtZSwgcmV0cnkgfSwgLi4uYXJncykge1xuICAgIGNvbnN0IGNvbmZpZyA9IEFzeW5jTG9jYWxTdG9yYWdlUHJvdmlkZXJTaW5nbGV0b24uZ2V0UnVubmFibGVDb25maWcoKTtcbiAgICBpZiAodHlwZW9mIGNvbmZpZy5jb25maWd1cmFibGU/LltDT05GSUdfS0VZX0NBTExdID09PSBcImZ1bmN0aW9uXCIpIHtcbiAgICAgICAgcmV0dXJuIGNvbmZpZy5jb25maWd1cmFibGVbQ09ORklHX0tFWV9DQUxMXShmdW5jLCBuYW1lLCBhcmdzLCB7XG4gICAgICAgICAgICByZXRyeSxcbiAgICAgICAgICAgIGNhbGxiYWNrczogY29uZmlnLmNhbGxiYWNrcyxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHRocm93IG5ldyBFcnJvcihcIkFzeW5jIGxvY2FsIHN0b3JhZ2Ugbm90IGluaXRpYWxpemVkLiBQbGVhc2UgY2FsbCBpbml0aWFsaXplQXN5bmNMb2NhbFN0b3JhZ2VTaW5nbGV0b24oKSBiZWZvcmUgdXNpbmcgdGhpcyBmdW5jdGlvbi5cIik7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/call.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/debug.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/debug.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapDebugCheckpoint: () => (/* binding */ mapDebugCheckpoint),\n/* harmony export */   mapDebugTaskResults: () => (/* binding */ mapDebugTaskResults),\n/* harmony export */   mapDebugTasks: () => (/* binding */ mapDebugTasks),\n/* harmony export */   printCheckpoint: () => (/* binding */ printCheckpoint),\n/* harmony export */   printStepCheckpoint: () => (/* binding */ printStepCheckpoint),\n/* harmony export */   printStepTasks: () => (/* binding */ printStepTasks),\n/* harmony export */   printStepWrites: () => (/* binding */ printStepWrites),\n/* harmony export */   tasksWithWrites: () => (/* binding */ tasksWithWrites)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _io_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./io.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/io.js\");\n/* harmony import */ var _utils_subgraph_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils/subgraph.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/subgraph.js\");\n\n\n\n\nconst COLORS_MAP = {\n    blue: {\n        start: \"\\x1b[34m\",\n        end: \"\\x1b[0m\",\n    },\n    green: {\n        start: \"\\x1b[32m\",\n        end: \"\\x1b[0m\",\n    },\n    yellow: {\n        start: \"\\x1b[33;1m\",\n        end: \"\\x1b[0m\",\n    },\n};\n/**\n * Wrap some text in a color for printing to the console.\n */\nconst wrap = (color, text) => `${color.start}${text}${color.end}`;\nfunction printCheckpoint(step, channels) {\n    console.log([\n        `${wrap(COLORS_MAP.blue, \"[langgraph/checkpoint]\")}`,\n        `Finishing step ${step}. Channel values:\\n`,\n        `\\n${JSON.stringify(Object.fromEntries(_readChannels(channels)), null, 2)}`,\n    ].join(\"\"));\n}\nfunction* _readChannels(channels\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    for (const [name, channel] of Object.entries(channels)) {\n        try {\n            yield [name, channel.get()];\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        }\n        catch (error) {\n            if (error.name === _errors_js__WEBPACK_IMPORTED_MODULE_1__.EmptyChannelError.unminifiable_name) {\n                // Skip the channel if it's empty\n                continue;\n            }\n            else {\n                throw error; // Re-throw the error if it's not an EmptyChannelError\n            }\n        }\n    }\n}\nfunction* mapDebugTasks(step, tasks) {\n    const ts = new Date().toISOString();\n    for (const { id, name, input, config, triggers, writes } of tasks) {\n        if (config?.tags?.includes(_constants_js__WEBPACK_IMPORTED_MODULE_0__.TAG_HIDDEN))\n            continue;\n        const interrupts = writes\n            .filter(([writeId, n]) => {\n            return writeId === id && n === _constants_js__WEBPACK_IMPORTED_MODULE_0__.INTERRUPT;\n        })\n            .map(([, v]) => {\n            return v;\n        });\n        yield {\n            type: \"task\",\n            timestamp: ts,\n            step,\n            payload: {\n                id,\n                name,\n                input,\n                triggers,\n                interrupts,\n            },\n        };\n    }\n}\nfunction* mapDebugTaskResults(step, tasks, streamChannels) {\n    const ts = new Date().toISOString();\n    for (const [{ id, name, config }, writes] of tasks) {\n        if (config?.tags?.includes(_constants_js__WEBPACK_IMPORTED_MODULE_0__.TAG_HIDDEN))\n            continue;\n        yield {\n            type: \"task_result\",\n            timestamp: ts,\n            step,\n            payload: {\n                id,\n                name,\n                result: writes.filter(([channel]) => {\n                    return Array.isArray(streamChannels)\n                        ? streamChannels.includes(channel)\n                        : channel === streamChannels;\n                }),\n                interrupts: writes.filter((w) => w[0] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.INTERRUPT).map((w) => w[1]),\n            },\n        };\n    }\n}\nfunction* mapDebugCheckpoint(step, config, channels, streamChannels, metadata, tasks, pendingWrites, parentConfig) {\n    function formatConfig(config) {\n        // make sure the config is consistent with Python\n        const pyConfig = {};\n        if (config.callbacks != null)\n            pyConfig.callbacks = config.callbacks;\n        if (config.configurable != null)\n            pyConfig.configurable = config.configurable;\n        if (config.maxConcurrency != null)\n            pyConfig.max_concurrency = config.maxConcurrency;\n        if (config.metadata != null)\n            pyConfig.metadata = config.metadata;\n        if (config.recursionLimit != null)\n            pyConfig.recursion_limit = config.recursionLimit;\n        if (config.runId != null)\n            pyConfig.run_id = config.runId;\n        if (config.runName != null)\n            pyConfig.run_name = config.runName;\n        if (config.tags != null)\n            pyConfig.tags = config.tags;\n        return pyConfig;\n    }\n    const parentNs = config.configurable?.checkpoint_ns;\n    const taskStates = {};\n    for (const task of tasks) {\n        const candidates = task.subgraphs?.length ? task.subgraphs : [task.proc];\n        if (!candidates.find(_utils_subgraph_js__WEBPACK_IMPORTED_MODULE_3__.findSubgraphPregel))\n            continue;\n        let taskNs = `${task.name}:${task.id}`;\n        if (parentNs)\n            taskNs = `${parentNs}|${taskNs}`;\n        taskStates[task.id] = {\n            configurable: {\n                thread_id: config.configurable?.thread_id,\n                checkpoint_ns: taskNs,\n            },\n        };\n    }\n    const ts = new Date().toISOString();\n    yield {\n        type: \"checkpoint\",\n        timestamp: ts,\n        step,\n        payload: {\n            config: formatConfig(config),\n            values: (0,_io_js__WEBPACK_IMPORTED_MODULE_2__.readChannels)(channels, streamChannels),\n            metadata,\n            next: tasks.map((task) => task.name),\n            tasks: tasksWithWrites(tasks, pendingWrites, taskStates),\n            parentConfig: parentConfig ? formatConfig(parentConfig) : undefined,\n        },\n    };\n}\nfunction tasksWithWrites(tasks, pendingWrites, states) {\n    return tasks.map((task) => {\n        const error = pendingWrites.find(([id, n]) => id === task.id && n === _constants_js__WEBPACK_IMPORTED_MODULE_0__.ERROR)?.[2];\n        const interrupts = pendingWrites\n            .filter(([id, n]) => {\n            return id === task.id && n === _constants_js__WEBPACK_IMPORTED_MODULE_0__.INTERRUPT;\n        })\n            .map(([, , v]) => {\n            return v;\n        });\n        if (error) {\n            return {\n                id: task.id,\n                name: task.name,\n                path: task.path,\n                error,\n                interrupts,\n            };\n        }\n        return {\n            id: task.id,\n            name: task.name,\n            path: task.path,\n            interrupts,\n            state: states?.[task.id],\n        };\n    });\n}\nfunction printStepCheckpoint(step, channels, whitelist) {\n    console.log([\n        `${wrap(COLORS_MAP.blue, `[${step}:checkpoint]`)}`,\n        `\\x1b[1m State at the end of step ${step}:\\x1b[0m\\n`,\n        JSON.stringify((0,_io_js__WEBPACK_IMPORTED_MODULE_2__.readChannels)(channels, whitelist), null, 2),\n    ].join(\"\"));\n}\nfunction printStepTasks(step, nextTasks) {\n    const nTasks = nextTasks.length;\n    console.log([\n        `${wrap(COLORS_MAP.blue, `[${step}:tasks]`)}`,\n        `\\x1b[1m Starting step ${step} with ${nTasks} task${nTasks === 1 ? \"\" : \"s\"}:\\x1b[0m\\n`,\n        nextTasks\n            .map((task) => `- ${wrap(COLORS_MAP.green, String(task.name))} -> ${JSON.stringify(task.input, null, 2)}`)\n            .join(\"\\n\"),\n    ].join(\"\"));\n}\nfunction printStepWrites(step, writes, whitelist) {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    const byChannel = {};\n    for (const [channel, value] of writes) {\n        if (whitelist.includes(channel)) {\n            if (!byChannel[channel]) {\n                byChannel[channel] = [];\n            }\n            byChannel[channel].push(value);\n        }\n    }\n    console.log([\n        `${wrap(COLORS_MAP.blue, `[${step}:writes]`)}`,\n        `\\x1b[1m Finished step ${step} with writes to ${Object.keys(byChannel).length} channel${Object.keys(byChannel).length !== 1 ? \"s\" : \"\"}:\\x1b[0m\\n`,\n        Object.entries(byChannel)\n            .map(([name, vals]) => `- ${wrap(COLORS_MAP.yellow, name)} -> ${vals\n            .map((v) => JSON.stringify(v))\n            .join(\", \")}`)\n            .join(\"\\n\"),\n    ].join(\"\"));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/debug.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/index.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/index.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Channel: () => (/* binding */ Channel),\n/* harmony export */   Pregel: () => (/* binding */ Pregel)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/langgraph-checkpoint */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph-checkpoint@0.0.15_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferu_wxyqc73w5wk4lx2cfu5zaddqqi/node_modules/@langchain/langgraph-checkpoint/index.js\");\n/* harmony import */ var _channels_base_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../channels/base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js\");\n/* harmony import */ var _read_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./read.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/read.js\");\n/* harmony import */ var _validate_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./validate.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/validate.js\");\n/* harmony import */ var _io_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./io.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/io.js\");\n/* harmony import */ var _debug_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./debug.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/debug.js\");\n/* harmony import */ var _write_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./write.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/write.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _algo_js__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ./algo.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/algo.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! ./utils/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/index.js\");\n/* harmony import */ var _utils_subgraph_js__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(/*! ./utils/subgraph.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/subgraph.js\");\n/* harmony import */ var _loop_js__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(/*! ./loop.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/loop.js\");\n/* harmony import */ var _managed_base_js__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(/*! ../managed/base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/base.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js\");\n/* harmony import */ var _utils_config_js__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(/*! ./utils/config.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/config.js\");\n/* harmony import */ var _messages_js__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(/*! ./messages.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/messages.js\");\n/* harmony import */ var _runner_js__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(/*! ./runner.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/runner.js\");\n/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_19__ = __webpack_require__(/*! ./stream.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/stream.js\");\n/* eslint-disable no-param-reassign */\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nfunction isString(value) {\n    return typeof value === \"string\";\n}\nclass Channel {\n    static subscribeTo(channels, options) {\n        const { key, tags } = options ?? {};\n        if (Array.isArray(channels) && key !== undefined) {\n            throw new Error(\"Can't specify a key when subscribing to multiple channels\");\n        }\n        let channelMappingOrArray;\n        if (isString(channels)) {\n            if (key) {\n                channelMappingOrArray = { [key]: channels };\n            }\n            else {\n                channelMappingOrArray = [channels];\n            }\n        }\n        else {\n            channelMappingOrArray = Object.fromEntries(channels.map((chan) => [chan, chan]));\n        }\n        const triggers = Array.isArray(channels) ? channels : [channels];\n        return new _read_js__WEBPACK_IMPORTED_MODULE_3__.PregelNode({\n            channels: channelMappingOrArray,\n            triggers,\n            tags,\n        });\n    }\n    static writeTo(channels, kwargs) {\n        const channelWriteEntries = [];\n        for (const channel of channels) {\n            channelWriteEntries.push({\n                channel,\n                value: _write_js__WEBPACK_IMPORTED_MODULE_7__.PASSTHROUGH,\n                skipNone: false,\n            });\n        }\n        for (const [key, value] of Object.entries(kwargs ?? {})) {\n            if (_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.Runnable.isRunnable(value) || typeof value === \"function\") {\n                channelWriteEntries.push({\n                    channel: key,\n                    value: _write_js__WEBPACK_IMPORTED_MODULE_7__.PASSTHROUGH,\n                    skipNone: true,\n                    mapper: (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable)(value),\n                });\n            }\n            else {\n                channelWriteEntries.push({\n                    channel: key,\n                    value,\n                    skipNone: false,\n                });\n            }\n        }\n        return new _write_js__WEBPACK_IMPORTED_MODULE_7__.ChannelWrite(channelWriteEntries);\n    }\n}\nclass Pregel extends _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.Runnable {\n    static lc_name() {\n        return \"LangGraph\";\n    }\n    constructor(fields) {\n        super(fields);\n        // Because Pregel extends `Runnable`.\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langgraph\", \"pregel\"]\n        });\n        Object.defineProperty(this, \"lg_is_pregel\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"channels\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputChannels\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputChannels\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"autoValidate\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"streamMode\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"values\"]\n        });\n        Object.defineProperty(this, \"streamChannels\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"interruptAfter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"interruptBefore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stepTimeout\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"debug\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"checkpointer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"retryPolicy\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"store\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        let { streamMode } = fields;\n        if (streamMode != null && !Array.isArray(streamMode)) {\n            streamMode = [streamMode];\n        }\n        this.nodes = fields.nodes;\n        this.channels = fields.channels;\n        this.autoValidate = fields.autoValidate ?? this.autoValidate;\n        this.streamMode = streamMode ?? this.streamMode;\n        this.inputChannels = fields.inputChannels;\n        this.outputChannels = fields.outputChannels;\n        this.streamChannels = fields.streamChannels ?? this.streamChannels;\n        this.interruptAfter = fields.interruptAfter;\n        this.interruptBefore = fields.interruptBefore;\n        this.stepTimeout = fields.stepTimeout ?? this.stepTimeout;\n        this.debug = fields.debug ?? this.debug;\n        this.checkpointer = fields.checkpointer;\n        this.retryPolicy = fields.retryPolicy;\n        this.config = fields.config;\n        this.store = fields.store;\n        this.name = fields.name;\n        if (this.autoValidate) {\n            this.validate();\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/ban-ts-comment\n    // @ts-ignore Remove ignore when we remove support for 0.2 versions of core\n    withConfig(config) {\n        const mergedConfig = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.mergeConfigs)(this.config, config);\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        return new this.constructor({ ...this, config: mergedConfig });\n    }\n    validate() {\n        (0,_validate_js__WEBPACK_IMPORTED_MODULE_4__.validateGraph)({\n            nodes: this.nodes,\n            channels: this.channels,\n            outputChannels: this.outputChannels,\n            inputChannels: this.inputChannels,\n            streamChannels: this.streamChannels,\n            interruptAfterNodes: this.interruptAfter,\n            interruptBeforeNodes: this.interruptBefore,\n        });\n        return this;\n    }\n    get streamChannelsList() {\n        if (Array.isArray(this.streamChannels)) {\n            return this.streamChannels;\n        }\n        else if (this.streamChannels) {\n            return [this.streamChannels];\n        }\n        else {\n            return Object.keys(this.channels);\n        }\n    }\n    get streamChannelsAsIs() {\n        if (this.streamChannels) {\n            return this.streamChannels;\n        }\n        else {\n            return Object.keys(this.channels);\n        }\n    }\n    async getGraphAsync(config) {\n        return this.getGraph(config);\n    }\n    /** @deprecated Use getSubgraphsAsync instead. The async method will become the default in the next minor release. */\n    *getSubgraphs(namespace, recurse\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        for (const [name, node] of Object.entries(this.nodes)) {\n            // filter by prefix\n            if (namespace !== undefined) {\n                if (!namespace.startsWith(name)) {\n                    continue;\n                }\n            }\n            const candidates = node.subgraphs?.length ? node.subgraphs : [node.bound];\n            for (const candidate of candidates) {\n                const graph = (0,_utils_subgraph_js__WEBPACK_IMPORTED_MODULE_12__.findSubgraphPregel)(candidate);\n                if (graph !== undefined) {\n                    if (name === namespace) {\n                        yield [name, graph];\n                        return;\n                    }\n                    if (namespace === undefined) {\n                        yield [name, graph];\n                    }\n                    if (recurse) {\n                        let newNamespace = namespace;\n                        if (namespace !== undefined) {\n                            newNamespace = namespace.slice(name.length + 1);\n                        }\n                        for (const [subgraphName, subgraph] of graph.getSubgraphs(newNamespace, recurse)) {\n                            yield [\n                                `${name}${_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_SEPARATOR}${subgraphName}`,\n                                subgraph,\n                            ];\n                        }\n                    }\n                }\n            }\n        }\n    }\n    async *getSubgraphsAsync(namespace, recurse\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        yield* this.getSubgraphs(namespace, recurse);\n    }\n    async _prepareStateSnapshot({ config, saved, subgraphCheckpointer, }) {\n        if (saved === undefined) {\n            return {\n                values: {},\n                next: [],\n                config,\n                tasks: [],\n            };\n        }\n        // Pass `skipManaged: true` as managed values should not be returned in get state calls.\n        const { managed } = await this.prepareSpecs(config, { skipManaged: true });\n        const channels = (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_2__.emptyChannels)(this.channels, saved.checkpoint);\n        const nextTasks = Object.values((0,_algo_js__WEBPACK_IMPORTED_MODULE_10__._prepareNextTasks)(saved.checkpoint, saved.pendingWrites, this.nodes, channels, managed, saved.config, false, { step: (saved.metadata?.step ?? -1) + 1 }));\n        const subgraphs = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_15__.gatherIterator)(this.getSubgraphsAsync());\n        const parentNamespace = saved.config.configurable?.checkpoint_ns ?? \"\";\n        const taskStates = {};\n        for (const task of nextTasks) {\n            const matchingSubgraph = subgraphs.find(([name]) => name === task.name);\n            if (!matchingSubgraph) {\n                continue;\n            }\n            // assemble checkpoint_ns for this task\n            let taskNs = `${task.name}${_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_END}${task.id}`;\n            if (parentNamespace) {\n                taskNs = `${parentNamespace}${_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_SEPARATOR}${taskNs}`;\n            }\n            if (subgraphCheckpointer === undefined) {\n                // set config as signal that subgraph checkpoints exist\n                const config = {\n                    configurable: {\n                        thread_id: saved.config.configurable?.thread_id,\n                        checkpoint_ns: taskNs,\n                    },\n                };\n                taskStates[task.id] = config;\n            }\n            else {\n                // get the state of the subgraph\n                const config = {\n                    configurable: {\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER]: subgraphCheckpointer,\n                        thread_id: saved.config.configurable?.thread_id,\n                        checkpoint_ns: taskNs,\n                    },\n                };\n                taskStates[task.id] = await matchingSubgraph[1].getState(config, {\n                    subgraphs: true,\n                });\n            }\n        }\n        // apply pending writes\n        const nullWrites = (saved.pendingWrites ?? [])\n            .filter((w) => w[0] === _constants_js__WEBPACK_IMPORTED_MODULE_8__.NULL_TASK_ID)\n            .map((w) => w.slice(1));\n        if (nullWrites.length > 0) {\n            (0,_algo_js__WEBPACK_IMPORTED_MODULE_10__._applyWrites)(saved.checkpoint, channels, [\n                {\n                    name: _constants_js__WEBPACK_IMPORTED_MODULE_8__.INPUT,\n                    writes: nullWrites,\n                    triggers: [],\n                },\n            ]);\n        }\n        // assemble the state snapshot\n        return {\n            values: (0,_io_js__WEBPACK_IMPORTED_MODULE_5__.readChannels)(channels, this.streamChannelsAsIs),\n            next: nextTasks.map((task) => task.name),\n            tasks: (0,_debug_js__WEBPACK_IMPORTED_MODULE_6__.tasksWithWrites)(nextTasks, saved?.pendingWrites ?? [], taskStates),\n            metadata: saved.metadata,\n            config: (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_11__.patchCheckpointMap)(saved.config, saved.metadata),\n            createdAt: saved.checkpoint.ts,\n            parentConfig: saved.parentConfig,\n        };\n    }\n    /**\n     * Get the current state of the graph.\n     */\n    async getState(config, options) {\n        const checkpointer = config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER] ?? this.checkpointer;\n        if (!checkpointer) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_9__.GraphValueError(\"No checkpointer set\");\n        }\n        const checkpointNamespace = config.configurable?.checkpoint_ns ?? \"\";\n        if (checkpointNamespace !== \"\" &&\n            config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER] === undefined) {\n            // remove task_ids from checkpoint_ns\n            const recastCheckpointNamespace = checkpointNamespace\n                .split(_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_SEPARATOR)\n                .map((part) => part.split(_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_END)[0])\n                .join(_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_SEPARATOR);\n            for await (const [name, subgraph] of this.getSubgraphsAsync(recastCheckpointNamespace, true)) {\n                if (name === recastCheckpointNamespace) {\n                    return await subgraph.getState((0,_utils_js__WEBPACK_IMPORTED_MODULE_15__.patchConfigurable)(config, {\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER]: checkpointer,\n                    }), { subgraphs: options?.subgraphs });\n                }\n            }\n            throw new Error(`Subgraph with namespace \"${recastCheckpointNamespace}\" not found.`);\n        }\n        const mergedConfig = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.mergeConfigs)(this.config, config);\n        const saved = await checkpointer.getTuple(config);\n        const snapshot = await this._prepareStateSnapshot({\n            config: mergedConfig,\n            saved,\n            subgraphCheckpointer: options?.subgraphs ? checkpointer : undefined,\n        });\n        return snapshot;\n    }\n    /**\n     * Get the history of the state of the graph.\n     */\n    async *getStateHistory(config, options) {\n        const checkpointer = config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER] ?? this.checkpointer;\n        if (!checkpointer) {\n            throw new Error(\"No checkpointer set\");\n        }\n        const checkpointNamespace = config.configurable?.checkpoint_ns ?? \"\";\n        if (checkpointNamespace !== \"\" &&\n            config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER] === undefined) {\n            const recastCheckpointNamespace = checkpointNamespace\n                .split(_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_SEPARATOR)\n                .map((part) => part.split(_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_END)[0])\n                .join(_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_SEPARATOR);\n            // find the subgraph with the matching name\n            for await (const [name, pregel] of this.getSubgraphsAsync(recastCheckpointNamespace, true)) {\n                if (name === recastCheckpointNamespace) {\n                    yield* pregel.getStateHistory((0,_utils_js__WEBPACK_IMPORTED_MODULE_15__.patchConfigurable)(config, {\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER]: checkpointer,\n                    }), options);\n                    return;\n                }\n            }\n            throw new Error(`Subgraph with namespace \"${recastCheckpointNamespace}\" not found.`);\n        }\n        const mergedConfig = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.mergeConfigs)(this.config, config, {\n            configurable: { checkpoint_ns: checkpointNamespace },\n        });\n        for await (const checkpointTuple of checkpointer.list(mergedConfig, options)) {\n            yield this._prepareStateSnapshot({\n                config: checkpointTuple.config,\n                saved: checkpointTuple,\n            });\n        }\n    }\n    /**\n     * Update the state of the graph with the given values, as if they came from\n     * node `as_node`. If `as_node` is not provided, it will be set to the last node\n     * that updated the state, if not ambiguous.\n     */\n    async updateState(inputConfig, values, asNode) {\n        const checkpointer = inputConfig.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER] ?? this.checkpointer;\n        if (!checkpointer) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_9__.GraphValueError(\"No checkpointer set\");\n        }\n        // delegate to subgraph\n        const checkpointNamespace = inputConfig.configurable?.checkpoint_ns ?? \"\";\n        if (checkpointNamespace !== \"\" &&\n            inputConfig.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER] === undefined) {\n            // remove task_ids from checkpoint_ns\n            const recastCheckpointNamespace = checkpointNamespace\n                .split(_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_SEPARATOR)\n                .map((part) => {\n                return part.split(_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_END)[0];\n            })\n                .join(_constants_js__WEBPACK_IMPORTED_MODULE_8__.CHECKPOINT_NAMESPACE_SEPARATOR);\n            // find the subgraph with the matching name\n            // eslint-disable-next-line no-unreachable-loop\n            for await (const [, pregel] of this.getSubgraphsAsync(recastCheckpointNamespace, true)) {\n                return await pregel.updateState((0,_utils_js__WEBPACK_IMPORTED_MODULE_15__.patchConfigurable)(inputConfig, {\n                    [_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER]: checkpointer,\n                }), values, asNode);\n            }\n            throw new Error(`Subgraph \"${recastCheckpointNamespace}\" not found`);\n        }\n        // get last checkpoint\n        const config = this.config\n            ? (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.mergeConfigs)(this.config, inputConfig)\n            : inputConfig;\n        const saved = await checkpointer.getTuple(config);\n        const checkpoint = saved !== undefined\n            ? (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.copyCheckpoint)(saved.checkpoint)\n            : (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.emptyCheckpoint)();\n        const checkpointPreviousVersions = {\n            ...saved?.checkpoint.channel_versions,\n        };\n        const step = saved?.metadata?.step ?? -1;\n        // merge configurable fields with previous checkpoint config\n        let checkpointConfig = (0,_utils_js__WEBPACK_IMPORTED_MODULE_15__.patchConfigurable)(config, {\n            checkpoint_ns: config.configurable?.checkpoint_ns ?? \"\",\n        });\n        let checkpointMetadata = config.metadata ?? {};\n        if (saved?.config.configurable) {\n            checkpointConfig = (0,_utils_js__WEBPACK_IMPORTED_MODULE_15__.patchConfigurable)(config, saved.config.configurable);\n            checkpointMetadata = {\n                ...saved.metadata,\n                ...checkpointMetadata,\n            };\n        }\n        // Find last node that updated the state, if not provided\n        if (values == null && asNode === undefined) {\n            const nextConfig = await checkpointer.put(checkpointConfig, (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_2__.createCheckpoint)(checkpoint, undefined, step), {\n                source: \"update\",\n                step: step + 1,\n                writes: {},\n                parents: saved?.metadata?.parents ?? {},\n            }, {});\n            return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_11__.patchCheckpointMap)(nextConfig, saved ? saved.metadata : undefined);\n        }\n        // update channels\n        const channels = (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_2__.emptyChannels)(this.channels, checkpoint);\n        // Pass `skipManaged: true` as managed values are not used/relevant in update state calls.\n        const { managed } = await this.prepareSpecs(config, { skipManaged: true });\n        if (values === null && asNode === \"__end__\") {\n            if (saved) {\n                // tasks for this checkpoint\n                const nextTasks = (0,_algo_js__WEBPACK_IMPORTED_MODULE_10__._prepareNextTasks)(checkpoint, saved.pendingWrites || [], this.nodes, channels, managed, saved.config, true, {\n                    step: (saved.metadata?.step ?? -1) + 1,\n                    checkpointer: this.checkpointer || undefined,\n                    store: this.store,\n                });\n                // apply null writes\n                const nullWrites = (saved.pendingWrites || [])\n                    .filter((w) => w[0] === _constants_js__WEBPACK_IMPORTED_MODULE_8__.NULL_TASK_ID)\n                    .map((w) => w.slice(1));\n                if (nullWrites.length > 0) {\n                    (0,_algo_js__WEBPACK_IMPORTED_MODULE_10__._applyWrites)(saved.checkpoint, channels, [\n                        {\n                            name: _constants_js__WEBPACK_IMPORTED_MODULE_8__.INPUT,\n                            writes: nullWrites,\n                            triggers: [],\n                        },\n                    ]);\n                }\n                // apply writes from tasks that already ran\n                for (const [taskId, k, v] of saved.pendingWrites || []) {\n                    if ([_constants_js__WEBPACK_IMPORTED_MODULE_8__.ERROR, _constants_js__WEBPACK_IMPORTED_MODULE_8__.INTERRUPT, _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.SCHEDULED].includes(k)) {\n                        continue;\n                    }\n                    if (!(taskId in nextTasks)) {\n                        continue;\n                    }\n                    nextTasks[taskId].writes.push([k, v]);\n                }\n                // clear all current tasks\n                (0,_algo_js__WEBPACK_IMPORTED_MODULE_10__._applyWrites)(checkpoint, channels, Object.values(nextTasks));\n            }\n            // save checkpoint\n            const nextConfig = await checkpointer.put(checkpointConfig, (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_2__.createCheckpoint)(checkpoint, undefined, step), {\n                ...checkpointMetadata,\n                source: \"update\",\n                step: step + 1,\n                writes: {},\n                parents: saved?.metadata?.parents ?? {},\n            }, {});\n            return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_11__.patchCheckpointMap)(nextConfig, saved ? saved.metadata : undefined);\n        }\n        if (values == null && asNode === \"__copy__\") {\n            const nextConfig = await checkpointer.put(saved?.parentConfig ?? checkpointConfig, (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_2__.createCheckpoint)(checkpoint, undefined, step), {\n                source: \"fork\",\n                step: step + 1,\n                writes: {},\n                parents: saved?.metadata?.parents ?? {},\n            }, {});\n            return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_11__.patchCheckpointMap)(nextConfig, saved ? saved.metadata : undefined);\n        }\n        // apply pending writes, if not on specific checkpoint\n        if (config.configurable?.checkpoint_id === undefined &&\n            saved?.pendingWrites !== undefined &&\n            saved.pendingWrites.length > 0) {\n            // tasks for this checkpoint\n            const nextTasks = (0,_algo_js__WEBPACK_IMPORTED_MODULE_10__._prepareNextTasks)(checkpoint, saved.pendingWrites, this.nodes, channels, managed, saved.config, true, {\n                store: this.store,\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                checkpointer: this.checkpointer,\n                step: (saved.metadata?.step ?? -1) + 1,\n            });\n            // apply null writes\n            const nullWrites = (saved.pendingWrites ?? [])\n                .filter((w) => w[0] === _constants_js__WEBPACK_IMPORTED_MODULE_8__.NULL_TASK_ID)\n                .map((w) => w.slice(1));\n            if (nullWrites.length > 0) {\n                (0,_algo_js__WEBPACK_IMPORTED_MODULE_10__._applyWrites)(saved.checkpoint, channels, [\n                    {\n                        name: _constants_js__WEBPACK_IMPORTED_MODULE_8__.INPUT,\n                        writes: nullWrites,\n                        triggers: [],\n                    },\n                ]);\n            }\n            // apply writes\n            for (const [tid, k, v] of saved.pendingWrites) {\n                if ([_constants_js__WEBPACK_IMPORTED_MODULE_8__.ERROR, _constants_js__WEBPACK_IMPORTED_MODULE_8__.INTERRUPT, _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.SCHEDULED].includes(k) ||\n                    nextTasks[tid] === undefined) {\n                    continue;\n                }\n                nextTasks[tid].writes.push([k, v]);\n            }\n            const tasks = Object.values(nextTasks).filter((task) => {\n                return task.writes.length > 0;\n            });\n            if (tasks.length > 0) {\n                (0,_algo_js__WEBPACK_IMPORTED_MODULE_10__._applyWrites)(checkpoint, channels, tasks);\n            }\n        }\n        const nonNullVersion = Object.values(checkpoint.versions_seen)\n            .map((seenVersions) => {\n            return Object.values(seenVersions);\n        })\n            .flat()\n            .find((v) => !!v);\n        if (asNode === undefined && nonNullVersion === undefined) {\n            if (typeof this.inputChannels === \"string\" &&\n                this.nodes[this.inputChannels] !== undefined) {\n                asNode = this.inputChannels;\n            }\n        }\n        else if (asNode === undefined) {\n            const lastSeenByNode = Object.entries(checkpoint.versions_seen)\n                .map(([n, seen]) => {\n                return Object.values(seen).map((v) => {\n                    return [v, n];\n                });\n            })\n                .flat()\n                .sort(([aNumber], [bNumber]) => (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.compareChannelVersions)(aNumber, bNumber));\n            // if two nodes updated the state at the same time, it's ambiguous\n            if (lastSeenByNode) {\n                if (lastSeenByNode.length === 1) {\n                    // eslint-disable-next-line prefer-destructuring\n                    asNode = lastSeenByNode[0][1];\n                }\n                else if (lastSeenByNode[lastSeenByNode.length - 1][0] !==\n                    lastSeenByNode[lastSeenByNode.length - 2][0]) {\n                    // eslint-disable-next-line prefer-destructuring\n                    asNode = lastSeenByNode[lastSeenByNode.length - 1][1];\n                }\n            }\n        }\n        if (asNode === undefined) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidUpdateError(`Ambiguous update, specify \"asNode\"`);\n        }\n        if (this.nodes[asNode] === undefined) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidUpdateError(`Node \"${asNode.toString()}\" does not exist`);\n        }\n        // run all writers of the chosen node\n        const writers = this.nodes[asNode].getWriters();\n        if (!writers.length) {\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_9__.InvalidUpdateError(`No writers found for node \"${asNode.toString()}\"`);\n        }\n        const task = {\n            name: asNode,\n            input: values,\n            proc: writers.length > 1\n                ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                    _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnableSequence.from(writers, { omitSequenceTags: true })\n                : writers[0],\n            writes: [],\n            triggers: [_constants_js__WEBPACK_IMPORTED_MODULE_8__.INTERRUPT],\n            id: (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_1__.uuid5)(_constants_js__WEBPACK_IMPORTED_MODULE_8__.INTERRUPT, checkpoint.id),\n            writers: [],\n        };\n        // execute task\n        await task.proc.invoke(task.input, (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.patchConfig)({\n            ...config,\n            store: config?.store ?? this.store,\n        }, {\n            runName: config.runName ?? `${this.getName()}UpdateState`,\n            configurable: {\n                [_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_SEND]: (items) => task.writes.push(...items),\n                [_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_READ]: (select_, fresh_ = false) => (0,_algo_js__WEBPACK_IMPORTED_MODULE_10__._localRead)(step, checkpoint, channels, managed, \n                // TODO: Why does keyof StrRecord allow number and symbol?\n                task, select_, fresh_),\n            },\n        }));\n        // save task writes\n        // channel writes are saved to current checkpoint\n        // push writes are saved to next checkpoint\n        const [channelWrites, pushWrites] = [\n            task.writes.filter((w) => w[0] !== _constants_js__WEBPACK_IMPORTED_MODULE_8__.PUSH),\n            task.writes.filter((w) => w[0] === _constants_js__WEBPACK_IMPORTED_MODULE_8__.PUSH),\n        ];\n        // save task writes\n        if (saved !== undefined && channelWrites.length > 0) {\n            await checkpointer.putWrites(checkpointConfig, channelWrites, task.id);\n        }\n        // apply to checkpoint\n        // TODO: Why does keyof StrRecord allow number and symbol?\n        (0,_algo_js__WEBPACK_IMPORTED_MODULE_10__._applyWrites)(checkpoint, channels, [task], checkpointer.getNextVersion.bind(this.checkpointer));\n        const newVersions = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_11__.getNewChannelVersions)(checkpointPreviousVersions, checkpoint.channel_versions);\n        const nextConfig = await checkpointer.put(checkpointConfig, (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_2__.createCheckpoint)(checkpoint, channels, step + 1), {\n            source: \"update\",\n            step: step + 1,\n            writes: { [asNode]: values },\n            parents: saved?.metadata?.parents ?? {},\n        }, newVersions);\n        if (pushWrites.length > 0) {\n            await checkpointer.putWrites(nextConfig, pushWrites, task.id);\n        }\n        return (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_11__.patchCheckpointMap)(nextConfig, saved ? saved.metadata : undefined);\n    }\n    _defaults(config) {\n        const { debug, streamMode, inputKeys, outputKeys, interruptAfter, interruptBefore, ...rest } = config;\n        let streamModeSingle = true;\n        const defaultDebug = debug !== undefined ? debug : this.debug;\n        let defaultOutputKeys = outputKeys;\n        if (defaultOutputKeys === undefined) {\n            defaultOutputKeys = this.streamChannelsAsIs;\n        }\n        else {\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_4__.validateKeys)(defaultOutputKeys, this.channels);\n        }\n        let defaultInputKeys = inputKeys;\n        if (defaultInputKeys === undefined) {\n            defaultInputKeys = this.inputChannels;\n        }\n        else {\n            (0,_validate_js__WEBPACK_IMPORTED_MODULE_4__.validateKeys)(defaultInputKeys, this.channels);\n        }\n        const defaultInterruptBefore = interruptBefore ?? this.interruptBefore ?? [];\n        const defaultInterruptAfter = interruptAfter ?? this.interruptAfter ?? [];\n        let defaultStreamMode;\n        if (streamMode !== undefined) {\n            defaultStreamMode = Array.isArray(streamMode) ? streamMode : [streamMode];\n            streamModeSingle = typeof streamMode === \"string\";\n        }\n        else {\n            defaultStreamMode = this.streamMode;\n            streamModeSingle = true;\n        }\n        // if being called as a node in another graph, always use values mode\n        if (config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_TASK_ID] !== undefined) {\n            defaultStreamMode = [\"values\"];\n        }\n        let defaultCheckpointer;\n        if (this.checkpointer === false) {\n            defaultCheckpointer = undefined;\n        }\n        else if (config !== undefined &&\n            config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER] !== undefined) {\n            defaultCheckpointer = config.configurable[_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_CHECKPOINTER];\n        }\n        else {\n            defaultCheckpointer = this.checkpointer;\n        }\n        const defaultStore = config.store ?? this.store;\n        return [\n            defaultDebug,\n            defaultStreamMode,\n            defaultInputKeys,\n            defaultOutputKeys,\n            rest,\n            defaultInterruptBefore,\n            defaultInterruptAfter,\n            defaultCheckpointer,\n            defaultStore,\n            streamModeSingle,\n        ];\n    }\n    /**\n     * Stream graph steps for a single input.\n     * @param input The input to the graph.\n     * @param options The configuration to use for the run.\n     * @param options.streamMode The mode to stream output. Defaults to value set on initialization.\n     *   Options are \"values\", \"updates\", and \"debug\". Default is \"values\".\n     *     values: Emit the current values of the state for each step.\n     *     updates: Emit only the updates to the state for each step.\n     *         Output is a dict with the node name as key and the updated values as value.\n     *     debug: Emit debug events for each step.\n     * @param options.outputKeys The keys to stream. Defaults to all non-context channels.\n     * @param options.interruptBefore Nodes to interrupt before.\n     * @param options.interruptAfter Nodes to interrupt after.\n     * @param options.debug Whether to print debug information during execution.\n     */\n    async stream(input, options) {\n        // The ensureConfig method called internally defaults recursionLimit to 25 if not\n        // passed directly in `options`.\n        // There is currently no way in _streamIterator to determine whether this was\n        // set by by ensureConfig or manually by the user, so we specify the bound value here\n        // and override if it is passed as an explicit param in `options`.\n        const config = {\n            recursionLimit: this.config?.recursionLimit,\n            ...options,\n        };\n        return super.stream(input, config);\n    }\n    async prepareSpecs(config, options) {\n        const configForManaged = {\n            ...config,\n            store: this.store,\n        };\n        const channelSpecs = {};\n        const managedSpecs = {};\n        for (const [name, spec] of Object.entries(this.channels)) {\n            if ((0,_channels_base_js__WEBPACK_IMPORTED_MODULE_2__.isBaseChannel)(spec)) {\n                channelSpecs[name] = spec;\n            }\n            else if (options?.skipManaged) {\n                managedSpecs[name] = {\n                    cls: _managed_base_js__WEBPACK_IMPORTED_MODULE_14__.NoopManagedValue,\n                    params: { config: {} },\n                };\n            }\n            else {\n                managedSpecs[name] = spec;\n            }\n        }\n        const managed = new _managed_base_js__WEBPACK_IMPORTED_MODULE_14__.ManagedValueMapping(await Object.entries(managedSpecs).reduce(async (accPromise, [key, value]) => {\n            const acc = await accPromise;\n            let initializedValue;\n            if ((0,_managed_base_js__WEBPACK_IMPORTED_MODULE_14__.isConfiguredManagedValue)(value)) {\n                if (\"key\" in value.params &&\n                    value.params.key === _managed_base_js__WEBPACK_IMPORTED_MODULE_14__.ChannelKeyPlaceholder) {\n                    value.params.key = key;\n                }\n                initializedValue = await value.cls.initialize(configForManaged, value.params);\n            }\n            else {\n                initializedValue = await value.initialize(configForManaged);\n            }\n            if (initializedValue !== undefined) {\n                acc.push([key, initializedValue]);\n            }\n            return acc;\n        }, Promise.resolve([])));\n        return {\n            channelSpecs,\n            managed,\n        };\n    }\n    async *_streamIterator(input, options) {\n        const streamSubgraphs = options?.subgraphs;\n        const inputConfig = (0,_utils_config_js__WEBPACK_IMPORTED_MODULE_16__.ensureLangGraphConfig)(this.config, options);\n        if (inputConfig.recursionLimit === undefined ||\n            inputConfig.recursionLimit < 1) {\n            throw new Error(`Passed \"recursionLimit\" must be at least 1.`);\n        }\n        if (this.checkpointer !== undefined &&\n            this.checkpointer !== false &&\n            inputConfig.configurable === undefined) {\n            throw new Error(`Checkpointer requires one or more of the following \"configurable\" keys: \"thread_id\", \"checkpoint_ns\", \"checkpoint_id\"`);\n        }\n        const { runId, ...restConfig } = inputConfig;\n        // assign defaults\n        const [debug, streamMode, , outputKeys, config, interruptBefore, interruptAfter, checkpointer, store, streamModeSingle,] = this._defaults(restConfig);\n        const stream = new _stream_js__WEBPACK_IMPORTED_MODULE_19__.IterableReadableWritableStream({\n            modes: new Set(streamMode),\n        });\n        // set up messages stream mode\n        if (streamMode.includes(\"messages\")) {\n            const messageStreamer = new _messages_js__WEBPACK_IMPORTED_MODULE_17__.StreamMessagesHandler((chunk) => stream.push(chunk));\n            const { callbacks } = config;\n            if (callbacks === undefined) {\n                config.callbacks = [messageStreamer];\n            }\n            else if (Array.isArray(callbacks)) {\n                config.callbacks = callbacks.concat(messageStreamer);\n            }\n            else {\n                const copiedCallbacks = callbacks.copy();\n                copiedCallbacks.addHandler(messageStreamer, true);\n                config.callbacks = copiedCallbacks;\n            }\n        }\n        // setup custom stream mode\n        if (streamMode.includes(\"custom\")) {\n            config.writer = (chunk) => stream.push([[], \"custom\", chunk]);\n        }\n        const callbackManager = await (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.getCallbackManagerForConfig)(config);\n        const runManager = await callbackManager?.handleChainStart(this.toJSON(), (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_11__._coerceToDict)(input, \"input\"), runId, undefined, undefined, undefined, config?.runName ?? this.getName());\n        const { channelSpecs, managed } = await this.prepareSpecs(config);\n        let loop;\n        let loopError;\n        /**\n         * The PregelLoop will yield events from concurrent tasks as soon as they are\n         * generated. Each task can push multiple events onto the stream in any order.\n         *\n         * We use a separate background method and stream here in order to yield events\n         * from the loop to the main stream and therefore back to the user as soon as\n         * they are available.\n         */\n        const createAndRunLoop = async () => {\n            try {\n                loop = await _loop_js__WEBPACK_IMPORTED_MODULE_13__.PregelLoop.initialize({\n                    input,\n                    config,\n                    checkpointer,\n                    nodes: this.nodes,\n                    channelSpecs,\n                    managed,\n                    outputKeys,\n                    streamKeys: this.streamChannelsAsIs,\n                    store,\n                    stream,\n                    interruptAfter,\n                    interruptBefore,\n                    manager: runManager,\n                    debug: this.debug,\n                });\n                const runner = new _runner_js__WEBPACK_IMPORTED_MODULE_18__.PregelRunner({\n                    loop,\n                    nodeFinished: config.configurable?.nodeFinished,\n                });\n                if (options?.subgraphs) {\n                    loop.config.configurable = {\n                        ...loop.config.configurable,\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_8__.CONFIG_KEY_STREAM]: loop.stream,\n                    };\n                }\n                await this._runLoop({ loop, runner, debug, config });\n            }\n            catch (e) {\n                loopError = e;\n            }\n            finally {\n                try {\n                    // Call `.stop()` again incase it was not called in the loop, e.g due to an error.\n                    if (loop) {\n                        await loop.store?.stop();\n                    }\n                    await Promise.all([\n                        ...(loop?.checkpointerPromises ?? []),\n                        ...Array.from(managed.values()).map((mv) => mv.promises()),\n                    ]);\n                }\n                catch (e) {\n                    loopError = loopError ?? e;\n                }\n                if (loopError) {\n                    // \"Causes any future interactions with the associated stream to error\".\n                    // Wraps ReadableStreamDefaultController#error:\n                    // https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController/error\n                    stream.error(loopError);\n                }\n                else {\n                    // Will end the iterator outside of this method,\n                    // keeping previously enqueued chunks.\n                    // Wraps ReadableStreamDefaultController#close:\n                    // https://developer.mozilla.org/en-US/docs/Web/API/ReadableStreamDefaultController/close\n                    stream.close();\n                }\n            }\n        };\n        const runLoopPromise = createAndRunLoop();\n        try {\n            for await (const chunk of stream) {\n                if (chunk === undefined) {\n                    throw new Error(\"Data structure error.\");\n                }\n                const [namespace, mode, payload] = chunk;\n                if (streamMode.includes(mode)) {\n                    if (streamSubgraphs && !streamModeSingle) {\n                        yield [namespace, mode, payload];\n                    }\n                    else if (!streamModeSingle) {\n                        yield [mode, payload];\n                    }\n                    else if (streamSubgraphs) {\n                        yield [namespace, payload];\n                    }\n                    else {\n                        yield payload;\n                    }\n                }\n            }\n        }\n        catch (e) {\n            await runManager?.handleChainError(loopError);\n            throw e;\n        }\n        finally {\n            await runLoopPromise;\n        }\n        await runManager?.handleChainEnd(loop?.output ?? {});\n    }\n    /**\n     * Run the graph with a single input and config.\n     * @param input The input to the graph.\n     * @param options The configuration to use for the run.\n     * @param options.streamMode The mode to stream output. Defaults to value set on initialization.\n     *   Options are \"values\", \"updates\", and \"debug\". Default is \"values\".\n     *     values: Emit the current values of the state for each step.\n     *     updates: Emit only the updates to the state for each step.\n     *         Output is a dict with the node name as key and the updated values as value.\n     *     debug: Emit debug events for each step.\n     * @param options.outputKeys The keys to stream. Defaults to all non-context channels.\n     * @param options.interruptBefore Nodes to interrupt before.\n     * @param options.interruptAfter Nodes to interrupt after.\n     * @param options.debug Whether to print debug information during execution.\n     */\n    async invoke(input, options) {\n        const streamMode = options?.streamMode ?? \"values\";\n        const config = {\n            ...options,\n            outputKeys: options?.outputKeys ?? this.outputChannels,\n            streamMode,\n        };\n        const chunks = [];\n        const stream = await this.stream(input, config);\n        for await (const chunk of stream) {\n            chunks.push(chunk);\n        }\n        if (streamMode === \"values\") {\n            return chunks[chunks.length - 1];\n        }\n        return chunks;\n    }\n    async _runLoop(params) {\n        const { loop, runner, debug, config } = params;\n        let tickError;\n        try {\n            while (await loop.tick({\n                inputKeys: this.inputChannels,\n            })) {\n                if (debug) {\n                    (0,_debug_js__WEBPACK_IMPORTED_MODULE_6__.printStepCheckpoint)(loop.checkpointMetadata.step, loop.channels, this.streamChannelsList);\n                }\n                if (debug) {\n                    (0,_debug_js__WEBPACK_IMPORTED_MODULE_6__.printStepTasks)(loop.step, Object.values(loop.tasks));\n                }\n                await runner.tick({\n                    timeout: this.stepTimeout,\n                    retryPolicy: this.retryPolicy,\n                    onStepWrite: (step, writes) => {\n                        if (debug) {\n                            (0,_debug_js__WEBPACK_IMPORTED_MODULE_6__.printStepWrites)(step, writes, this.streamChannelsList);\n                        }\n                    },\n                    signal: config.signal,\n                });\n            }\n            if (loop.status === \"out_of_steps\") {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_9__.GraphRecursionError([\n                    `Recursion limit of ${config.recursionLimit} reached`,\n                    \"without hitting a stop condition. You can increase the\",\n                    `limit by setting the \"recursionLimit\" config key.`,\n                ].join(\" \"), {\n                    lc_error_code: \"GRAPH_RECURSION_LIMIT\",\n                });\n            }\n        }\n        catch (e) {\n            tickError = e;\n            const suppress = await loop.finishAndHandleError(tickError);\n            if (!suppress) {\n                throw e;\n            }\n        }\n        finally {\n            if (tickError === undefined) {\n                await loop.finishAndHandleError();\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/io.js":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/io.js ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   mapCommand: () => (/* binding */ mapCommand),\n/* harmony export */   mapInput: () => (/* binding */ mapInput),\n/* harmony export */   mapOutputUpdates: () => (/* binding */ mapOutputUpdates),\n/* harmony export */   mapOutputValues: () => (/* binding */ mapOutputValues),\n/* harmony export */   readChannel: () => (/* binding */ readChannel),\n/* harmony export */   readChannels: () => (/* binding */ readChannels),\n/* harmony export */   single: () => (/* binding */ single)\n/* harmony export */ });\n/* harmony import */ var uuid__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! uuid */ \"(rsc)/./node_modules/.pnpm/uuid@10.0.0/node_modules/uuid/dist/esm-node/validate.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n\n\n\nfunction readChannel(channels, chan, catchErrors = true, returnException = false) {\n    try {\n        return channels[chan].get();\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    }\n    catch (e) {\n        if (e.name === _errors_js__WEBPACK_IMPORTED_MODULE_1__.EmptyChannelError.unminifiable_name) {\n            if (returnException) {\n                return e;\n            }\n            else if (catchErrors) {\n                return null;\n            }\n        }\n        throw e;\n    }\n}\nfunction readChannels(channels, select, skipEmpty = true\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    if (Array.isArray(select)) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const values = {};\n        for (const k of select) {\n            try {\n                values[k] = readChannel(channels, k, !skipEmpty);\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            }\n            catch (e) {\n                if (e.name === _errors_js__WEBPACK_IMPORTED_MODULE_1__.EmptyChannelError.unminifiable_name) {\n                    continue;\n                }\n            }\n        }\n        return values;\n    }\n    else {\n        return readChannel(channels, select);\n    }\n}\n/**\n * Map input chunk to a sequence of pending writes in the form (channel, value).\n */\nfunction* mapCommand(cmd, pendingWrites) {\n    if (cmd.graph === _constants_js__WEBPACK_IMPORTED_MODULE_0__.Command.PARENT) {\n        throw new _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidUpdateError(\"There is no parent graph.\");\n    }\n    if (cmd.goto) {\n        let sends;\n        if (Array.isArray(cmd.goto)) {\n            sends = cmd.goto;\n        }\n        else {\n            sends = [cmd.goto];\n        }\n        for (const send of sends) {\n            if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_0__._isSend)(send)) {\n                yield [_constants_js__WEBPACK_IMPORTED_MODULE_0__.NULL_TASK_ID, _constants_js__WEBPACK_IMPORTED_MODULE_0__.TASKS, send];\n            }\n            else if (typeof send === \"string\") {\n                yield [_constants_js__WEBPACK_IMPORTED_MODULE_0__.NULL_TASK_ID, `branch:__start__:${_constants_js__WEBPACK_IMPORTED_MODULE_0__.SELF}:${send}`, \"__start__\"];\n            }\n            else {\n                throw new Error(`In Command.send, expected Send or string, got ${typeof send}`);\n            }\n        }\n    }\n    if (cmd.resume) {\n        if (typeof cmd.resume === \"object\" &&\n            Object.keys(cmd.resume).length &&\n            Object.keys(cmd.resume).every(uuid__WEBPACK_IMPORTED_MODULE_2__[\"default\"])) {\n            for (const [tid, resume] of Object.entries(cmd.resume)) {\n                const existing = pendingWrites\n                    .filter((w) => w[0] === tid && w[1] === _constants_js__WEBPACK_IMPORTED_MODULE_0__.RESUME)\n                    .map((w) => w[2])\n                    .slice(0, 1) ?? [];\n                existing.push(resume);\n                yield [tid, _constants_js__WEBPACK_IMPORTED_MODULE_0__.RESUME, existing];\n            }\n        }\n        else {\n            yield [_constants_js__WEBPACK_IMPORTED_MODULE_0__.NULL_TASK_ID, _constants_js__WEBPACK_IMPORTED_MODULE_0__.RESUME, cmd.resume];\n        }\n    }\n    if (cmd.update) {\n        if (typeof cmd.update !== \"object\" || !cmd.update) {\n            throw new Error(\"Expected cmd.update to be a dict mapping channel names to update values\");\n        }\n        if (Array.isArray(cmd.update)) {\n            for (const [k, v] of cmd.update) {\n                yield [_constants_js__WEBPACK_IMPORTED_MODULE_0__.NULL_TASK_ID, k, v];\n            }\n        }\n        else {\n            for (const [k, v] of Object.entries(cmd.update)) {\n                yield [_constants_js__WEBPACK_IMPORTED_MODULE_0__.NULL_TASK_ID, k, v];\n            }\n        }\n    }\n}\n/**\n * Map input chunk to a sequence of pending writes in the form [channel, value].\n */\nfunction* mapInput(inputChannels, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nchunk\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    if (chunk !== undefined && chunk !== null) {\n        if (Array.isArray(inputChannels) &&\n            typeof chunk === \"object\" &&\n            !Array.isArray(chunk)) {\n            for (const k in chunk) {\n                if (inputChannels.includes(k)) {\n                    yield [k, chunk[k]];\n                }\n            }\n        }\n        else if (Array.isArray(inputChannels)) {\n            throw new Error(`Input chunk must be an object when \"inputChannels\" is an array`);\n        }\n        else {\n            yield [inputChannels, chunk];\n        }\n    }\n}\n/**\n * Map pending writes (a sequence of tuples (channel, value)) to output chunk.\n */\nfunction* mapOutputValues(outputChannels, pendingWrites, channels\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    if (Array.isArray(outputChannels)) {\n        if (pendingWrites === true ||\n            pendingWrites.find(([chan, _]) => outputChannels.includes(chan))) {\n            yield readChannels(channels, outputChannels);\n        }\n    }\n    else {\n        if (pendingWrites === true ||\n            pendingWrites.some(([chan, _]) => chan === outputChannels)) {\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            yield readChannel(channels, outputChannels);\n        }\n    }\n}\n/**\n * Map pending writes (a sequence of tuples (channel, value)) to output chunk.\n */\nfunction* mapOutputUpdates(outputChannels, tasks, cached\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    const outputTasks = tasks.filter(([task, ww]) => {\n        return ((task.config === undefined || !task.config.tags?.includes(_constants_js__WEBPACK_IMPORTED_MODULE_0__.TAG_HIDDEN)) &&\n            ww[0][0] !== _constants_js__WEBPACK_IMPORTED_MODULE_0__.ERROR &&\n            ww[0][0] !== _constants_js__WEBPACK_IMPORTED_MODULE_0__.INTERRUPT);\n    });\n    if (!outputTasks.length) {\n        return;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    let updated;\n    if (outputTasks.some(([task]) => task.writes.some(([chan, _]) => chan === _constants_js__WEBPACK_IMPORTED_MODULE_0__.RETURN))) {\n        updated = outputTasks.flatMap(([task]) => task.writes\n            .filter(([chan, _]) => chan === _constants_js__WEBPACK_IMPORTED_MODULE_0__.RETURN)\n            .map(([_, value]) => [task.name, value]));\n    }\n    else if (!Array.isArray(outputChannels)) {\n        updated = outputTasks.flatMap(([task]) => task.writes\n            .filter(([chan, _]) => chan === outputChannels)\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            .map(([_, value]) => [task.name, value]));\n    }\n    else {\n        updated = outputTasks\n            .filter(([task]) => task.writes.some(([chan]) => outputChannels.includes(chan)))\n            .map(([task]) => [\n            task.name,\n            Object.fromEntries(task.writes.filter(([chan]) => outputChannels.includes(chan))),\n        ]);\n    }\n    const grouped = Object.fromEntries(outputTasks.map(([t]) => [t.name, []])\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    );\n    for (const [node, value] of updated) {\n        grouped[node].push(value);\n    }\n    for (const [node, value] of Object.entries(grouped)) {\n        if (value.length === 0) {\n            delete grouped[node];\n        }\n        else if (value.length === 1) {\n            // TODO: Fix incorrect cast here\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            grouped[node] = value[0];\n        }\n    }\n    if (cached) {\n        grouped[\"__metadata__\"] = { cached };\n    }\n    yield grouped;\n}\nfunction single(iter) {\n    // eslint-disable-next-line no-unreachable-loop\n    for (const value of iter) {\n        return value;\n    }\n    return null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/io.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/loop.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/loop.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PregelLoop: () => (/* binding */ PregelLoop)\n/* harmony export */ });\n/* harmony import */ var _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/langgraph-checkpoint */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph-checkpoint@0.0.15_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferu_wxyqc73w5wk4lx2cfu5zaddqqi/node_modules/@langchain/langgraph-checkpoint/index.js\");\n/* harmony import */ var _channels_base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../channels/base.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/base.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _algo_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./algo.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/algo.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js\");\n/* harmony import */ var _io_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./io.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/io.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./utils/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/index.js\");\n/* harmony import */ var _debug_js__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ./debug.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/debug.js\");\n/* harmony import */ var _stream_js__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ./stream.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/stream.js\");\n\n\n\n\n\n\n\n\n\n\nconst INPUT_DONE = Symbol.for(\"INPUT_DONE\");\nconst INPUT_RESUMING = Symbol.for(\"INPUT_RESUMING\");\nconst DEFAULT_LOOP_LIMIT = 25;\nfunction createDuplexStream(...streams) {\n    return new _stream_js__WEBPACK_IMPORTED_MODULE_9__.IterableReadableWritableStream({\n        passthroughFn: (value) => {\n            for (const stream of streams) {\n                if (stream.modes.has(value[1])) {\n                    stream.push(value);\n                }\n            }\n        },\n        modes: new Set(streams.flatMap((s) => Array.from(s.modes))),\n    });\n}\nclass PregelLoop {\n    constructor(params) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"input\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"output\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"checkpointer\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"checkpointerGetNextVersion\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"channels\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"managed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"checkpoint\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"checkpointConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"checkpointMetadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"checkpointNamespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"checkpointPendingWrites\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"checkpointPreviousVersions\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"step\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"stop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputKeys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"streamKeys\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"nodes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"skipDoneTasks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"prevCheckpointConfig\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"status\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"pending\"\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"tasks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"stream\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"checkpointerPromises\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"isNested\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_checkpointerChainedPromise\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: Promise.resolve()\n        });\n        Object.defineProperty(this, \"store\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"manager\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"interruptAfter\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"interruptBefore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"toInterrupt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"debug\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.input = params.input;\n        this.checkpointer = params.checkpointer;\n        // TODO: if managed values no longer needs graph we can replace with\n        // managed_specs, channel_specs\n        if (this.checkpointer !== undefined) {\n            this.checkpointerGetNextVersion = this.checkpointer.getNextVersion.bind(this.checkpointer);\n        }\n        else {\n            this.checkpointerGetNextVersion = _algo_js__WEBPACK_IMPORTED_MODULE_3__.increment;\n        }\n        this.checkpoint = params.checkpoint;\n        this.checkpointMetadata = params.checkpointMetadata;\n        this.checkpointPreviousVersions = params.checkpointPreviousVersions;\n        this.channels = params.channels;\n        this.managed = params.managed;\n        this.checkpointPendingWrites = params.checkpointPendingWrites;\n        this.step = params.step;\n        this.stop = params.stop;\n        this.config = params.config;\n        this.checkpointConfig = params.checkpointConfig;\n        this.isNested = params.isNested;\n        this.manager = params.manager;\n        this.outputKeys = params.outputKeys;\n        this.streamKeys = params.streamKeys;\n        this.nodes = params.nodes;\n        this.skipDoneTasks = params.skipDoneTasks;\n        this.store = params.store;\n        this.stream = params.stream;\n        this.checkpointNamespace = params.checkpointNamespace;\n        this.prevCheckpointConfig = params.prevCheckpointConfig;\n        this.interruptAfter = params.interruptAfter;\n        this.interruptBefore = params.interruptBefore;\n        this.debug = params.debug;\n    }\n    static async initialize(params) {\n        let { config, stream } = params;\n        const { checkSubgraphs = true } = params;\n        if (stream !== undefined &&\n            config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_STREAM] !== undefined) {\n            stream = createDuplexStream(stream, config.configurable[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_STREAM]);\n        }\n        const skipDoneTasks = config.configurable\n            ? !(\"checkpoint_id\" in config.configurable)\n            : true;\n        const isNested = _constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_READ in (config.configurable ?? {});\n        if (!isNested &&\n            config.configurable?.checkpoint_ns !== undefined &&\n            config.configurable?.checkpoint_ns !== \"\") {\n            config = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.patchConfigurable)(config, {\n                checkpoint_ns: \"\",\n                checkpoint_id: undefined,\n            });\n        }\n        let checkpointConfig = config;\n        if (config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_CHECKPOINT_MAP] !== undefined &&\n            config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_CHECKPOINT_MAP]?.[config.configurable?.checkpoint_ns]) {\n            checkpointConfig = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.patchConfigurable)(config, {\n                checkpoint_id: config.configurable[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_CHECKPOINT_MAP][config.configurable?.checkpoint_ns],\n            });\n        }\n        const checkpointNamespace = config.configurable?.checkpoint_ns?.split(_constants_js__WEBPACK_IMPORTED_MODULE_2__.CHECKPOINT_NAMESPACE_SEPARATOR) ?? [];\n        const saved = (await params.checkpointer?.getTuple(checkpointConfig)) ?? {\n            config,\n            checkpoint: (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__.emptyCheckpoint)(),\n            metadata: {\n                source: \"input\",\n                step: -2,\n                writes: null,\n                parents: {},\n            },\n            pendingWrites: [],\n        };\n        checkpointConfig = {\n            ...config,\n            ...saved.config,\n            configurable: {\n                checkpoint_ns: \"\",\n                ...config.configurable,\n                ...saved.config.configurable,\n            },\n        };\n        const prevCheckpointConfig = saved.parentConfig;\n        const checkpoint = (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__.copyCheckpoint)(saved.checkpoint);\n        const checkpointMetadata = { ...saved.metadata };\n        const checkpointPendingWrites = saved.pendingWrites ?? [];\n        const channels = (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_1__.emptyChannels)(params.channelSpecs, checkpoint);\n        const step = (checkpointMetadata.step ?? 0) + 1;\n        const stop = step + (config.recursionLimit ?? DEFAULT_LOOP_LIMIT) + 1;\n        const checkpointPreviousVersions = { ...checkpoint.channel_versions };\n        const store = params.store\n            ? new _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__.AsyncBatchedStore(params.store)\n            : undefined;\n        if (store) {\n            // Start the store. This is a batch store, so it will run continuously\n            store.start();\n        }\n        if (checkSubgraphs && isNested && params.checkpointer !== undefined) {\n            if ((0,_errors_js__WEBPACK_IMPORTED_MODULE_6__.getSubgraphsSeenSet)().has(config.configurable?.checkpoint_ns)) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.MultipleSubgraphsError([\n                    \"Detected the same subgraph called multiple times by the same node.\",\n                    \"This is not allowed if checkpointing is enabled.\",\n                    \"\",\n                    `You can disable checkpointing for a subgraph by compiling it with \".compile({ checkpointer: false });\"`,\n                ].join(\"\\n\"), {\n                    lc_error_code: \"MULTIPLE_SUBGRAPHS\",\n                });\n            }\n            else {\n                (0,_errors_js__WEBPACK_IMPORTED_MODULE_6__.getSubgraphsSeenSet)().add(config.configurable?.checkpoint_ns);\n            }\n        }\n        return new PregelLoop({\n            input: params.input,\n            config,\n            checkpointer: params.checkpointer,\n            checkpoint,\n            checkpointMetadata,\n            checkpointConfig,\n            prevCheckpointConfig,\n            checkpointNamespace,\n            channels,\n            managed: params.managed,\n            isNested,\n            manager: params.manager,\n            skipDoneTasks,\n            step,\n            stop,\n            checkpointPreviousVersions,\n            checkpointPendingWrites,\n            outputKeys: params.outputKeys ?? [],\n            streamKeys: params.streamKeys ?? [],\n            nodes: params.nodes,\n            stream,\n            store,\n            interruptAfter: params.interruptAfter,\n            interruptBefore: params.interruptBefore,\n            debug: params.debug,\n        });\n    }\n    _checkpointerPutAfterPrevious(input) {\n        this._checkpointerChainedPromise = this._checkpointerChainedPromise.then(() => {\n            return this.checkpointer?.put(input.config, input.checkpoint, input.metadata, input.newVersions);\n        });\n        this.checkpointerPromises.push(this._checkpointerChainedPromise);\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    async updateManagedValues(key, values) {\n        const mv = this.managed.get(key);\n        if (mv && \"update\" in mv && typeof mv.update === \"function\") {\n            await mv.update(values);\n        }\n    }\n    /**\n     * Put writes for a task, to be read by the next tick.\n     * @param taskId\n     * @param writes\n     */\n    putWrites(taskId, writes) {\n        let writesCopy = writes;\n        if (writesCopy.length === 0) {\n            return;\n        }\n        // deduplicate writes to special channels, last write wins\n        if (writesCopy.every(([key]) => key in _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__.WRITES_IDX_MAP)) {\n            writesCopy = Array.from(new Map(writesCopy.map((w) => [w[0], w])).values());\n        }\n        // save writes\n        for (const [c, v] of writesCopy) {\n            const idx = this.checkpointPendingWrites.findIndex((w) => w[0] === taskId && w[1] === c);\n            if (c in _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__.WRITES_IDX_MAP && idx !== -1) {\n                this.checkpointPendingWrites[idx] = [taskId, c, v];\n            }\n            else {\n                this.checkpointPendingWrites.push([taskId, c, v]);\n            }\n        }\n        const putWritePromise = this.checkpointer?.putWrites({\n            ...this.checkpointConfig,\n            configurable: {\n                ...this.checkpointConfig.configurable,\n                checkpoint_ns: this.config.configurable?.checkpoint_ns ?? \"\",\n                checkpoint_id: this.checkpoint.id,\n            },\n        }, writesCopy, taskId);\n        if (putWritePromise !== undefined) {\n            this.checkpointerPromises.push(putWritePromise);\n        }\n        if (this.tasks) {\n            this._outputWrites(taskId, writesCopy);\n        }\n    }\n    _outputWrites(taskId, writes, cached = false) {\n        const task = this.tasks[taskId];\n        if (task !== undefined) {\n            if (task.config !== undefined &&\n                (task.config.tags ?? []).includes(_constants_js__WEBPACK_IMPORTED_MODULE_2__.TAG_HIDDEN)) {\n                return;\n            }\n            if (writes.length > 0 &&\n                writes[0][0] !== _constants_js__WEBPACK_IMPORTED_MODULE_2__.ERROR &&\n                writes[0][0] !== _constants_js__WEBPACK_IMPORTED_MODULE_2__.INTERRUPT) {\n                this._emit((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.gatherIteratorSync)((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.prefixGenerator)((0,_io_js__WEBPACK_IMPORTED_MODULE_5__.mapOutputUpdates)(this.outputKeys, [[task, writes]], cached), \"updates\")));\n            }\n            if (!cached) {\n                this._emit((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.gatherIteratorSync)((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.prefixGenerator)((0,_debug_js__WEBPACK_IMPORTED_MODULE_8__.mapDebugTaskResults)(this.step, [[task, writes]], this.streamKeys), \"debug\")));\n            }\n        }\n    }\n    /**\n     * Execute a single iteration of the Pregel loop.\n     * Returns true if more iterations are needed.\n     * @param params\n     */\n    async tick(params) {\n        if (this.store && !this.store.isRunning) {\n            this.store?.start();\n        }\n        const { inputKeys = [] } = params;\n        if (this.status !== \"pending\") {\n            throw new Error(`Cannot tick when status is no longer \"pending\". Current status: \"${this.status}\"`);\n        }\n        if (![INPUT_DONE, INPUT_RESUMING].includes(this.input)) {\n            await this._first(inputKeys);\n        }\n        else if (Object.values(this.tasks).every((task) => task.writes.filter(([c]) => !(c in _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__.WRITES_IDX_MAP)).length > 0)) {\n            const writes = Object.values(this.tasks).flatMap((t) => t.writes);\n            // All tasks have finished\n            const managedValueWrites = (0,_algo_js__WEBPACK_IMPORTED_MODULE_3__._applyWrites)(this.checkpoint, this.channels, Object.values(this.tasks), this.checkpointerGetNextVersion);\n            for (const [key, values] of Object.entries(managedValueWrites)) {\n                await this.updateManagedValues(key, values);\n            }\n            // produce values output\n            const valuesOutput = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.gatherIterator)((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.prefixGenerator)((0,_io_js__WEBPACK_IMPORTED_MODULE_5__.mapOutputValues)(this.outputKeys, writes, this.channels), \"values\"));\n            this._emit(valuesOutput);\n            // clear pending writes\n            this.checkpointPendingWrites = [];\n            await this._putCheckpoint({\n                source: \"loop\",\n                writes: (0,_io_js__WEBPACK_IMPORTED_MODULE_5__.mapOutputUpdates)(this.outputKeys, Object.values(this.tasks).map((task) => [task, task.writes])).next().value ?? null,\n            });\n            // after execution, check if we should interrupt\n            if ((0,_algo_js__WEBPACK_IMPORTED_MODULE_3__.shouldInterrupt)(this.checkpoint, this.interruptAfter, Object.values(this.tasks))) {\n                this.status = \"interrupt_after\";\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.GraphInterrupt();\n            }\n        }\n        else {\n            return false;\n        }\n        if (this.step > this.stop) {\n            this.status = \"out_of_steps\";\n            return false;\n        }\n        const nextTasks = (0,_algo_js__WEBPACK_IMPORTED_MODULE_3__._prepareNextTasks)(this.checkpoint, this.checkpointPendingWrites, this.nodes, this.channels, this.managed, this.config, true, {\n            step: this.step,\n            checkpointer: this.checkpointer,\n            isResuming: this.input === INPUT_RESUMING,\n            manager: this.manager,\n            store: this.store,\n            stream: this.stream,\n        });\n        this.tasks = nextTasks;\n        // Produce debug output\n        if (this.checkpointer) {\n            this._emit(await (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.gatherIterator)((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.prefixGenerator)((0,_debug_js__WEBPACK_IMPORTED_MODULE_8__.mapDebugCheckpoint)(this.step - 1, // printing checkpoint for previous step\n            this.checkpointConfig, this.channels, this.streamKeys, this.checkpointMetadata, Object.values(this.tasks), this.checkpointPendingWrites, this.prevCheckpointConfig), \"debug\")));\n        }\n        if (Object.values(this.tasks).length === 0) {\n            this.status = \"done\";\n            return false;\n        }\n        // if there are pending writes from a previous loop, apply them\n        if (this.skipDoneTasks && this.checkpointPendingWrites.length > 0) {\n            for (const [tid, k, v] of this.checkpointPendingWrites) {\n                if (k === _constants_js__WEBPACK_IMPORTED_MODULE_2__.ERROR || k === _constants_js__WEBPACK_IMPORTED_MODULE_2__.INTERRUPT || k === _constants_js__WEBPACK_IMPORTED_MODULE_2__.RESUME) {\n                    continue;\n                }\n                const task = Object.values(this.tasks).find((t) => t.id === tid);\n                if (task) {\n                    task.writes.push([k, v]);\n                }\n            }\n            for (const task of Object.values(this.tasks)) {\n                if (task.writes.length > 0) {\n                    this._outputWrites(task.id, task.writes, true);\n                }\n            }\n        }\n        // if all tasks have finished, re-tick\n        if (Object.values(this.tasks).every((task) => task.writes.length > 0)) {\n            return this.tick({ inputKeys });\n        }\n        // Before execution, check if we should interrupt\n        if ((0,_algo_js__WEBPACK_IMPORTED_MODULE_3__.shouldInterrupt)(this.checkpoint, this.interruptBefore, Object.values(this.tasks))) {\n            this.status = \"interrupt_before\";\n            throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.GraphInterrupt();\n        }\n        // Produce debug output\n        const debugOutput = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.gatherIterator)((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.prefixGenerator)((0,_debug_js__WEBPACK_IMPORTED_MODULE_8__.mapDebugTasks)(this.step, Object.values(this.tasks)), \"debug\"));\n        this._emit(debugOutput);\n        return true;\n    }\n    async finishAndHandleError(error) {\n        const suppress = this._suppressInterrupt(error);\n        if (suppress || error === undefined) {\n            this.output = (0,_io_js__WEBPACK_IMPORTED_MODULE_5__.readChannels)(this.channels, this.outputKeys);\n        }\n        if (suppress) {\n            // emit one last \"values\" event, with pending writes applied\n            if (this.tasks !== undefined &&\n                this.checkpointPendingWrites.length > 0 &&\n                Object.values(this.tasks).some((task) => task.writes.length > 0)) {\n                const managedValueWrites = (0,_algo_js__WEBPACK_IMPORTED_MODULE_3__._applyWrites)(this.checkpoint, this.channels, Object.values(this.tasks), this.checkpointerGetNextVersion);\n                for (const [key, values] of Object.entries(managedValueWrites)) {\n                    await this.updateManagedValues(key, values);\n                }\n                this._emit((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.gatherIteratorSync)((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.prefixGenerator)((0,_io_js__WEBPACK_IMPORTED_MODULE_5__.mapOutputValues)(this.outputKeys, Object.values(this.tasks).flatMap((t) => t.writes), this.channels), \"values\")));\n            }\n            // Emit INTERRUPT event\n            this._emit([\n                [\n                    \"updates\",\n                    {\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_2__.INTERRUPT]: error.interrupts,\n                    },\n                ],\n            ]);\n        }\n        return suppress;\n    }\n    acceptPush(task, writeIdx, call) {\n        if (this.interruptAfter?.length > 0 &&\n            (0,_algo_js__WEBPACK_IMPORTED_MODULE_3__.shouldInterrupt)(this.checkpoint, this.interruptAfter, [task])) {\n            this.toInterrupt.push(task);\n            return;\n        }\n        const pushed = (0,_algo_js__WEBPACK_IMPORTED_MODULE_3__._prepareSingleTask)([_constants_js__WEBPACK_IMPORTED_MODULE_2__.PUSH, task.path ?? [], writeIdx, task.id, call], this.checkpoint, this.checkpointPendingWrites, this.nodes, this.channels, this.managed, this.config, true, {\n            step: this.step,\n            checkpointer: this.checkpointer,\n            manager: this.manager,\n            store: this.store,\n            stream: this.stream,\n        });\n        if (pushed) {\n            if (this.interruptBefore?.length > 0 &&\n                (0,_algo_js__WEBPACK_IMPORTED_MODULE_3__.shouldInterrupt)(this.checkpoint, this.interruptBefore, [pushed])) {\n                this.toInterrupt.push(pushed);\n                return;\n            }\n            this._emit((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.gatherIteratorSync)((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.prefixGenerator)((0,_debug_js__WEBPACK_IMPORTED_MODULE_8__.mapDebugTasks)(this.step, [pushed]), \"debug\")));\n            if (this.debug) {\n                (0,_debug_js__WEBPACK_IMPORTED_MODULE_8__.printStepTasks)(this.step, [pushed]);\n            }\n            this.tasks[pushed.id] = pushed;\n            if (this.skipDoneTasks) {\n                this._matchWrites({ [pushed.id]: pushed });\n            }\n            return pushed;\n        }\n    }\n    _suppressInterrupt(e) {\n        return (0,_errors_js__WEBPACK_IMPORTED_MODULE_6__.isGraphInterrupt)(e) && !this.isNested;\n    }\n    async _first(inputKeys) {\n        /*\n         * Resuming from previous checkpoint requires\n         * - finding a previous checkpoint\n         * - receiving null input (outer graph) or RESUMING flag (subgraph)\n         */\n        const { configurable } = this.config;\n        const isResuming = Object.keys(this.checkpoint.channel_versions).length !== 0 &&\n            (this.config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_RESUMING] !== undefined ||\n                this.input === null ||\n                (0,_constants_js__WEBPACK_IMPORTED_MODULE_2__.isCommand)(this.input));\n        // take resume value from parent\n        const scratchpad = configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_SCRATCHPAD];\n        if (scratchpad && scratchpad.nullResume !== undefined) {\n            this.putWrites(_constants_js__WEBPACK_IMPORTED_MODULE_2__.NULL_TASK_ID, [[_constants_js__WEBPACK_IMPORTED_MODULE_2__.RESUME, scratchpad.nullResume]]);\n        }\n        if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_2__.isCommand)(this.input)) {\n            if (this.input.resume != null && this.checkpointer == null) {\n                throw new Error(\"Cannot use Command(resume=...) without checkpointer\");\n            }\n            const writes = {};\n            // group writes by task id\n            for (const [tid, key, value] of (0,_io_js__WEBPACK_IMPORTED_MODULE_5__.mapCommand)(this.input, this.checkpointPendingWrites)) {\n                if (writes[tid] === undefined) {\n                    writes[tid] = [];\n                }\n                writes[tid].push([key, value]);\n            }\n            if (Object.keys(writes).length === 0) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.EmptyInputError(\"Received empty Command input\");\n            }\n            // save writes\n            for (const [tid, ws] of Object.entries(writes)) {\n                this.putWrites(tid, ws);\n            }\n        }\n        // apply null writes\n        const nullWrites = (this.checkpointPendingWrites ?? [])\n            .filter((w) => w[0] === _constants_js__WEBPACK_IMPORTED_MODULE_2__.NULL_TASK_ID)\n            .map((w) => w.slice(1));\n        if (nullWrites.length > 0) {\n            (0,_algo_js__WEBPACK_IMPORTED_MODULE_3__._applyWrites)(this.checkpoint, this.channels, [\n                {\n                    name: _constants_js__WEBPACK_IMPORTED_MODULE_2__.INPUT,\n                    writes: nullWrites,\n                    triggers: [],\n                },\n            ], this.checkpointerGetNextVersion);\n        }\n        if (isResuming) {\n            for (const channelName of Object.keys(this.channels)) {\n                if (this.checkpoint.channel_versions[channelName] !== undefined) {\n                    const version = this.checkpoint.channel_versions[channelName];\n                    this.checkpoint.versions_seen[_constants_js__WEBPACK_IMPORTED_MODULE_2__.INTERRUPT] = {\n                        ...this.checkpoint.versions_seen[_constants_js__WEBPACK_IMPORTED_MODULE_2__.INTERRUPT],\n                        [channelName]: version,\n                    };\n                }\n            }\n            // produce values output\n            const valuesOutput = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.gatherIterator)((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.prefixGenerator)((0,_io_js__WEBPACK_IMPORTED_MODULE_5__.mapOutputValues)(this.outputKeys, true, this.channels), \"values\"));\n            this._emit(valuesOutput);\n        }\n        else {\n            // map inputs to channel updates\n            const inputWrites = await (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.gatherIterator)((0,_io_js__WEBPACK_IMPORTED_MODULE_5__.mapInput)(inputKeys, this.input));\n            if (inputWrites.length === 0) {\n                throw new _errors_js__WEBPACK_IMPORTED_MODULE_6__.EmptyInputError(`Received no input writes for ${JSON.stringify(inputKeys, null, 2)}`);\n            }\n            const discardTasks = (0,_algo_js__WEBPACK_IMPORTED_MODULE_3__._prepareNextTasks)(this.checkpoint, this.checkpointPendingWrites, this.nodes, this.channels, this.managed, this.config, true, { step: this.step });\n            (0,_algo_js__WEBPACK_IMPORTED_MODULE_3__._applyWrites)(this.checkpoint, this.channels, Object.values(discardTasks).concat([\n                {\n                    name: _constants_js__WEBPACK_IMPORTED_MODULE_2__.INPUT,\n                    writes: inputWrites,\n                    triggers: [],\n                },\n            ]), this.checkpointerGetNextVersion);\n            // save input checkpoint\n            await this._putCheckpoint({\n                source: \"input\",\n                writes: Object.fromEntries(inputWrites),\n            });\n        }\n        // done with input\n        this.input = this.input === INPUT_RESUMING ? INPUT_RESUMING : INPUT_DONE;\n        if (!this.isNested) {\n            this.config = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.patchConfigurable)(this.config, {\n                [_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_RESUMING]: this.input === INPUT_RESUMING,\n            });\n        }\n    }\n    _emit(values) {\n        for (const chunk of values) {\n            if (this.stream.modes.has(chunk[0])) {\n                this.stream.push([this.checkpointNamespace, ...chunk]);\n            }\n        }\n    }\n    async _putCheckpoint(inputMetadata) {\n        // Assign step\n        const metadata = {\n            ...inputMetadata,\n            step: this.step,\n            parents: this.config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_2__.CONFIG_KEY_CHECKPOINT_MAP] ?? {},\n        };\n        // Bail if no checkpointer\n        if (this.checkpointer !== undefined) {\n            // store the previous checkpoint config for debug events\n            this.prevCheckpointConfig = this.checkpointConfig?.configurable\n                ?.checkpoint_id\n                ? this.checkpointConfig\n                : undefined;\n            // create new checkpoint\n            this.checkpointMetadata = metadata;\n            // child graphs keep at most one checkpoint per parent checkpoint\n            // this is achieved by writing child checkpoints as progress is made\n            // (so that error recovery / resuming from interrupt don't lose work)\n            // but doing so always with an id equal to that of the parent checkpoint\n            this.checkpoint = (0,_channels_base_js__WEBPACK_IMPORTED_MODULE_1__.createCheckpoint)(this.checkpoint, this.channels, this.step);\n            this.checkpointConfig = {\n                ...this.checkpointConfig,\n                configurable: {\n                    ...this.checkpointConfig.configurable,\n                    checkpoint_ns: this.config.configurable?.checkpoint_ns ?? \"\",\n                },\n            };\n            const channelVersions = { ...this.checkpoint.channel_versions };\n            const newVersions = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_7__.getNewChannelVersions)(this.checkpointPreviousVersions, channelVersions);\n            this.checkpointPreviousVersions = channelVersions;\n            // save it, without blocking\n            // if there's a previous checkpoint save in progress, wait for it\n            // ensuring checkpointers receive checkpoints in order\n            void this._checkpointerPutAfterPrevious({\n                config: { ...this.checkpointConfig },\n                checkpoint: (0,_langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_0__.copyCheckpoint)(this.checkpoint),\n                metadata: { ...this.checkpointMetadata },\n                newVersions,\n            });\n            this.checkpointConfig = {\n                ...this.checkpointConfig,\n                configurable: {\n                    ...this.checkpointConfig.configurable,\n                    checkpoint_id: this.checkpoint.id,\n                },\n            };\n        }\n        this.step += 1;\n    }\n    _matchWrites(tasks) {\n        for (const [tid, k, v] of this.checkpointPendingWrites) {\n            if (k === _constants_js__WEBPACK_IMPORTED_MODULE_2__.ERROR || k === _constants_js__WEBPACK_IMPORTED_MODULE_2__.INTERRUPT || k === _constants_js__WEBPACK_IMPORTED_MODULE_2__.RESUME) {\n                continue;\n            }\n            const task = Object.values(tasks).find((t) => t.id === tid);\n            if (task) {\n                task.writes.push([k, v]);\n            }\n        }\n        for (const task of Object.values(tasks)) {\n            if (task.writes.length > 0) {\n                this._outputWrites(task.id, task.writes, true);\n            }\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/loop.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/messages.js":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/messages.js ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StreamMessagesHandler: () => (/* binding */ StreamMessagesHandler)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_callbacks_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/callbacks/base */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/callbacks/base.js\");\n/* harmony import */ var _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/messages */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/messages.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n\n\n\nfunction isChatGenerationChunk(x) {\n    return (0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.isBaseMessage)(x?.message);\n}\n/**\n * A callback handler that implements stream_mode=messages.\n * Collects messages from (1) chat model stream events and (2) node outputs.\n */\n// TODO: Make this import and explicitly implement the\n// CallbackHandlerPrefersStreaming interface once we drop support for core 0.2\nclass StreamMessagesHandler extends _langchain_core_callbacks_base__WEBPACK_IMPORTED_MODULE_0__.BaseCallbackHandler {\n    constructor(streamFn) {\n        super();\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"StreamMessagesHandler\"\n        });\n        Object.defineProperty(this, \"streamFn\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"metadatas\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"seen\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"emittedChatModelRunIds\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"stableMessageIdMap\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"lc_prefer_streaming\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.streamFn = streamFn;\n    }\n    _emit(meta, message, runId, dedupe = false) {\n        if (dedupe &&\n            message.id !== undefined &&\n            this.seen[message.id] !== undefined) {\n            return;\n        }\n        // For instance in ChatAnthropic, the first chunk has an message ID\n        // but the subsequent chunks do not. To avoid clients seeing two messages\n        // we rename the message ID if it's being auto-set to `run-${runId}`\n        // (see https://github.com/langchain-ai/langchainjs/pull/6646).\n        let messageId = message.id;\n        if (messageId == null || messageId === `run-${runId}`) {\n            messageId = this.stableMessageIdMap[runId] ?? messageId ?? `run-${runId}`;\n        }\n        this.stableMessageIdMap[runId] ??= messageId;\n        if (messageId !== message.id) {\n            // eslint-disable-next-line no-param-reassign\n            message.id = messageId;\n            // eslint-disable-next-line no-param-reassign\n            message.lc_kwargs.id = messageId;\n        }\n        this.seen[message.id] = message;\n        this.streamFn([meta[0], \"messages\", [message, meta[1]]]);\n    }\n    handleChatModelStart(_llm, _messages, runId, _parentRunId, _extraParams, tags, metadata, name) {\n        if (metadata &&\n            // Include legacy LangGraph SDK tag\n            (!tags || (!tags.includes(_constants_js__WEBPACK_IMPORTED_MODULE_2__.TAG_NOSTREAM) && !tags.includes(\"nostream\")))) {\n            this.metadatas[runId] = [\n                metadata.langgraph_checkpoint_ns.split(\"|\"),\n                { tags, name, ...metadata },\n            ];\n        }\n    }\n    handleLLMNewToken(token, _idx, runId, _parentRunId, _tags, fields) {\n        const chunk = fields?.chunk;\n        this.emittedChatModelRunIds[runId] = true;\n        if (this.metadatas[runId] !== undefined) {\n            if (isChatGenerationChunk(chunk)) {\n                this._emit(this.metadatas[runId], chunk.message, runId);\n            }\n            else {\n                this._emit(this.metadatas[runId], new _langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.AIMessageChunk({ content: token }), runId);\n            }\n        }\n    }\n    handleLLMEnd(output, runId) {\n        // In JS, non-streaming runs do not call handleLLMNewToken at the model level\n        if (!this.emittedChatModelRunIds[runId]) {\n            const chatGeneration = output.generations?.[0]?.[0];\n            if ((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.isBaseMessage)(chatGeneration?.message)) {\n                this._emit(this.metadatas[runId], chatGeneration?.message, runId, true);\n            }\n            delete this.emittedChatModelRunIds[runId];\n        }\n        delete this.metadatas[runId];\n        delete this.stableMessageIdMap[runId];\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    handleLLMError(_err, runId) {\n        delete this.metadatas[runId];\n    }\n    handleChainStart(_chain, _inputs, runId, _parentRunId, tags, metadata, _runType, name) {\n        if (metadata !== undefined &&\n            name === metadata.langgraph_node &&\n            (tags === undefined || !tags.includes(_constants_js__WEBPACK_IMPORTED_MODULE_2__.TAG_HIDDEN))) {\n            this.metadatas[runId] = [\n                metadata.langgraph_checkpoint_ns.split(\"|\"),\n                { tags, name, ...metadata },\n            ];\n        }\n    }\n    handleChainEnd(outputs, runId) {\n        const metadata = this.metadatas[runId];\n        delete this.metadatas[runId];\n        if (metadata !== undefined) {\n            if ((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.isBaseMessage)(outputs)) {\n                this._emit(metadata, outputs, runId, true);\n            }\n            else if (Array.isArray(outputs)) {\n                for (const value of outputs) {\n                    if ((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.isBaseMessage)(value)) {\n                        this._emit(metadata, value, runId, true);\n                    }\n                }\n            }\n            else if (outputs != null && typeof outputs === \"object\") {\n                for (const value of Object.values(outputs)) {\n                    if ((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.isBaseMessage)(value)) {\n                        this._emit(metadata, value, runId, true);\n                    }\n                    else if (Array.isArray(value)) {\n                        for (const item of value) {\n                            if ((0,_langchain_core_messages__WEBPACK_IMPORTED_MODULE_1__.isBaseMessage)(item)) {\n                                this._emit(metadata, item, runId, true);\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    handleChainError(_err, runId) {\n        delete this.metadatas[runId];\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/messages.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/read.js":
/*!***********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/read.js ***!
  \***********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChannelRead: () => (/* binding */ ChannelRead),\n/* harmony export */   PregelNode: () => (/* binding */ PregelNode)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _write_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./write.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/write.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js\");\n\n\n\n\nclass ChannelRead extends _utils_js__WEBPACK_IMPORTED_MODULE_3__.RunnableCallable {\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    constructor(channel, \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    mapper, fresh = false) {\n        super({\n            func: (_, config) => ChannelRead.doRead(config, this.channel, this.fresh, this.mapper),\n        });\n        Object.defineProperty(this, \"lc_graph_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"ChannelRead\"\n        });\n        Object.defineProperty(this, \"channel\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"fresh\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"mapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.fresh = fresh;\n        this.mapper = mapper;\n        this.channel = channel;\n        this.name = Array.isArray(channel)\n            ? `ChannelRead<${channel.join(\",\")}>`\n            : `ChannelRead<${channel}>`;\n    }\n    static doRead(config, channel, fresh, mapper) {\n        const read = config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_1__.CONFIG_KEY_READ];\n        if (!read) {\n            throw new Error(`Runnable ${this} is not configured with a read function. Make sure to call in the context of a Pregel process`);\n        }\n        if (mapper) {\n            return mapper(read(channel, fresh));\n        }\n        else {\n            return read(channel, fresh);\n        }\n    }\n}\nconst defaultRunnableBound = \n/* #__PURE__ */ new _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnablePassthrough();\nclass PregelNode extends _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnableBinding {\n    constructor(fields) {\n        const { channels, triggers, mapper, writers, bound, kwargs, metadata, retryPolicy, tags, subgraphs, ends, } = fields;\n        const mergedTags = [\n            ...(fields.config?.tags ? fields.config.tags : []),\n            ...(tags ?? []),\n        ];\n        super({\n            ...fields,\n            bound: fields.bound ??\n                defaultRunnableBound,\n            config: {\n                ...(fields.config ? fields.config : {}),\n                tags: mergedTags,\n            },\n        });\n        Object.defineProperty(this, \"lc_graph_name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"PregelNode\"\n        });\n        Object.defineProperty(this, \"channels\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"triggers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"mapper\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"writers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"bound\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: defaultRunnableBound\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"kwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"metadata\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: []\n        });\n        Object.defineProperty(this, \"retryPolicy\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"subgraphs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"ends\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.channels = channels;\n        this.triggers = triggers;\n        this.mapper = mapper;\n        this.writers = writers ?? this.writers;\n        this.bound = bound ?? this.bound;\n        this.kwargs = kwargs ?? this.kwargs;\n        this.metadata = metadata ?? this.metadata;\n        this.tags = mergedTags;\n        this.retryPolicy = retryPolicy;\n        this.subgraphs = subgraphs;\n        this.ends = ends;\n    }\n    getWriters() {\n        const newWriters = [...this.writers];\n        while (newWriters.length > 1 &&\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            newWriters[newWriters.length - 1] instanceof _write_js__WEBPACK_IMPORTED_MODULE_2__.ChannelWrite &&\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            newWriters[newWriters.length - 2] instanceof _write_js__WEBPACK_IMPORTED_MODULE_2__.ChannelWrite) {\n            // we can combine writes if they are consecutive\n            // careful to not modify the original writers list or ChannelWrite\n            const endWriters = newWriters.slice(-2);\n            const combinedWrites = endWriters[0].writes.concat(endWriters[1].writes);\n            newWriters[newWriters.length - 2] = new _write_js__WEBPACK_IMPORTED_MODULE_2__.ChannelWrite(combinedWrites, endWriters[0].config?.tags);\n            newWriters.pop();\n        }\n        return newWriters;\n    }\n    getNode() {\n        const writers = this.getWriters();\n        if (this.bound === defaultRunnableBound && writers.length === 0) {\n            return undefined;\n        }\n        else if (this.bound === defaultRunnableBound && writers.length === 1) {\n            return writers[0];\n        }\n        else if (this.bound === defaultRunnableBound) {\n            return new _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnableSequence({\n                first: writers[0],\n                middle: writers.slice(1, writers.length - 1),\n                last: writers[writers.length - 1],\n                omitSequenceTags: true,\n            });\n        }\n        else if (writers.length > 0) {\n            return new _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.RunnableSequence({\n                first: this.bound,\n                middle: writers.slice(0, writers.length - 1),\n                last: writers[writers.length - 1],\n                omitSequenceTags: true,\n            });\n        }\n        else {\n            return this.bound;\n        }\n    }\n    join(channels) {\n        if (!Array.isArray(channels)) {\n            throw new Error(\"channels must be a list\");\n        }\n        if (typeof this.channels !== \"object\") {\n            throw new Error(\"all channels must be named when using .join()\");\n        }\n        return new PregelNode({\n            channels: {\n                ...this.channels,\n                ...Object.fromEntries(channels.map((chan) => [chan, chan])),\n            },\n            triggers: this.triggers,\n            mapper: this.mapper,\n            writers: this.writers,\n            bound: this.bound,\n            kwargs: this.kwargs,\n            config: this.config,\n            retryPolicy: this.retryPolicy,\n        });\n    }\n    pipe(coerceable) {\n        if (_write_js__WEBPACK_IMPORTED_MODULE_2__.ChannelWrite.isWriter(coerceable)) {\n            return new PregelNode({\n                channels: this.channels,\n                triggers: this.triggers,\n                mapper: this.mapper,\n                writers: [...this.writers, coerceable],\n                bound: this.bound,\n                config: this.config,\n                kwargs: this.kwargs,\n                retryPolicy: this.retryPolicy,\n            });\n        }\n        else if (this.bound === defaultRunnableBound) {\n            return new PregelNode({\n                channels: this.channels,\n                triggers: this.triggers,\n                mapper: this.mapper,\n                writers: this.writers,\n                bound: (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__._coerceToRunnable)(coerceable),\n                config: this.config,\n                kwargs: this.kwargs,\n                retryPolicy: this.retryPolicy,\n            });\n        }\n        else {\n            return new PregelNode({\n                channels: this.channels,\n                triggers: this.triggers,\n                mapper: this.mapper,\n                writers: this.writers,\n                bound: this.bound.pipe(coerceable),\n                config: this.config,\n                kwargs: this.kwargs,\n                retryPolicy: this.retryPolicy,\n            });\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/read.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/retry.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/retry.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_BACKOFF_FACTOR: () => (/* binding */ DEFAULT_BACKOFF_FACTOR),\n/* harmony export */   DEFAULT_INITIAL_INTERVAL: () => (/* binding */ DEFAULT_INITIAL_INTERVAL),\n/* harmony export */   DEFAULT_MAX_INTERVAL: () => (/* binding */ DEFAULT_MAX_INTERVAL),\n/* harmony export */   DEFAULT_MAX_RETRIES: () => (/* binding */ DEFAULT_MAX_RETRIES),\n/* harmony export */   _runWithRetry: () => (/* binding */ _runWithRetry)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _utils_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./utils/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/index.js\");\n\n\n\nconst DEFAULT_INITIAL_INTERVAL = 500;\nconst DEFAULT_BACKOFF_FACTOR = 2;\nconst DEFAULT_MAX_INTERVAL = 128000;\nconst DEFAULT_MAX_RETRIES = 3;\nconst DEFAULT_STATUS_NO_RETRY = [\n    400,\n    401,\n    402,\n    403,\n    404,\n    405,\n    406,\n    407,\n    409, // Conflict\n];\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nconst DEFAULT_RETRY_ON_HANDLER = (error) => {\n    if (error.message.startsWith(\"Cancel\") ||\n        error.message.startsWith(\"AbortError\") ||\n        error.name === \"AbortError\") {\n        return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.code === \"ECONNABORTED\") {\n        return false;\n    }\n    const status = \n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error?.response?.status ?? error?.status;\n    if (status && DEFAULT_STATUS_NO_RETRY.includes(+status)) {\n        return false;\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    if (error?.error?.code === \"insufficient_quota\") {\n        return false;\n    }\n    return true;\n};\nasync function _runWithRetry(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\npregelTask, retryPolicy, configurable, signal) {\n    const resolvedRetryPolicy = pregelTask.retry_policy ?? retryPolicy;\n    let interval = resolvedRetryPolicy !== undefined\n        ? resolvedRetryPolicy.initialInterval ?? DEFAULT_INITIAL_INTERVAL\n        : 0;\n    let attempts = 0;\n    let error;\n    let result;\n    let { config } = pregelTask;\n    if (configurable) {\n        config = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.patchConfigurable)(config, configurable);\n    }\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        if (signal?.aborted) {\n            // no need to throw here - we'll throw from the runner, instead.\n            // there's just no point in retrying if the user has requested an abort.\n            break;\n        }\n        // Clear any writes from previous attempts\n        pregelTask.writes.splice(0, pregelTask.writes.length);\n        error = undefined;\n        try {\n            result = await pregelTask.proc.invoke(pregelTask.input, config);\n            break;\n        }\n        catch (e) {\n            error = e;\n            error.pregelTaskId = pregelTask.id;\n            if ((0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.isParentCommand)(error)) {\n                const ns = config?.configurable?.checkpoint_ns;\n                const cmd = error.command;\n                if (cmd.graph === ns) {\n                    // this command is for the current graph, handle it\n                    for (const writer of pregelTask.writers) {\n                        await writer.invoke(cmd, config);\n                    }\n                    break;\n                }\n                else if (cmd.graph === _constants_js__WEBPACK_IMPORTED_MODULE_0__.Command.PARENT) {\n                    // this command is for the parent graph, assign it to the parent\n                    const parent_ns = ns\n                        .split(_constants_js__WEBPACK_IMPORTED_MODULE_0__.CHECKPOINT_NAMESPACE_SEPARATOR)\n                        .slice(0, -1)\n                        .join(_constants_js__WEBPACK_IMPORTED_MODULE_0__.CHECKPOINT_NAMESPACE_SEPARATOR);\n                    error.command = new _constants_js__WEBPACK_IMPORTED_MODULE_0__.Command({\n                        ...error.command,\n                        graph: parent_ns,\n                    });\n                }\n            }\n            if ((0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.isGraphBubbleUp)(error)) {\n                break;\n            }\n            if (resolvedRetryPolicy === undefined) {\n                break;\n            }\n            attempts += 1;\n            // check if we should give up\n            if (attempts >= (resolvedRetryPolicy.maxAttempts ?? DEFAULT_MAX_RETRIES)) {\n                break;\n            }\n            const retryOn = resolvedRetryPolicy.retryOn ?? DEFAULT_RETRY_ON_HANDLER;\n            if (!retryOn(error)) {\n                break;\n            }\n            interval = Math.min(resolvedRetryPolicy.maxInterval ?? DEFAULT_MAX_INTERVAL, interval * (resolvedRetryPolicy.backoffFactor ?? DEFAULT_BACKOFF_FACTOR));\n            const intervalWithJitter = resolvedRetryPolicy.jitter\n                ? Math.floor(interval + Math.random() * 1000)\n                : interval;\n            // sleep before retrying\n            // eslint-disable-next-line no-promise-executor-return\n            await new Promise((resolve) => setTimeout(resolve, intervalWithJitter));\n            // log the retry\n            const errorName = error.name ??\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                error.constructor.unminifiable_name ??\n                error.constructor.name;\n            console.log(`Retrying task \"${String(pregelTask.name)}\" after ${interval.toFixed(2)}ms (attempt ${attempts}) after ${errorName}: ${error}`);\n            // signal subgraphs to resume (if available)\n            config = (0,_utils_index_js__WEBPACK_IMPORTED_MODULE_2__.patchConfigurable)(config, { [_constants_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG_KEY_RESUMING]: true });\n        }\n        finally {\n            // Clear checkpoint_ns seen (for subgraph detection)\n            const checkpointNs = config?.configurable?.checkpoint_ns;\n            if (checkpointNs) {\n                (0,_errors_js__WEBPACK_IMPORTED_MODULE_1__.getSubgraphsSeenSet)().delete(checkpointNs);\n            }\n        }\n    }\n    return {\n        task: pregelTask,\n        result,\n        error: error,\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/retry.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/runner.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/runner.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   PregelRunner: () => (/* binding */ PregelRunner)\n/* harmony export */ });\n/* harmony import */ var _types_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./types.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/types.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _retry_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./retry.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/retry.js\");\n\n\n\n\n/**\n * Responsible for handling task execution on each tick of the {@link PregelLoop}.\n */\nclass PregelRunner {\n    /**\n     * Construct a new PregelRunner, which executes tasks from the provided PregelLoop.\n     * @param loop - The PregelLoop that produces tasks for this runner to execute.\n     */\n    constructor({ loop, nodeFinished, }) {\n        Object.defineProperty(this, \"nodeFinished\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"loop\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.loop = loop;\n        this.nodeFinished = nodeFinished;\n    }\n    /**\n     * Execute tasks from the current step of the PregelLoop.\n     *\n     * Note: this method does NOT call {@link PregelLoop}#tick. That must be handled externally.\n     * @param options - Options for the execution.\n     */\n    async tick(options = {}) {\n        const { timeout, signal, retryPolicy, onStepWrite } = options;\n        let graphInterrupt;\n        // Start task execution\n        const pendingTasks = Object.values(this.loop.tasks).filter((t) => t.writes.length === 0);\n        const taskStream = this._executeTasksWithRetry(pendingTasks, {\n            stepTimeout: timeout,\n            signal,\n            retryPolicy,\n        });\n        for await (const { task, error } of taskStream) {\n            graphInterrupt = this._commit(task, error) ?? graphInterrupt;\n        }\n        onStepWrite?.(this.loop.step, Object.values(this.loop.tasks)\n            .map((task) => task.writes)\n            .flat());\n        if (graphInterrupt) {\n            throw graphInterrupt;\n        }\n    }\n    /**\n     * Concurrently executes tasks with the requested retry policy, yielding a {@link SettledPregelTask} for each task as it completes.\n     * @param tasks - The tasks to execute.\n     * @param options - Options for the execution.\n     */\n    async *_executeTasksWithRetry(tasks, options) {\n        const { stepTimeout, retryPolicy } = options ?? {};\n        let signal = options?.signal;\n        const promiseAddedSymbol = Symbol.for(\"promiseAdded\");\n        let addedPromiseSignal;\n        let addedPromiseWait;\n        function waitHandler(resolve) {\n            addedPromiseSignal = () => {\n                addedPromiseWait = new Promise(waitHandler);\n                resolve(promiseAddedSymbol);\n            };\n        }\n        addedPromiseWait = new Promise(waitHandler);\n        const executingTasksMap = {};\n        const writer = (task, writes, { calls } = {}) => {\n            if (writes.every(([channel]) => channel !== _constants_js__WEBPACK_IMPORTED_MODULE_1__.PUSH)) {\n                return task.config?.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_1__.CONFIG_KEY_SEND]?.(writes) ?? [];\n            }\n            // Schedule PUSH tasks, collect promises\n            const scratchpad = task.config?.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_1__.CONFIG_KEY_SCRATCHPAD];\n            const rtn = {};\n            for (const [idx, write] of writes.entries()) {\n                const [channel] = write;\n                if (channel !== _constants_js__WEBPACK_IMPORTED_MODULE_1__.PUSH) {\n                    continue;\n                }\n                const wcall = calls?.[idx];\n                const cnt = scratchpad.callCounter;\n                scratchpad.callCounter += 1;\n                if (wcall == null) {\n                    throw new Error(\"BUG: No call found\");\n                }\n                const nextTask = this.loop.acceptPush(task, cnt, wcall);\n                if (!nextTask) {\n                    continue;\n                }\n                // Check if this task is already running\n                const existingPromise = executingTasksMap[nextTask.id];\n                if (existingPromise !== undefined) {\n                    // If the parent task was retried, the next task might already be running\n                    rtn[idx] = existingPromise;\n                }\n                else if (nextTask.writes.length > 0) {\n                    // If it already ran, return the result\n                    const returns = nextTask.writes.filter(([c]) => c === _constants_js__WEBPACK_IMPORTED_MODULE_1__.RETURN);\n                    const errors = nextTask.writes.filter(([c]) => c === _constants_js__WEBPACK_IMPORTED_MODULE_1__.ERROR);\n                    if (returns.length > 0) {\n                        // Task completed successfully\n                        if (returns.length === 1) {\n                            rtn[idx] = Promise.resolve(returns[0][1]);\n                        }\n                        else {\n                            // should be unreachable\n                            throw new Error(`BUG: multiple returns found for task ${nextTask.name}__${nextTask.id}`);\n                        }\n                    }\n                    else if (errors.length > 0) {\n                        if (errors.length === 1) {\n                            const errorValue = errors[0][1];\n                            // Task failed\n                            const error = \n                            // eslint-disable-next-line no-instanceof/no-instanceof\n                            errorValue instanceof Error\n                                ? errorValue\n                                : new Error(String(errorValue));\n                            rtn[idx] = Promise.reject(error);\n                        }\n                        else {\n                            // the only way this should happen is if the task executes multiple times and writes aren't cleared\n                            throw new Error(`BUG: multiple errors found for task ${nextTask.name}__${nextTask.id}`);\n                        }\n                    }\n                }\n                else {\n                    // Schedule the next task with retry\n                    const prom = (0,_retry_js__WEBPACK_IMPORTED_MODULE_3__._runWithRetry)(nextTask, retryPolicy, {\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_1__.CONFIG_KEY_SEND]: writer.bind(this, nextTask),\n                        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n                        [_constants_js__WEBPACK_IMPORTED_MODULE_1__.CONFIG_KEY_CALL]: call.bind(this, nextTask),\n                    });\n                    executingTasksMap[nextTask.id] = prom;\n                    addedPromiseSignal();\n                    rtn[idx] = prom.then(({ result, error }) => {\n                        if (error) {\n                            return Promise.reject(error);\n                        }\n                        return result;\n                    });\n                }\n            }\n            return Object.values(rtn);\n        };\n        const call = (task, func, name, input, options = {}) => {\n            const result = writer(task, [[_constants_js__WEBPACK_IMPORTED_MODULE_1__.PUSH, null]], {\n                calls: [\n                    new _types_js__WEBPACK_IMPORTED_MODULE_0__.Call({\n                        func,\n                        name,\n                        input,\n                        retry: options.retry,\n                        callbacks: options.callbacks,\n                    }),\n                ],\n            });\n            // eslint-disable-next-line no-instanceof/no-instanceof\n            if (result !== undefined) {\n                if (result.length === 1) {\n                    return result[0];\n                }\n                return Promise.all(result);\n            }\n            return Promise.resolve();\n        };\n        if (stepTimeout && signal) {\n            if (\"any\" in AbortSignal) {\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\n                signal = AbortSignal.any([\n                    signal,\n                    AbortSignal.timeout(stepTimeout),\n                ]);\n            }\n        }\n        else if (stepTimeout) {\n            signal = AbortSignal.timeout(stepTimeout);\n        }\n        if (signal?.aborted) {\n            // note: don't use throwIfAborted here because it throws a DOMException,\n            // which isn't consistent with how we throw on abort below.\n            throw new Error(\"Abort\");\n        }\n        // Start tasks\n        Object.assign(executingTasksMap, Object.fromEntries(tasks.map((pregelTask) => {\n            return [\n                pregelTask.id,\n                (0,_retry_js__WEBPACK_IMPORTED_MODULE_3__._runWithRetry)(pregelTask, retryPolicy, {\n                    [_constants_js__WEBPACK_IMPORTED_MODULE_1__.CONFIG_KEY_SEND]: writer?.bind(this, pregelTask),\n                    [_constants_js__WEBPACK_IMPORTED_MODULE_1__.CONFIG_KEY_CALL]: call?.bind(this, pregelTask),\n                }).catch((error) => {\n                    return { task: pregelTask, error };\n                }),\n            ];\n        })));\n        let listener;\n        const signalPromise = new Promise((_resolve, reject) => {\n            listener = () => reject(new Error(\"Abort\"));\n            signal?.addEventListener(\"abort\", listener);\n        }).finally(() => signal?.removeEventListener(\"abort\", listener));\n        while (Object.keys(executingTasksMap).length > 0) {\n            const settledTask = await Promise.race([\n                ...Object.values(executingTasksMap),\n                signalPromise,\n                addedPromiseWait,\n            ]);\n            if (settledTask === promiseAddedSymbol) {\n                continue;\n            }\n            yield settledTask;\n            delete executingTasksMap[settledTask.task.id];\n        }\n    }\n    /**\n     * Determines what writes to apply based on whether the task completed successfully, and what type of error occurred.\n     *\n     * Throws an error if the error is a {@link GraphBubbleUp} error and {@link PregelLoop}#isNested is true.\n     *\n     * Note that in the case of a {@link GraphBubbleUp} error that is not a {@link GraphInterrupt}, like a {@link Command}, this method does not apply any writes.\n     *\n     * @param task - The task to commit.\n     * @param error - The error that occurred, if any.\n     * @returns The {@link GraphInterrupt} that occurred, if the user's code threw one.\n     */\n    _commit(task, error) {\n        let graphInterrupt;\n        if (error !== undefined) {\n            if ((0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.isGraphBubbleUp)(error)) {\n                if (this.loop.isNested) {\n                    throw error;\n                }\n                if ((0,_errors_js__WEBPACK_IMPORTED_MODULE_2__.isGraphInterrupt)(error)) {\n                    graphInterrupt = error;\n                    if (error.interrupts.length) {\n                        const interrupts = error.interrupts.map((interrupt) => [_constants_js__WEBPACK_IMPORTED_MODULE_1__.INTERRUPT, interrupt]);\n                        const resumes = task.writes.filter((w) => w[0] === _constants_js__WEBPACK_IMPORTED_MODULE_1__.RESUME);\n                        if (resumes.length) {\n                            interrupts.push(...resumes);\n                        }\n                        this.loop.putWrites(task.id, interrupts);\n                    }\n                }\n            }\n            else {\n                this.loop.putWrites(task.id, [\n                    [_constants_js__WEBPACK_IMPORTED_MODULE_1__.ERROR, { message: error.message, name: error.name }],\n                ]);\n                throw error;\n            }\n        }\n        else {\n            if (this.nodeFinished &&\n                (task.config?.tags == null || !task.config.tags.includes(_constants_js__WEBPACK_IMPORTED_MODULE_1__.TAG_HIDDEN))) {\n                this.nodeFinished(String(task.name));\n            }\n            if (task.writes.length === 0) {\n                // Add no writes marker\n                task.writes.push([_constants_js__WEBPACK_IMPORTED_MODULE_1__.NO_WRITES, null]);\n            }\n            // Save task writes to checkpointer\n            this.loop.putWrites(task.id, task.writes);\n        }\n        return graphInterrupt;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/runner.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/stream.js":
/*!*************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/stream.js ***!
  \*************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   IterableReadableWritableStream: () => (/* binding */ IterableReadableWritableStream)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_utils_stream__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/utils/stream */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/utils/stream.js\");\n\nclass IterableReadableWritableStream extends _langchain_core_utils_stream__WEBPACK_IMPORTED_MODULE_0__.IterableReadableStream {\n    get closed() {\n        return this._closed;\n    }\n    constructor(params) {\n        let streamControllerPromiseResolver;\n        const streamControllerPromise = new Promise((resolve) => {\n            streamControllerPromiseResolver = resolve;\n        });\n        super({\n            start: (controller) => {\n                streamControllerPromiseResolver(controller);\n            },\n        });\n        Object.defineProperty(this, \"modes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"controller\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"passthroughFn\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"_closed\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        // .start() will always be called before the stream can be interacted\n        // with anyway\n        void streamControllerPromise.then((controller) => {\n            this.controller = controller;\n        });\n        this.passthroughFn = params.passthroughFn;\n        this.modes = params.modes;\n    }\n    push(chunk) {\n        this.passthroughFn?.(chunk);\n        this.controller.enqueue(chunk);\n    }\n    close() {\n        try {\n            this.controller.close();\n        }\n        catch (e) {\n            // pass\n        }\n        finally {\n            this._closed = true;\n        }\n    }\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    error(e) {\n        this.controller.error(e);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC9zdHJlYW0uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBc0U7QUFDL0QsNkNBQTZDLGdGQUFzQjtBQUMxRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2IsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL0BsYW5nY2hhaW4rbGFuZ2dyYXBoQDAuMi40Nl9AbGFuZ2NoYWluK2NvcmVAMC4zLjQwX29wZW5haUA0Ljg1LjJfd3NAOC4xOC4wX2J1ZmZlcnV0aWxANC4wLjlfdV9hZWwzNGdkcXMzeGJlY2R3Nzd4aWxzeGVtZS9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9sYW5nZ3JhcGgvZGlzdC9wcmVnZWwvc3RyZWFtLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEl0ZXJhYmxlUmVhZGFibGVTdHJlYW0gfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3V0aWxzL3N0cmVhbVwiO1xuZXhwb3J0IGNsYXNzIEl0ZXJhYmxlUmVhZGFibGVXcml0YWJsZVN0cmVhbSBleHRlbmRzIEl0ZXJhYmxlUmVhZGFibGVTdHJlYW0ge1xuICAgIGdldCBjbG9zZWQoKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9jbG9zZWQ7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKHBhcmFtcykge1xuICAgICAgICBsZXQgc3RyZWFtQ29udHJvbGxlclByb21pc2VSZXNvbHZlcjtcbiAgICAgICAgY29uc3Qgc3RyZWFtQ29udHJvbGxlclByb21pc2UgPSBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICAgICAgc3RyZWFtQ29udHJvbGxlclByb21pc2VSZXNvbHZlciA9IHJlc29sdmU7XG4gICAgICAgIH0pO1xuICAgICAgICBzdXBlcih7XG4gICAgICAgICAgICBzdGFydDogKGNvbnRyb2xsZXIpID0+IHtcbiAgICAgICAgICAgICAgICBzdHJlYW1Db250cm9sbGVyUHJvbWlzZVJlc29sdmVyKGNvbnRyb2xsZXIpO1xuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm1vZGVzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNvbnRyb2xsZXJcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicGFzc3Rocm91Z2hGblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJfY2xvc2VkXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgLy8gLnN0YXJ0KCkgd2lsbCBhbHdheXMgYmUgY2FsbGVkIGJlZm9yZSB0aGUgc3RyZWFtIGNhbiBiZSBpbnRlcmFjdGVkXG4gICAgICAgIC8vIHdpdGggYW55d2F5XG4gICAgICAgIHZvaWQgc3RyZWFtQ29udHJvbGxlclByb21pc2UudGhlbigoY29udHJvbGxlcikgPT4ge1xuICAgICAgICAgICAgdGhpcy5jb250cm9sbGVyID0gY29udHJvbGxlcjtcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMucGFzc3Rocm91Z2hGbiA9IHBhcmFtcy5wYXNzdGhyb3VnaEZuO1xuICAgICAgICB0aGlzLm1vZGVzID0gcGFyYW1zLm1vZGVzO1xuICAgIH1cbiAgICBwdXNoKGNodW5rKSB7XG4gICAgICAgIHRoaXMucGFzc3Rocm91Z2hGbj8uKGNodW5rKTtcbiAgICAgICAgdGhpcy5jb250cm9sbGVyLmVucXVldWUoY2h1bmspO1xuICAgIH1cbiAgICBjbG9zZSgpIHtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHRoaXMuY29udHJvbGxlci5jbG9zZSgpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlKSB7XG4gICAgICAgICAgICAvLyBwYXNzXG4gICAgICAgIH1cbiAgICAgICAgZmluYWxseSB7XG4gICAgICAgICAgICB0aGlzLl9jbG9zZWQgPSB0cnVlO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBAdHlwZXNjcmlwdC1lc2xpbnQvbm8tZXhwbGljaXQtYW55XG4gICAgZXJyb3IoZSkge1xuICAgICAgICB0aGlzLmNvbnRyb2xsZXIuZXJyb3IoZSk7XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/stream.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/types.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/types.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Call: () => (/* binding */ Call),\n/* harmony export */   isCall: () => (/* binding */ isCall)\n/* harmony export */ });\nclass Call {\n    constructor({ func, name, input, retry, callbacks }) {\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"input\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"retry\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"callbacks\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"__lg_type\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"call\"\n        });\n        this.func = func;\n        this.name = name;\n        this.input = input;\n        this.retry = retry;\n        this.callbacks = callbacks;\n    }\n}\nfunction isCall(value) {\n    return (typeof value === \"object\" &&\n        value !== null &&\n        \"__lg_type\" in value &&\n        value.__lg_type === \"call\");\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC90eXBlcy5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFPO0FBQ1Asa0JBQWtCLHFDQUFxQztBQUN2RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL0BsYW5nY2hhaW4rbGFuZ2dyYXBoQDAuMi40Nl9AbGFuZ2NoYWluK2NvcmVAMC4zLjQwX29wZW5haUA0Ljg1LjJfd3NAOC4xOC4wX2J1ZmZlcnV0aWxANC4wLjlfdV9hZWwzNGdkcXMzeGJlY2R3Nzd4aWxzeGVtZS9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9sYW5nZ3JhcGgvZGlzdC9wcmVnZWwvdHlwZXMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIENhbGwge1xuICAgIGNvbnN0cnVjdG9yKHsgZnVuYywgbmFtZSwgaW5wdXQsIHJldHJ5LCBjYWxsYmFja3MgfSkge1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJmdW5jXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaW5wdXRcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicmV0cnlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiY2FsbGJhY2tzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIl9fbGdfdHlwZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJjYWxsXCJcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuZnVuYyA9IGZ1bmM7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuaW5wdXQgPSBpbnB1dDtcbiAgICAgICAgdGhpcy5yZXRyeSA9IHJldHJ5O1xuICAgICAgICB0aGlzLmNhbGxiYWNrcyA9IGNhbGxiYWNrcztcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gaXNDYWxsKHZhbHVlKSB7XG4gICAgcmV0dXJuICh0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCIgJiZcbiAgICAgICAgdmFsdWUgIT09IG51bGwgJiZcbiAgICAgICAgXCJfX2xnX3R5cGVcIiBpbiB2YWx1ZSAmJlxuICAgICAgICB2YWx1ZS5fX2xnX3R5cGUgPT09IFwiY2FsbFwiKTtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/types.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/config.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/config.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ensureLangGraphConfig: () => (/* binding */ ensureLangGraphConfig),\n/* harmony export */   getConfig: () => (/* binding */ getConfig),\n/* harmony export */   getStore: () => (/* binding */ getStore),\n/* harmony export */   getWriter: () => (/* binding */ getWriter)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/singletons */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/singletons.js\");\n\nconst COPIABLE_KEYS = [\"tags\", \"metadata\", \"callbacks\", \"configurable\"];\nconst CONFIG_KEYS = [\n    \"tags\",\n    \"metadata\",\n    \"callbacks\",\n    \"runName\",\n    \"maxConcurrency\",\n    \"recursionLimit\",\n    \"configurable\",\n    \"runId\",\n    \"outputKeys\",\n    \"streamMode\",\n    \"store\",\n    \"writer\",\n    \"interruptBefore\",\n    \"interruptAfter\",\n    \"signal\",\n];\nconst DEFAULT_RECURSION_LIMIT = 25;\nfunction ensureLangGraphConfig(...configs) {\n    const empty = {\n        tags: [],\n        metadata: {},\n        callbacks: undefined,\n        recursionLimit: DEFAULT_RECURSION_LIMIT,\n        configurable: {},\n    };\n    const implicitConfig = _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    if (implicitConfig !== undefined) {\n        for (const [k, v] of Object.entries(implicitConfig)) {\n            if (v !== undefined) {\n                if (COPIABLE_KEYS.includes(k)) {\n                    let copiedValue;\n                    if (Array.isArray(v)) {\n                        copiedValue = [...v];\n                    }\n                    else if (typeof v === \"object\") {\n                        if (k === \"callbacks\" &&\n                            \"copy\" in v &&\n                            typeof v.copy === \"function\") {\n                            copiedValue = v.copy();\n                        }\n                        else {\n                            copiedValue = { ...v };\n                        }\n                    }\n                    else {\n                        copiedValue = v;\n                    }\n                    empty[k] = copiedValue;\n                }\n                else {\n                    empty[k] = v;\n                }\n            }\n        }\n    }\n    for (const config of configs) {\n        if (config === undefined) {\n            continue;\n        }\n        for (const [k, v] of Object.entries(config)) {\n            if (v !== undefined && CONFIG_KEYS.includes(k)) {\n                empty[k] = v;\n            }\n        }\n    }\n    for (const [key, value] of Object.entries(empty.configurable)) {\n        empty.metadata = empty.metadata ?? {};\n        if (!key.startsWith(\"__\") &&\n            (typeof value === \"string\" ||\n                typeof value === \"number\" ||\n                typeof value === \"boolean\") &&\n            !(key in empty.metadata)) {\n            empty.metadata[key] = value;\n        }\n    }\n    return empty;\n}\n/**\n * A helper utility function that returns the {@link BaseStore} that was set when the graph was initialized\n *\n * @returns a reference to the {@link BaseStore} that was set when the graph was initialized\n */\nfunction getStore() {\n    const config = _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    return config?.store;\n}\n/**\n * A helper utility function that returns the {@link LangGraphRunnableConfig#writer} if \"custom\" stream mode is enabled, otherwise undefined\n *\n * @returns a reference to the {@link LangGraphRunnableConfig#writer} if \"custom\" stream mode is enabled, otherwise undefined\n */\nfunction getWriter() {\n    const config = _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorageProviderSingleton.getRunnableConfig();\n    return config?.configurable?.writer;\n}\nfunction getConfig() {\n    return _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorageProviderSingleton.getRunnableConfig();\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC91dGlscy9jb25maWcuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBZ0Y7QUFDaEY7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQSxvQkFBb0I7QUFDcEI7QUFDQTtBQUNBLHdCQUF3QjtBQUN4QjtBQUNBLDJCQUEyQiwwRkFBa0M7QUFDN0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNENBQTRDO0FBQzVDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxpQkFBaUI7QUFDaEU7QUFDQSxnQ0FBZ0MsaUJBQWlCO0FBQ2pEO0FBQ087QUFDUCxtQkFBbUIsMEZBQWtDO0FBQ3JEO0FBQ0E7QUFDQTtBQUNBLCtDQUErQyxzQ0FBc0M7QUFDckY7QUFDQSxnQ0FBZ0Msc0NBQXNDO0FBQ3RFO0FBQ087QUFDUCxtQkFBbUIsMEZBQWtDO0FBQ3JEO0FBQ0E7QUFDTztBQUNQLFdBQVcsMEZBQWtDO0FBQzdDIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC91dGlscy9jb25maWcuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQXN5bmNMb2NhbFN0b3JhZ2VQcm92aWRlclNpbmdsZXRvbiB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvc2luZ2xldG9uc1wiO1xuY29uc3QgQ09QSUFCTEVfS0VZUyA9IFtcInRhZ3NcIiwgXCJtZXRhZGF0YVwiLCBcImNhbGxiYWNrc1wiLCBcImNvbmZpZ3VyYWJsZVwiXTtcbmNvbnN0IENPTkZJR19LRVlTID0gW1xuICAgIFwidGFnc1wiLFxuICAgIFwibWV0YWRhdGFcIixcbiAgICBcImNhbGxiYWNrc1wiLFxuICAgIFwicnVuTmFtZVwiLFxuICAgIFwibWF4Q29uY3VycmVuY3lcIixcbiAgICBcInJlY3Vyc2lvbkxpbWl0XCIsXG4gICAgXCJjb25maWd1cmFibGVcIixcbiAgICBcInJ1bklkXCIsXG4gICAgXCJvdXRwdXRLZXlzXCIsXG4gICAgXCJzdHJlYW1Nb2RlXCIsXG4gICAgXCJzdG9yZVwiLFxuICAgIFwid3JpdGVyXCIsXG4gICAgXCJpbnRlcnJ1cHRCZWZvcmVcIixcbiAgICBcImludGVycnVwdEFmdGVyXCIsXG4gICAgXCJzaWduYWxcIixcbl07XG5jb25zdCBERUZBVUxUX1JFQ1VSU0lPTl9MSU1JVCA9IDI1O1xuZXhwb3J0IGZ1bmN0aW9uIGVuc3VyZUxhbmdHcmFwaENvbmZpZyguLi5jb25maWdzKSB7XG4gICAgY29uc3QgZW1wdHkgPSB7XG4gICAgICAgIHRhZ3M6IFtdLFxuICAgICAgICBtZXRhZGF0YToge30sXG4gICAgICAgIGNhbGxiYWNrczogdW5kZWZpbmVkLFxuICAgICAgICByZWN1cnNpb25MaW1pdDogREVGQVVMVF9SRUNVUlNJT05fTElNSVQsXG4gICAgICAgIGNvbmZpZ3VyYWJsZToge30sXG4gICAgfTtcbiAgICBjb25zdCBpbXBsaWNpdENvbmZpZyA9IEFzeW5jTG9jYWxTdG9yYWdlUHJvdmlkZXJTaW5nbGV0b24uZ2V0UnVubmFibGVDb25maWcoKTtcbiAgICBpZiAoaW1wbGljaXRDb25maWcgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICBmb3IgKGNvbnN0IFtrLCB2XSBvZiBPYmplY3QuZW50cmllcyhpbXBsaWNpdENvbmZpZykpIHtcbiAgICAgICAgICAgIGlmICh2ICE9PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgICAgICBpZiAoQ09QSUFCTEVfS0VZUy5pbmNsdWRlcyhrKSkge1xuICAgICAgICAgICAgICAgICAgICBsZXQgY29waWVkVmFsdWU7XG4gICAgICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHYpKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb3BpZWRWYWx1ZSA9IFsuLi52XTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICBlbHNlIGlmICh0eXBlb2YgdiA9PT0gXCJvYmplY3RcIikge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKGsgPT09IFwiY2FsbGJhY2tzXCIgJiZcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBcImNvcHlcIiBpbiB2ICYmXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIHYuY29weSA9PT0gXCJmdW5jdGlvblwiKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY29waWVkVmFsdWUgPSB2LmNvcHkoKTtcbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGNvcGllZFZhbHVlID0geyAuLi52IH07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjb3BpZWRWYWx1ZSA9IHY7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgZW1wdHlba10gPSBjb3BpZWRWYWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgICAgIGVtcHR5W2tdID0gdjtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBjb25maWcgb2YgY29uZmlncykge1xuICAgICAgICBpZiAoY29uZmlnID09PSB1bmRlZmluZWQpIHtcbiAgICAgICAgICAgIGNvbnRpbnVlO1xuICAgICAgICB9XG4gICAgICAgIGZvciAoY29uc3QgW2ssIHZdIG9mIE9iamVjdC5lbnRyaWVzKGNvbmZpZykpIHtcbiAgICAgICAgICAgIGlmICh2ICE9PSB1bmRlZmluZWQgJiYgQ09ORklHX0tFWVMuaW5jbHVkZXMoaykpIHtcbiAgICAgICAgICAgICAgICBlbXB0eVtrXSA9IHY7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWx1ZV0gb2YgT2JqZWN0LmVudHJpZXMoZW1wdHkuY29uZmlndXJhYmxlKSkge1xuICAgICAgICBlbXB0eS5tZXRhZGF0YSA9IGVtcHR5Lm1ldGFkYXRhID8/IHt9O1xuICAgICAgICBpZiAoIWtleS5zdGFydHNXaXRoKFwiX19cIikgJiZcbiAgICAgICAgICAgICh0eXBlb2YgdmFsdWUgPT09IFwic3RyaW5nXCIgfHxcbiAgICAgICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09IFwibnVtYmVyXCIgfHxcbiAgICAgICAgICAgICAgICB0eXBlb2YgdmFsdWUgPT09IFwiYm9vbGVhblwiKSAmJlxuICAgICAgICAgICAgIShrZXkgaW4gZW1wdHkubWV0YWRhdGEpKSB7XG4gICAgICAgICAgICBlbXB0eS5tZXRhZGF0YVtrZXldID0gdmFsdWU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGVtcHR5O1xufVxuLyoqXG4gKiBBIGhlbHBlciB1dGlsaXR5IGZ1bmN0aW9uIHRoYXQgcmV0dXJucyB0aGUge0BsaW5rIEJhc2VTdG9yZX0gdGhhdCB3YXMgc2V0IHdoZW4gdGhlIGdyYXBoIHdhcyBpbml0aWFsaXplZFxuICpcbiAqIEByZXR1cm5zIGEgcmVmZXJlbmNlIHRvIHRoZSB7QGxpbmsgQmFzZVN0b3JlfSB0aGF0IHdhcyBzZXQgd2hlbiB0aGUgZ3JhcGggd2FzIGluaXRpYWxpemVkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRTdG9yZSgpIHtcbiAgICBjb25zdCBjb25maWcgPSBBc3luY0xvY2FsU3RvcmFnZVByb3ZpZGVyU2luZ2xldG9uLmdldFJ1bm5hYmxlQ29uZmlnKCk7XG4gICAgcmV0dXJuIGNvbmZpZz8uc3RvcmU7XG59XG4vKipcbiAqIEEgaGVscGVyIHV0aWxpdHkgZnVuY3Rpb24gdGhhdCByZXR1cm5zIHRoZSB7QGxpbmsgTGFuZ0dyYXBoUnVubmFibGVDb25maWcjd3JpdGVyfSBpZiBcImN1c3RvbVwiIHN0cmVhbSBtb2RlIGlzIGVuYWJsZWQsIG90aGVyd2lzZSB1bmRlZmluZWRcbiAqXG4gKiBAcmV0dXJucyBhIHJlZmVyZW5jZSB0byB0aGUge0BsaW5rIExhbmdHcmFwaFJ1bm5hYmxlQ29uZmlnI3dyaXRlcn0gaWYgXCJjdXN0b21cIiBzdHJlYW0gbW9kZSBpcyBlbmFibGVkLCBvdGhlcndpc2UgdW5kZWZpbmVkXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBnZXRXcml0ZXIoKSB7XG4gICAgY29uc3QgY29uZmlnID0gQXN5bmNMb2NhbFN0b3JhZ2VQcm92aWRlclNpbmdsZXRvbi5nZXRSdW5uYWJsZUNvbmZpZygpO1xuICAgIHJldHVybiBjb25maWc/LmNvbmZpZ3VyYWJsZT8ud3JpdGVyO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldENvbmZpZygpIHtcbiAgICByZXR1cm4gQXN5bmNMb2NhbFN0b3JhZ2VQcm92aWRlclNpbmdsZXRvbi5nZXRSdW5uYWJsZUNvbmZpZygpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/config.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/index.js":
/*!******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/index.js ***!
  \******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   _coerceToDict: () => (/* binding */ _coerceToDict),\n/* harmony export */   getNewChannelVersions: () => (/* binding */ getNewChannelVersions),\n/* harmony export */   getNullChannelVersion: () => (/* binding */ getNullChannelVersion),\n/* harmony export */   patchCheckpointMap: () => (/* binding */ patchCheckpointMap),\n/* harmony export */   patchConfigurable: () => (/* binding */ patchConfigurable)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n\nfunction getNullChannelVersion(currentVersions) {\n    const versionValues = Object.values(currentVersions);\n    const versionType = versionValues.length > 0 ? typeof versionValues[0] : undefined;\n    let nullVersion;\n    if (versionType === \"number\") {\n        nullVersion = 0;\n    }\n    else if (versionType === \"string\") {\n        nullVersion = \"\";\n    }\n    return nullVersion;\n}\nfunction getNewChannelVersions(previousVersions, currentVersions) {\n    // Get new channel versions\n    if (Object.keys(previousVersions).length > 0) {\n        const nullVersion = getNullChannelVersion(currentVersions);\n        return Object.fromEntries(Object.entries(currentVersions).filter(([k, v]) => v > (previousVersions[k] ?? nullVersion)));\n    }\n    else {\n        return currentVersions;\n    }\n}\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction _coerceToDict(value, defaultKey) {\n    return value &&\n        !Array.isArray(value) &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        !(value instanceof Date) &&\n        typeof value === \"object\"\n        ? value\n        : { [defaultKey]: value };\n}\nfunction patchConfigurable(config, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\npatch) {\n    if (config === null) {\n        return { configurable: patch };\n    }\n    else if (config?.configurable === undefined) {\n        return { ...config, configurable: patch };\n    }\n    else {\n        return {\n            ...config,\n            configurable: { ...config.configurable, ...patch },\n        };\n    }\n}\nfunction patchCheckpointMap(config, metadata) {\n    const parents = metadata?.parents ?? {};\n    if (Object.keys(parents).length > 0) {\n        return patchConfigurable(config, {\n            [_constants_js__WEBPACK_IMPORTED_MODULE_0__.CONFIG_KEY_CHECKPOINT_MAP]: {\n                ...parents,\n                [config.configurable?.checkpoint_ns ?? \"\"]: config.configurable?.checkpoint_id,\n            },\n        });\n    }\n    else {\n        return config;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC91dGlscy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBK0Q7QUFDeEQ7QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsWUFBWTtBQUNaO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxpQkFBaUI7QUFDakI7QUFDQTtBQUNBLGlCQUFpQjtBQUNqQjtBQUNBO0FBQ0E7QUFDQTtBQUNBLDRCQUE0QixrQ0FBa0M7QUFDOUQ7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSxhQUFhLG9FQUF5QjtBQUN0QztBQUNBO0FBQ0EsYUFBYTtBQUNiLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC91dGlscy9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDT05GSUdfS0VZX0NIRUNLUE9JTlRfTUFQIH0gZnJvbSBcIi4uLy4uL2NvbnN0YW50cy5qc1wiO1xuZXhwb3J0IGZ1bmN0aW9uIGdldE51bGxDaGFubmVsVmVyc2lvbihjdXJyZW50VmVyc2lvbnMpIHtcbiAgICBjb25zdCB2ZXJzaW9uVmFsdWVzID0gT2JqZWN0LnZhbHVlcyhjdXJyZW50VmVyc2lvbnMpO1xuICAgIGNvbnN0IHZlcnNpb25UeXBlID0gdmVyc2lvblZhbHVlcy5sZW5ndGggPiAwID8gdHlwZW9mIHZlcnNpb25WYWx1ZXNbMF0gOiB1bmRlZmluZWQ7XG4gICAgbGV0IG51bGxWZXJzaW9uO1xuICAgIGlmICh2ZXJzaW9uVHlwZSA9PT0gXCJudW1iZXJcIikge1xuICAgICAgICBudWxsVmVyc2lvbiA9IDA7XG4gICAgfVxuICAgIGVsc2UgaWYgKHZlcnNpb25UeXBlID09PSBcInN0cmluZ1wiKSB7XG4gICAgICAgIG51bGxWZXJzaW9uID0gXCJcIjtcbiAgICB9XG4gICAgcmV0dXJuIG51bGxWZXJzaW9uO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldE5ld0NoYW5uZWxWZXJzaW9ucyhwcmV2aW91c1ZlcnNpb25zLCBjdXJyZW50VmVyc2lvbnMpIHtcbiAgICAvLyBHZXQgbmV3IGNoYW5uZWwgdmVyc2lvbnNcbiAgICBpZiAoT2JqZWN0LmtleXMocHJldmlvdXNWZXJzaW9ucykubGVuZ3RoID4gMCkge1xuICAgICAgICBjb25zdCBudWxsVmVyc2lvbiA9IGdldE51bGxDaGFubmVsVmVyc2lvbihjdXJyZW50VmVyc2lvbnMpO1xuICAgICAgICByZXR1cm4gT2JqZWN0LmZyb21FbnRyaWVzKE9iamVjdC5lbnRyaWVzKGN1cnJlbnRWZXJzaW9ucykuZmlsdGVyKChbaywgdl0pID0+IHYgPiAocHJldmlvdXNWZXJzaW9uc1trXSA/PyBudWxsVmVyc2lvbikpKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBjdXJyZW50VmVyc2lvbnM7XG4gICAgfVxufVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbmV4cG9ydCBmdW5jdGlvbiBfY29lcmNlVG9EaWN0KHZhbHVlLCBkZWZhdWx0S2V5KSB7XG4gICAgcmV0dXJuIHZhbHVlICYmXG4gICAgICAgICFBcnJheS5pc0FycmF5KHZhbHVlKSAmJlxuICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8taW5zdGFuY2VvZi9uby1pbnN0YW5jZW9mXG4gICAgICAgICEodmFsdWUgaW5zdGFuY2VvZiBEYXRlKSAmJlxuICAgICAgICB0eXBlb2YgdmFsdWUgPT09IFwib2JqZWN0XCJcbiAgICAgICAgPyB2YWx1ZVxuICAgICAgICA6IHsgW2RlZmF1bHRLZXldOiB2YWx1ZSB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIHBhdGNoQ29uZmlndXJhYmxlKGNvbmZpZywgXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxucGF0Y2gpIHtcbiAgICBpZiAoY29uZmlnID09PSBudWxsKSB7XG4gICAgICAgIHJldHVybiB7IGNvbmZpZ3VyYWJsZTogcGF0Y2ggfTtcbiAgICB9XG4gICAgZWxzZSBpZiAoY29uZmlnPy5jb25maWd1cmFibGUgPT09IHVuZGVmaW5lZCkge1xuICAgICAgICByZXR1cm4geyAuLi5jb25maWcsIGNvbmZpZ3VyYWJsZTogcGF0Y2ggfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAuLi5jb25maWcsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHsgLi4uY29uZmlnLmNvbmZpZ3VyYWJsZSwgLi4ucGF0Y2ggfSxcbiAgICAgICAgfTtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gcGF0Y2hDaGVja3BvaW50TWFwKGNvbmZpZywgbWV0YWRhdGEpIHtcbiAgICBjb25zdCBwYXJlbnRzID0gbWV0YWRhdGE/LnBhcmVudHMgPz8ge307XG4gICAgaWYgKE9iamVjdC5rZXlzKHBhcmVudHMpLmxlbmd0aCA+IDApIHtcbiAgICAgICAgcmV0dXJuIHBhdGNoQ29uZmlndXJhYmxlKGNvbmZpZywge1xuICAgICAgICAgICAgW0NPTkZJR19LRVlfQ0hFQ0tQT0lOVF9NQVBdOiB7XG4gICAgICAgICAgICAgICAgLi4ucGFyZW50cyxcbiAgICAgICAgICAgICAgICBbY29uZmlnLmNvbmZpZ3VyYWJsZT8uY2hlY2twb2ludF9ucyA/PyBcIlwiXTogY29uZmlnLmNvbmZpZ3VyYWJsZT8uY2hlY2twb2ludF9pZCxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNvbmZpZztcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/subgraph.js":
/*!*********************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/subgraph.js ***!
  \*********************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   findSubgraphPregel: () => (/* binding */ findSubgraphPregel),\n/* harmony export */   isPregelLike: () => (/* binding */ isPregelLike)\n/* harmony export */ });\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nfunction isRunnableSequence(x) {\n    return \"steps\" in x && Array.isArray(x.steps);\n}\nfunction isPregelLike(\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nx\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    return \"lg_is_pregel\" in x && x.lg_is_pregel === true;\n}\nfunction findSubgraphPregel(candidate\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\n) {\n    const candidates = [candidate];\n    for (const candidate of candidates) {\n        if (isPregelLike(candidate)) {\n            return candidate;\n        }\n        else if (isRunnableSequence(candidate)) {\n            candidates.push(...candidate.steps);\n        }\n    }\n    return undefined;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC91dGlscy9zdWJncmFwaC5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFBO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC91dGlscy9zdWJncmFwaC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxuZnVuY3Rpb24gaXNSdW5uYWJsZVNlcXVlbmNlKHgpIHtcbiAgICByZXR1cm4gXCJzdGVwc1wiIGluIHggJiYgQXJyYXkuaXNBcnJheSh4LnN0ZXBzKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBpc1ByZWdlbExpa2UoXG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgQHR5cGVzY3JpcHQtZXNsaW50L25vLWV4cGxpY2l0LWFueVxueFxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbikge1xuICAgIHJldHVybiBcImxnX2lzX3ByZWdlbFwiIGluIHggJiYgeC5sZ19pc19wcmVnZWwgPT09IHRydWU7XG59XG5leHBvcnQgZnVuY3Rpb24gZmluZFN1YmdyYXBoUHJlZ2VsKGNhbmRpZGF0ZVxuLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIEB0eXBlc2NyaXB0LWVzbGludC9uby1leHBsaWNpdC1hbnlcbikge1xuICAgIGNvbnN0IGNhbmRpZGF0ZXMgPSBbY2FuZGlkYXRlXTtcbiAgICBmb3IgKGNvbnN0IGNhbmRpZGF0ZSBvZiBjYW5kaWRhdGVzKSB7XG4gICAgICAgIGlmIChpc1ByZWdlbExpa2UoY2FuZGlkYXRlKSkge1xuICAgICAgICAgICAgcmV0dXJuIGNhbmRpZGF0ZTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChpc1J1bm5hYmxlU2VxdWVuY2UoY2FuZGlkYXRlKSkge1xuICAgICAgICAgICAgY2FuZGlkYXRlcy5wdXNoKC4uLmNhbmRpZGF0ZS5zdGVwcyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHVuZGVmaW5lZDtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/subgraph.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/validate.js":
/*!***************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/validate.js ***!
  \***************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   GraphValidationError: () => (/* binding */ GraphValidationError),\n/* harmony export */   validateGraph: () => (/* binding */ validateGraph),\n/* harmony export */   validateKeys: () => (/* binding */ validateKeys)\n/* harmony export */ });\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _read_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./read.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/read.js\");\n\n\nclass GraphValidationError extends Error {\n    constructor(message) {\n        super(message);\n        this.name = \"GraphValidationError\";\n    }\n}\nfunction validateGraph({ nodes, channels, inputChannels, outputChannels, streamChannels, interruptAfterNodes, interruptBeforeNodes, }) {\n    if (!channels) {\n        throw new GraphValidationError(\"Channels not provided\");\n    }\n    const subscribedChannels = new Set();\n    const allOutputChannels = new Set();\n    for (const [name, node] of Object.entries(nodes)) {\n        if (name === _constants_js__WEBPACK_IMPORTED_MODULE_0__.INTERRUPT) {\n            throw new GraphValidationError(`\"Node name ${_constants_js__WEBPACK_IMPORTED_MODULE_0__.INTERRUPT} is reserved\"`);\n        }\n        if (node.constructor === _read_js__WEBPACK_IMPORTED_MODULE_1__.PregelNode) {\n            node.triggers.forEach((trigger) => subscribedChannels.add(trigger));\n        }\n        else {\n            throw new GraphValidationError(`Invalid node type ${typeof node}, expected PregelNode`);\n        }\n    }\n    // side effect: update channels\n    for (const chan of subscribedChannels) {\n        if (!(chan in channels)) {\n            throw new GraphValidationError(`Subcribed channel '${String(chan)}' not in channels`);\n        }\n    }\n    if (!Array.isArray(inputChannels)) {\n        if (!subscribedChannels.has(inputChannels)) {\n            throw new GraphValidationError(`Input channel ${String(inputChannels)} is not subscribed to by any node`);\n        }\n    }\n    else {\n        if (inputChannels.every((channel) => !subscribedChannels.has(channel))) {\n            throw new GraphValidationError(`None of the input channels ${inputChannels} are subscribed to by any node`);\n        }\n    }\n    if (!Array.isArray(outputChannels)) {\n        allOutputChannels.add(outputChannels);\n    }\n    else {\n        outputChannels.forEach((chan) => allOutputChannels.add(chan));\n    }\n    if (streamChannels && !Array.isArray(streamChannels)) {\n        allOutputChannels.add(streamChannels);\n    }\n    else if (Array.isArray(streamChannels)) {\n        streamChannels.forEach((chan) => allOutputChannels.add(chan));\n    }\n    for (const chan of allOutputChannels) {\n        if (!(chan in channels)) {\n            throw new GraphValidationError(`Output channel '${String(chan)}' not in channels`);\n        }\n    }\n    // validate interrupt before/after\n    if (interruptAfterNodes && interruptAfterNodes !== \"*\") {\n        for (const node of interruptAfterNodes) {\n            if (!(node in nodes)) {\n                throw new GraphValidationError(`Node ${String(node)} not in nodes`);\n            }\n        }\n    }\n    if (interruptBeforeNodes && interruptBeforeNodes !== \"*\") {\n        for (const node of interruptBeforeNodes) {\n            if (!(node in nodes)) {\n                throw new GraphValidationError(`Node ${String(node)} not in nodes`);\n            }\n        }\n    }\n}\nfunction validateKeys(keys, channels) {\n    if (Array.isArray(keys)) {\n        for (const key of keys) {\n            if (!(key in channels)) {\n                throw new Error(`Key ${String(key)} not found in channels`);\n            }\n        }\n    }\n    else {\n        if (!(keys in channels)) {\n            throw new Error(`Key ${String(keys)} not found in channels`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC92YWxpZGF0ZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUE0QztBQUNMO0FBQ2hDO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHlCQUF5Qiw0R0FBNEc7QUFDNUk7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EscUJBQXFCLG9EQUFTO0FBQzlCLHlEQUF5RCxvREFBUyxFQUFFO0FBQ3BFO0FBQ0EsaUNBQWlDLGdEQUFVO0FBQzNDO0FBQ0E7QUFDQTtBQUNBLGdFQUFnRSxZQUFZO0FBQzVFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxpRUFBaUUsYUFBYTtBQUM5RTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDREQUE0RCx1QkFBdUI7QUFDbkY7QUFDQTtBQUNBO0FBQ0E7QUFDQSx5RUFBeUUsZUFBZTtBQUN4RjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDhEQUE4RCxhQUFhO0FBQzNFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHVEQUF1RCxjQUFjO0FBQ3JFO0FBQ0E7QUFDQTtBQUNBO0FBQ087QUFDUDtBQUNBO0FBQ0E7QUFDQSx1Q0FBdUMsYUFBYTtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUNBQW1DLGNBQWM7QUFDakQ7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3ByZWdlbC92YWxpZGF0ZS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJTlRFUlJVUFQgfSBmcm9tIFwiLi4vY29uc3RhbnRzLmpzXCI7XG5pbXBvcnQgeyBQcmVnZWxOb2RlIH0gZnJvbSBcIi4vcmVhZC5qc1wiO1xuZXhwb3J0IGNsYXNzIEdyYXBoVmFsaWRhdGlvbkVycm9yIGV4dGVuZHMgRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSk7XG4gICAgICAgIHRoaXMubmFtZSA9IFwiR3JhcGhWYWxpZGF0aW9uRXJyb3JcIjtcbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVHcmFwaCh7IG5vZGVzLCBjaGFubmVscywgaW5wdXRDaGFubmVscywgb3V0cHV0Q2hhbm5lbHMsIHN0cmVhbUNoYW5uZWxzLCBpbnRlcnJ1cHRBZnRlck5vZGVzLCBpbnRlcnJ1cHRCZWZvcmVOb2RlcywgfSkge1xuICAgIGlmICghY2hhbm5lbHMpIHtcbiAgICAgICAgdGhyb3cgbmV3IEdyYXBoVmFsaWRhdGlvbkVycm9yKFwiQ2hhbm5lbHMgbm90IHByb3ZpZGVkXCIpO1xuICAgIH1cbiAgICBjb25zdCBzdWJzY3JpYmVkQ2hhbm5lbHMgPSBuZXcgU2V0KCk7XG4gICAgY29uc3QgYWxsT3V0cHV0Q2hhbm5lbHMgPSBuZXcgU2V0KCk7XG4gICAgZm9yIChjb25zdCBbbmFtZSwgbm9kZV0gb2YgT2JqZWN0LmVudHJpZXMobm9kZXMpKSB7XG4gICAgICAgIGlmIChuYW1lID09PSBJTlRFUlJVUFQpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBHcmFwaFZhbGlkYXRpb25FcnJvcihgXCJOb2RlIG5hbWUgJHtJTlRFUlJVUFR9IGlzIHJlc2VydmVkXCJgKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAobm9kZS5jb25zdHJ1Y3RvciA9PT0gUHJlZ2VsTm9kZSkge1xuICAgICAgICAgICAgbm9kZS50cmlnZ2Vycy5mb3JFYWNoKCh0cmlnZ2VyKSA9PiBzdWJzY3JpYmVkQ2hhbm5lbHMuYWRkKHRyaWdnZXIpKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBHcmFwaFZhbGlkYXRpb25FcnJvcihgSW52YWxpZCBub2RlIHR5cGUgJHt0eXBlb2Ygbm9kZX0sIGV4cGVjdGVkIFByZWdlbE5vZGVgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICAvLyBzaWRlIGVmZmVjdDogdXBkYXRlIGNoYW5uZWxzXG4gICAgZm9yIChjb25zdCBjaGFuIG9mIHN1YnNjcmliZWRDaGFubmVscykge1xuICAgICAgICBpZiAoIShjaGFuIGluIGNoYW5uZWxzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEdyYXBoVmFsaWRhdGlvbkVycm9yKGBTdWJjcmliZWQgY2hhbm5lbCAnJHtTdHJpbmcoY2hhbil9JyBub3QgaW4gY2hhbm5lbHNgKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoIUFycmF5LmlzQXJyYXkoaW5wdXRDaGFubmVscykpIHtcbiAgICAgICAgaWYgKCFzdWJzY3JpYmVkQ2hhbm5lbHMuaGFzKGlucHV0Q2hhbm5lbHMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgR3JhcGhWYWxpZGF0aW9uRXJyb3IoYElucHV0IGNoYW5uZWwgJHtTdHJpbmcoaW5wdXRDaGFubmVscyl9IGlzIG5vdCBzdWJzY3JpYmVkIHRvIGJ5IGFueSBub2RlYCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGlmIChpbnB1dENoYW5uZWxzLmV2ZXJ5KChjaGFubmVsKSA9PiAhc3Vic2NyaWJlZENoYW5uZWxzLmhhcyhjaGFubmVsKSkpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBHcmFwaFZhbGlkYXRpb25FcnJvcihgTm9uZSBvZiB0aGUgaW5wdXQgY2hhbm5lbHMgJHtpbnB1dENoYW5uZWxzfSBhcmUgc3Vic2NyaWJlZCB0byBieSBhbnkgbm9kZWApO1xuICAgICAgICB9XG4gICAgfVxuICAgIGlmICghQXJyYXkuaXNBcnJheShvdXRwdXRDaGFubmVscykpIHtcbiAgICAgICAgYWxsT3V0cHV0Q2hhbm5lbHMuYWRkKG91dHB1dENoYW5uZWxzKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG91dHB1dENoYW5uZWxzLmZvckVhY2goKGNoYW4pID0+IGFsbE91dHB1dENoYW5uZWxzLmFkZChjaGFuKSk7XG4gICAgfVxuICAgIGlmIChzdHJlYW1DaGFubmVscyAmJiAhQXJyYXkuaXNBcnJheShzdHJlYW1DaGFubmVscykpIHtcbiAgICAgICAgYWxsT3V0cHV0Q2hhbm5lbHMuYWRkKHN0cmVhbUNoYW5uZWxzKTtcbiAgICB9XG4gICAgZWxzZSBpZiAoQXJyYXkuaXNBcnJheShzdHJlYW1DaGFubmVscykpIHtcbiAgICAgICAgc3RyZWFtQ2hhbm5lbHMuZm9yRWFjaCgoY2hhbikgPT4gYWxsT3V0cHV0Q2hhbm5lbHMuYWRkKGNoYW4pKTtcbiAgICB9XG4gICAgZm9yIChjb25zdCBjaGFuIG9mIGFsbE91dHB1dENoYW5uZWxzKSB7XG4gICAgICAgIGlmICghKGNoYW4gaW4gY2hhbm5lbHMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgR3JhcGhWYWxpZGF0aW9uRXJyb3IoYE91dHB1dCBjaGFubmVsICcke1N0cmluZyhjaGFuKX0nIG5vdCBpbiBjaGFubmVsc2ApO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIHZhbGlkYXRlIGludGVycnVwdCBiZWZvcmUvYWZ0ZXJcbiAgICBpZiAoaW50ZXJydXB0QWZ0ZXJOb2RlcyAmJiBpbnRlcnJ1cHRBZnRlck5vZGVzICE9PSBcIipcIikge1xuICAgICAgICBmb3IgKGNvbnN0IG5vZGUgb2YgaW50ZXJydXB0QWZ0ZXJOb2Rlcykge1xuICAgICAgICAgICAgaWYgKCEobm9kZSBpbiBub2RlcykpIHtcbiAgICAgICAgICAgICAgICB0aHJvdyBuZXcgR3JhcGhWYWxpZGF0aW9uRXJyb3IoYE5vZGUgJHtTdHJpbmcobm9kZSl9IG5vdCBpbiBub2Rlc2ApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGlmIChpbnRlcnJ1cHRCZWZvcmVOb2RlcyAmJiBpbnRlcnJ1cHRCZWZvcmVOb2RlcyAhPT0gXCIqXCIpIHtcbiAgICAgICAgZm9yIChjb25zdCBub2RlIG9mIGludGVycnVwdEJlZm9yZU5vZGVzKSB7XG4gICAgICAgICAgICBpZiAoIShub2RlIGluIG5vZGVzKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBHcmFwaFZhbGlkYXRpb25FcnJvcihgTm9kZSAke1N0cmluZyhub2RlKX0gbm90IGluIG5vZGVzYCk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZnVuY3Rpb24gdmFsaWRhdGVLZXlzKGtleXMsIGNoYW5uZWxzKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoa2V5cykpIHtcbiAgICAgICAgZm9yIChjb25zdCBrZXkgb2Yga2V5cykge1xuICAgICAgICAgICAgaWYgKCEoa2V5IGluIGNoYW5uZWxzKSkge1xuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcihgS2V5ICR7U3RyaW5nKGtleSl9IG5vdCBmb3VuZCBpbiBjaGFubmVsc2ApO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAoIShrZXlzIGluIGNoYW5uZWxzKSkge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKGBLZXkgJHtTdHJpbmcoa2V5cyl9IG5vdCBmb3VuZCBpbiBjaGFubmVsc2ApO1xuICAgICAgICB9XG4gICAgfVxufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/validate.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/write.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/write.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChannelWrite: () => (/* binding */ ChannelWrite),\n/* harmony export */   PASSTHROUGH: () => (/* binding */ PASSTHROUGH),\n/* harmony export */   SKIP_WRITE: () => (/* binding */ SKIP_WRITE)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../utils.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n\n\n\n\nconst SKIP_WRITE = {\n    [Symbol.for(\"LG_SKIP_WRITE\")]: true,\n};\nfunction _isSkipWrite(x) {\n    return (typeof x === \"object\" &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        x?.[Symbol.for(\"LG_SKIP_WRITE\")] !== undefined);\n}\nconst PASSTHROUGH = {\n    [Symbol.for(\"LG_PASSTHROUGH\")]: true,\n};\nfunction _isPassthrough(x) {\n    return (typeof x === \"object\" &&\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        x?.[Symbol.for(\"LG_PASSTHROUGH\")] !== undefined);\n}\nconst IS_WRITER = Symbol(\"IS_WRITER\");\n/**\n * Mapping of write channels to Runnables that return the value to be written,\n * or None to skip writing.\n */\nclass ChannelWrite extends _utils_js__WEBPACK_IMPORTED_MODULE_2__.RunnableCallable {\n    constructor(writes, tags) {\n        const name = `ChannelWrite<${writes\n            .map((packet) => {\n            if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_1__._isSend)(packet)) {\n                return packet.node;\n            }\n            else if (\"channel\" in packet) {\n                return packet.channel;\n            }\n            return \"...\";\n        })\n            .join(\",\")}>`;\n        super({\n            ...{ writes, name, tags },\n            func: async (input, config) => {\n                return this._write(input, config ?? {});\n            },\n        });\n        Object.defineProperty(this, \"writes\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.writes = writes;\n    }\n    async _write(input, config) {\n        const writes = this.writes.map((write) => {\n            if (_isChannelWriteTupleEntry(write) && _isPassthrough(write.value)) {\n                return {\n                    mapper: write.mapper,\n                    value: input,\n                };\n            }\n            else if (_isChannelWriteEntry(write) && _isPassthrough(write.value)) {\n                return {\n                    channel: write.channel,\n                    value: input,\n                    skipNone: write.skipNone,\n                    mapper: write.mapper,\n                };\n            }\n            else {\n                return write;\n            }\n        });\n        await ChannelWrite.doWrite(config, writes);\n        return input;\n    }\n    // TODO: Support requireAtLeastOneOf\n    static async doWrite(config, writes) {\n        // validate\n        for (const w of writes) {\n            if (_isChannelWriteEntry(w)) {\n                if (w.channel === _constants_js__WEBPACK_IMPORTED_MODULE_1__.TASKS) {\n                    throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.InvalidUpdateError(\"Cannot write to the reserved channel TASKS\");\n                }\n                if (_isPassthrough(w.value)) {\n                    throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.InvalidUpdateError(\"PASSTHROUGH value must be replaced\");\n                }\n            }\n            if (_isChannelWriteTupleEntry(w)) {\n                if (_isPassthrough(w.value)) {\n                    throw new _errors_js__WEBPACK_IMPORTED_MODULE_3__.InvalidUpdateError(\"PASSTHROUGH value must be replaced\");\n                }\n            }\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const writeEntries = [];\n        for (const w of writes) {\n            if ((0,_constants_js__WEBPACK_IMPORTED_MODULE_1__._isSend)(w)) {\n                writeEntries.push([_constants_js__WEBPACK_IMPORTED_MODULE_1__.TASKS, w]);\n            }\n            else if (_isChannelWriteTupleEntry(w)) {\n                const mappedResult = await w.mapper.invoke(w.value, config);\n                if (mappedResult != null && mappedResult.length > 0) {\n                    writeEntries.push(...mappedResult);\n                }\n            }\n            else if (_isChannelWriteEntry(w)) {\n                const mappedValue = w.mapper !== undefined\n                    ? await w.mapper.invoke(w.value, config)\n                    : w.value;\n                if (_isSkipWrite(mappedValue)) {\n                    continue;\n                }\n                if (w.skipNone && mappedValue === undefined) {\n                    continue;\n                }\n                writeEntries.push([w.channel, mappedValue]);\n            }\n            else {\n                throw new Error(`Invalid write entry: ${JSON.stringify(w)}`);\n            }\n        }\n        const write = config.configurable?.[_constants_js__WEBPACK_IMPORTED_MODULE_1__.CONFIG_KEY_SEND];\n        write(writeEntries);\n    }\n    static isWriter(runnable) {\n        return (\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        runnable instanceof ChannelWrite ||\n            (IS_WRITER in runnable && !!runnable[IS_WRITER]));\n    }\n    static registerWriter(runnable) {\n        return Object.defineProperty(runnable, IS_WRITER, { value: true });\n    }\n}\nfunction _isChannelWriteEntry(x) {\n    return (x !== undefined && typeof x.channel === \"string\");\n}\nfunction _isChannelWriteTupleEntry(x) {\n    return (x !== undefined &&\n        !_isChannelWriteEntry(x) &&\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.Runnable.isRunnable(x.mapper));\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/write.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/setup/async_local_storage.js":
/*!*************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/setup/async_local_storage.js ***!
  \*************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   initializeAsyncLocalStorageSingleton: () => (/* binding */ initializeAsyncLocalStorageSingleton)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/singletons */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/singletons.js\");\n/* harmony import */ var node_async_hooks__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! node:async_hooks */ \"node:async_hooks\");\n\n\nfunction initializeAsyncLocalStorageSingleton() {\n    _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_0__.AsyncLocalStorageProviderSingleton.initializeGlobalInstance(new node_async_hooks__WEBPACK_IMPORTED_MODULE_1__.AsyncLocalStorage());\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3NldHVwL2FzeW5jX2xvY2FsX3N0b3JhZ2UuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdGO0FBQzNCO0FBQzlDO0FBQ1AsSUFBSSwwRkFBa0MsOEJBQThCLCtEQUFpQjtBQUNyRiIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL0BsYW5nY2hhaW4rbGFuZ2dyYXBoQDAuMi40Nl9AbGFuZ2NoYWluK2NvcmVAMC4zLjQwX29wZW5haUA0Ljg1LjJfd3NAOC4xOC4wX2J1ZmZlcnV0aWxANC4wLjlfdV9hZWwzNGdkcXMzeGJlY2R3Nzd4aWxzeGVtZS9ub2RlX21vZHVsZXMvQGxhbmdjaGFpbi9sYW5nZ3JhcGgvZGlzdC9zZXR1cC9hc3luY19sb2NhbF9zdG9yYWdlLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEFzeW5jTG9jYWxTdG9yYWdlUHJvdmlkZXJTaW5nbGV0b24gfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3NpbmdsZXRvbnNcIjtcbmltcG9ydCB7IEFzeW5jTG9jYWxTdG9yYWdlIH0gZnJvbSBcIm5vZGU6YXN5bmNfaG9va3NcIjtcbmV4cG9ydCBmdW5jdGlvbiBpbml0aWFsaXplQXN5bmNMb2NhbFN0b3JhZ2VTaW5nbGV0b24oKSB7XG4gICAgQXN5bmNMb2NhbFN0b3JhZ2VQcm92aWRlclNpbmdsZXRvbi5pbml0aWFsaXplR2xvYmFsSW5zdGFuY2UobmV3IEFzeW5jTG9jYWxTdG9yYWdlKCkpO1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/setup/async_local_storage.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js ***!
  \*****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RunnableCallable: () => (/* binding */ RunnableCallable),\n/* harmony export */   gatherIterator: () => (/* binding */ gatherIterator),\n/* harmony export */   gatherIteratorSync: () => (/* binding */ gatherIteratorSync),\n/* harmony export */   isAsyncGeneratorFunction: () => (/* binding */ isAsyncGeneratorFunction),\n/* harmony export */   isGeneratorFunction: () => (/* binding */ isGeneratorFunction),\n/* harmony export */   patchConfigurable: () => (/* binding */ patchConfigurable),\n/* harmony export */   prefixGenerator: () => (/* binding */ prefixGenerator)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/singletons */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/singletons.js\");\n/* harmony import */ var _pregel_utils_config_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./pregel/utils/config.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/pregel/utils/config.js\");\n\n\n\nclass RunnableCallable extends _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.Runnable {\n    constructor(fields) {\n        super();\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langgraph\"]\n        });\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        Object.defineProperty(this, \"func\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"tags\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"config\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"trace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"recurse\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        this.name = fields.name ?? fields.func.name;\n        this.func = fields.func;\n        this.config = fields.tags ? { tags: fields.tags } : undefined;\n        this.trace = fields.trace ?? this.trace;\n        this.recurse = fields.recurse ?? this.recurse;\n    }\n    async _tracedInvoke(input, config, runManager) {\n        return new Promise((resolve, reject) => {\n            const childConfig = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.patchConfig)(config, {\n                callbacks: runManager?.getChild(),\n            });\n            void _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_1__.AsyncLocalStorageProviderSingleton.runWithConfig(childConfig, async () => {\n                try {\n                    const output = await this.func(input, childConfig);\n                    resolve(output);\n                }\n                catch (e) {\n                    reject(e);\n                }\n            });\n        });\n    }\n    async invoke(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    input, options\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    ) {\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        let returnValue;\n        const config = (0,_pregel_utils_config_js__WEBPACK_IMPORTED_MODULE_2__.ensureLangGraphConfig)(options);\n        const mergedConfig = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.mergeConfigs)(this.config, config);\n        if (this.trace) {\n            returnValue = await this._callWithConfig(this._tracedInvoke, input, mergedConfig);\n        }\n        else {\n            returnValue = await _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_1__.AsyncLocalStorageProviderSingleton.runWithConfig(mergedConfig, async () => this.func(input, mergedConfig));\n        }\n        if (_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_0__.Runnable.isRunnable(returnValue) && this.recurse) {\n            return await _langchain_core_singletons__WEBPACK_IMPORTED_MODULE_1__.AsyncLocalStorageProviderSingleton.runWithConfig(mergedConfig, async () => returnValue.invoke(input, mergedConfig));\n        }\n        return returnValue;\n    }\n}\nfunction* prefixGenerator(generator, prefix) {\n    if (prefix === undefined) {\n        yield* generator;\n    }\n    else {\n        for (const value of generator) {\n            yield [prefix, value];\n        }\n    }\n}\n// https://github.com/tc39/proposal-array-from-async\nasync function gatherIterator(i) {\n    const out = [];\n    for await (const item of await i) {\n        out.push(item);\n    }\n    return out;\n}\nfunction gatherIteratorSync(i) {\n    const out = [];\n    for (const item of i) {\n        out.push(item);\n    }\n    return out;\n}\nfunction patchConfigurable(config, \n// eslint-disable-next-line @typescript-eslint/no-explicit-any\npatch) {\n    if (!config) {\n        return {\n            configurable: patch,\n        };\n    }\n    else if (!(\"configurable\" in config)) {\n        return {\n            ...config,\n            configurable: patch,\n        };\n    }\n    else {\n        return {\n            ...config,\n            configurable: {\n                ...config.configurable,\n                ...patch,\n            },\n        };\n    }\n}\nfunction isAsyncGeneratorFunction(val) {\n    return (val != null &&\n        typeof val === \"function\" &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        val instanceof Object.getPrototypeOf(async function* () { }).constructor);\n}\nfunction isGeneratorFunction(val) {\n    return (val != null &&\n        typeof val === \"function\" &&\n        // eslint-disable-next-line no-instanceof/no-instanceof\n        val instanceof Object.getPrototypeOf(function* () { }).constructor);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/utils.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/web.js":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/web.js ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Annotation: () => (/* reexport safe */ _graph_index_js__WEBPACK_IMPORTED_MODULE_0__.Annotation),\n/* harmony export */   AsyncBatchedStore: () => (/* reexport safe */ _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_4__.AsyncBatchedStore),\n/* harmony export */   BaseChannel: () => (/* reexport safe */ _channels_index_js__WEBPACK_IMPORTED_MODULE_2__.BaseChannel),\n/* harmony export */   BaseCheckpointSaver: () => (/* reexport safe */ _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_4__.BaseCheckpointSaver),\n/* harmony export */   BaseLangGraphError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.BaseLangGraphError),\n/* harmony export */   BaseStore: () => (/* reexport safe */ _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_4__.BaseStore),\n/* harmony export */   BinaryOperatorAggregate: () => (/* reexport safe */ _channels_index_js__WEBPACK_IMPORTED_MODULE_2__.BinaryOperatorAggregate),\n/* harmony export */   ChannelKeyPlaceholder: () => (/* reexport safe */ _managed_index_js__WEBPACK_IMPORTED_MODULE_5__.ChannelKeyPlaceholder),\n/* harmony export */   Command: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_3__.Command),\n/* harmony export */   CompiledStateGraph: () => (/* reexport safe */ _graph_index_js__WEBPACK_IMPORTED_MODULE_0__.CompiledStateGraph),\n/* harmony export */   END: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_3__.END),\n/* harmony export */   EmptyChannelError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.EmptyChannelError),\n/* harmony export */   EmptyInputError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.EmptyInputError),\n/* harmony export */   Graph: () => (/* reexport safe */ _graph_index_js__WEBPACK_IMPORTED_MODULE_0__.Graph),\n/* harmony export */   GraphBubbleUp: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.GraphBubbleUp),\n/* harmony export */   GraphInterrupt: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.GraphInterrupt),\n/* harmony export */   GraphRecursionError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.GraphRecursionError),\n/* harmony export */   GraphValueError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.GraphValueError),\n/* harmony export */   InMemoryStore: () => (/* reexport safe */ _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_4__.InMemoryStore),\n/* harmony export */   InvalidUpdateError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.InvalidUpdateError),\n/* harmony export */   IsLastStepManager: () => (/* reexport safe */ _managed_index_js__WEBPACK_IMPORTED_MODULE_5__.IsLastStepManager),\n/* harmony export */   ManagedValue: () => (/* reexport safe */ _managed_index_js__WEBPACK_IMPORTED_MODULE_5__.ManagedValue),\n/* harmony export */   ManagedValueMapping: () => (/* reexport safe */ _managed_index_js__WEBPACK_IMPORTED_MODULE_5__.ManagedValueMapping),\n/* harmony export */   MemorySaver: () => (/* reexport safe */ _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_4__.MemorySaver),\n/* harmony export */   MessageGraph: () => (/* reexport safe */ _graph_index_js__WEBPACK_IMPORTED_MODULE_0__.MessageGraph),\n/* harmony export */   MessagesAnnotation: () => (/* reexport safe */ _graph_messages_annotation_js__WEBPACK_IMPORTED_MODULE_7__.MessagesAnnotation),\n/* harmony export */   MultipleSubgraphsError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.MultipleSubgraphsError),\n/* harmony export */   NodeInterrupt: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.NodeInterrupt),\n/* harmony export */   NoopManagedValue: () => (/* reexport safe */ _managed_index_js__WEBPACK_IMPORTED_MODULE_5__.NoopManagedValue),\n/* harmony export */   ParentCommand: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.ParentCommand),\n/* harmony export */   RemoteException: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.RemoteException),\n/* harmony export */   START: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_3__.START),\n/* harmony export */   Send: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_3__.Send),\n/* harmony export */   SharedValue: () => (/* reexport safe */ _managed_index_js__WEBPACK_IMPORTED_MODULE_5__.SharedValue),\n/* harmony export */   StateGraph: () => (/* reexport safe */ _graph_index_js__WEBPACK_IMPORTED_MODULE_0__.StateGraph),\n/* harmony export */   UnreachableNodeError: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.UnreachableNodeError),\n/* harmony export */   WritableManagedValue: () => (/* reexport safe */ _managed_index_js__WEBPACK_IMPORTED_MODULE_5__.WritableManagedValue),\n/* harmony export */   addMessages: () => (/* reexport safe */ _graph_index_js__WEBPACK_IMPORTED_MODULE_0__.messagesStateReducer),\n/* harmony export */   copyCheckpoint: () => (/* reexport safe */ _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_4__.copyCheckpoint),\n/* harmony export */   emptyCheckpoint: () => (/* reexport safe */ _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_4__.emptyCheckpoint),\n/* harmony export */   entrypoint: () => (/* reexport safe */ _func_index_js__WEBPACK_IMPORTED_MODULE_6__.entrypoint),\n/* harmony export */   getSubgraphsSeenSet: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.getSubgraphsSeenSet),\n/* harmony export */   isCommand: () => (/* reexport safe */ _constants_js__WEBPACK_IMPORTED_MODULE_3__.isCommand),\n/* harmony export */   isConfiguredManagedValue: () => (/* reexport safe */ _managed_index_js__WEBPACK_IMPORTED_MODULE_5__.isConfiguredManagedValue),\n/* harmony export */   isGraphBubbleUp: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.isGraphBubbleUp),\n/* harmony export */   isGraphInterrupt: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.isGraphInterrupt),\n/* harmony export */   isManagedValue: () => (/* reexport safe */ _managed_index_js__WEBPACK_IMPORTED_MODULE_5__.isManagedValue),\n/* harmony export */   isParentCommand: () => (/* reexport safe */ _errors_js__WEBPACK_IMPORTED_MODULE_1__.isParentCommand),\n/* harmony export */   messagesStateReducer: () => (/* reexport safe */ _graph_index_js__WEBPACK_IMPORTED_MODULE_0__.messagesStateReducer),\n/* harmony export */   task: () => (/* reexport safe */ _func_index_js__WEBPACK_IMPORTED_MODULE_6__.task)\n/* harmony export */ });\n/* harmony import */ var _graph_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./graph/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/index.js\");\n/* harmony import */ var _errors_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./errors.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/errors.js\");\n/* harmony import */ var _channels_index_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./channels/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/channels/index.js\");\n/* harmony import */ var _constants_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./constants.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/constants.js\");\n/* harmony import */ var _langchain_langgraph_checkpoint__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @langchain/langgraph-checkpoint */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph-checkpoint@0.0.15_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferu_wxyqc73w5wk4lx2cfu5zaddqqi/node_modules/@langchain/langgraph-checkpoint/index.js\");\n/* harmony import */ var _managed_index_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./managed/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/managed/index.js\");\n/* harmony import */ var _func_index_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./func/index.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/func/index.js\");\n/* harmony import */ var _graph_messages_annotation_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./graph/messages_annotation.js */ \"(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/graph/messages_annotation.js\");\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQGxhbmdjaGFpbitsYW5nZ3JhcGhAMC4yLjQ2X0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYnVmZmVydXRpbEA0LjAuOV91X2FlbDM0Z2RxczN4YmVjZHc3N3hpbHN4ZW1lL25vZGVfbW9kdWxlcy9AbGFuZ2NoYWluL2xhbmdncmFwaC9kaXN0L3dlYi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FBQStKO0FBQ25JO0FBQ2dEO0FBQ0w7QUFDMkY7QUFDL0g7QUFDaUI7QUFDZ0IiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9AbGFuZ2NoYWluK2xhbmdncmFwaEAwLjIuNDZfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9idWZmZXJ1dGlsQDQuMC45X3VfYWVsMzRnZHFzM3hiZWNkdzc3eGlsc3hlbWUvbm9kZV9tb2R1bGVzL0BsYW5nY2hhaW4vbGFuZ2dyYXBoL2Rpc3Qvd2ViLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImV4cG9ydCB7IEdyYXBoLCBTdGF0ZUdyYXBoLCBDb21waWxlZFN0YXRlR3JhcGgsIE1lc3NhZ2VHcmFwaCwgbWVzc2FnZXNTdGF0ZVJlZHVjZXIsIG1lc3NhZ2VzU3RhdGVSZWR1Y2VyIGFzIGFkZE1lc3NhZ2VzLCBBbm5vdGF0aW9uLCB9IGZyb20gXCIuL2dyYXBoL2luZGV4LmpzXCI7XG5leHBvcnQgKiBmcm9tIFwiLi9lcnJvcnMuanNcIjtcbmV4cG9ydCB7IEJhc2VDaGFubmVsLCBCaW5hcnlPcGVyYXRvckFnZ3JlZ2F0ZSwgfSBmcm9tIFwiLi9jaGFubmVscy9pbmRleC5qc1wiO1xuZXhwb3J0IHsgU2VuZCwgQ29tbWFuZCwgaXNDb21tYW5kLCBTVEFSVCwgRU5ELCB9IGZyb20gXCIuL2NvbnN0YW50cy5qc1wiO1xuZXhwb3J0IHsgTWVtb3J5U2F2ZXIsIGNvcHlDaGVja3BvaW50LCBlbXB0eUNoZWNrcG9pbnQsIEJhc2VDaGVja3BvaW50U2F2ZXIsIEJhc2VTdG9yZSwgQXN5bmNCYXRjaGVkU3RvcmUsIEluTWVtb3J5U3RvcmUsIH0gZnJvbSBcIkBsYW5nY2hhaW4vbGFuZ2dyYXBoLWNoZWNrcG9pbnRcIjtcbmV4cG9ydCAqIGZyb20gXCIuL21hbmFnZWQvaW5kZXguanNcIjtcbmV4cG9ydCB7IGVudHJ5cG9pbnQsIHRhc2ssIH0gZnJvbSBcIi4vZnVuYy9pbmRleC5qc1wiO1xuZXhwb3J0IHsgTWVzc2FnZXNBbm5vdGF0aW9uIH0gZnJvbSBcIi4vZ3JhcGgvbWVzc2FnZXNfYW5ub3RhdGlvbi5qc1wiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/web.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/index.js":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/index.js ***!
  \************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   Annotation: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Annotation),
/* harmony export */   AsyncBatchedStore: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.AsyncBatchedStore),
/* harmony export */   BaseChannel: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseChannel),
/* harmony export */   BaseCheckpointSaver: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseCheckpointSaver),
/* harmony export */   BaseLangGraphError: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseLangGraphError),
/* harmony export */   BaseStore: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.BaseStore),
/* harmony export */   BinaryOperatorAggregate: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.BinaryOperatorAggregate),
/* harmony export */   ChannelKeyPlaceholder: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.ChannelKeyPlaceholder),
/* harmony export */   Command: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Command),
/* harmony export */   CompiledStateGraph: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.CompiledStateGraph),
/* harmony export */   END: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.END),
/* harmony export */   EmptyChannelError: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.EmptyChannelError),
/* harmony export */   EmptyInputError: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.EmptyInputError),
/* harmony export */   Graph: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Graph),
/* harmony export */   GraphBubbleUp: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.GraphBubbleUp),
/* harmony export */   GraphInterrupt: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.GraphInterrupt),
/* harmony export */   GraphRecursionError: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.GraphRecursionError),
/* harmony export */   GraphValueError: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.GraphValueError),
/* harmony export */   InMemoryStore: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.InMemoryStore),
/* harmony export */   InvalidUpdateError: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.InvalidUpdateError),
/* harmony export */   IsLastStepManager: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.IsLastStepManager),
/* harmony export */   ManagedValue: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.ManagedValue),
/* harmony export */   ManagedValueMapping: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.ManagedValueMapping),
/* harmony export */   MemorySaver: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.MemorySaver),
/* harmony export */   MessageGraph: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.MessageGraph),
/* harmony export */   MessagesAnnotation: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.MessagesAnnotation),
/* harmony export */   MultipleSubgraphsError: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.MultipleSubgraphsError),
/* harmony export */   NodeInterrupt: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.NodeInterrupt),
/* harmony export */   NoopManagedValue: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.NoopManagedValue),
/* harmony export */   ParentCommand: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.ParentCommand),
/* harmony export */   RemoteException: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.RemoteException),
/* harmony export */   START: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.START),
/* harmony export */   Send: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.Send),
/* harmony export */   SharedValue: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.SharedValue),
/* harmony export */   StateGraph: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.StateGraph),
/* harmony export */   UnreachableNodeError: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.UnreachableNodeError),
/* harmony export */   WritableManagedValue: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.WritableManagedValue),
/* harmony export */   addMessages: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.addMessages),
/* harmony export */   copyCheckpoint: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.copyCheckpoint),
/* harmony export */   emptyCheckpoint: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.emptyCheckpoint),
/* harmony export */   entrypoint: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.entrypoint),
/* harmony export */   getPreviousState: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.getPreviousState),
/* harmony export */   getStore: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.getStore),
/* harmony export */   getSubgraphsSeenSet: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.getSubgraphsSeenSet),
/* harmony export */   getWriter: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.getWriter),
/* harmony export */   interrupt: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.interrupt),
/* harmony export */   isCommand: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isCommand),
/* harmony export */   isConfiguredManagedValue: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isConfiguredManagedValue),
/* harmony export */   isGraphBubbleUp: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isGraphBubbleUp),
/* harmony export */   isGraphInterrupt: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isGraphInterrupt),
/* harmony export */   isManagedValue: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isManagedValue),
/* harmony export */   isParentCommand: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.isParentCommand),
/* harmony export */   messagesStateReducer: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.messagesStateReducer),
/* harmony export */   task: () => (/* reexport safe */ _dist_index_js__WEBPACK_IMPORTED_MODULE_0__.task)
/* harmony export */ });
/* harmony import */ var _dist_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/index.js */ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/index.js");


/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/prebuilt.js":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/prebuilt.js ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ToolExecutor: () => (/* reexport safe */ _dist_prebuilt_index_js__WEBPACK_IMPORTED_MODULE_0__.ToolExecutor),
/* harmony export */   ToolNode: () => (/* reexport safe */ _dist_prebuilt_index_js__WEBPACK_IMPORTED_MODULE_0__.ToolNode),
/* harmony export */   createAgentExecutor: () => (/* reexport safe */ _dist_prebuilt_index_js__WEBPACK_IMPORTED_MODULE_0__.createAgentExecutor),
/* harmony export */   createFunctionCallingExecutor: () => (/* reexport safe */ _dist_prebuilt_index_js__WEBPACK_IMPORTED_MODULE_0__.createFunctionCallingExecutor),
/* harmony export */   createReactAgent: () => (/* reexport safe */ _dist_prebuilt_index_js__WEBPACK_IMPORTED_MODULE_0__.createReactAgent),
/* harmony export */   toolsCondition: () => (/* reexport safe */ _dist_prebuilt_index_js__WEBPACK_IMPORTED_MODULE_0__.toolsCondition)
/* harmony export */ });
/* harmony import */ var _dist_prebuilt_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/prebuilt/index.js */ "(rsc)/./node_modules/.pnpm/@langchain+langgraph@0.2.46_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_u_ael34gdqs3xbecdw77xilsxeme/node_modules/@langchain/langgraph/dist/prebuilt/index.js");


/***/ })

};
;