"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu";
exports.ids = ["vendor-chunks/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/api/api_chain.js":
/*!*********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/api/api_chain.js ***!
  \*********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   APIChain: () => (/* binding */ APIChain)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _prompts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./prompts.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/api/prompts.js\");\n\n\n\n/**\n * Class that extends BaseChain and represents a chain specifically\n * designed for making API requests and processing API responses.\n */\nclass APIChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"apiAnswerChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiRequestChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"apiDocs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: {}\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"question\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        this.apiRequestChain = fields.apiRequestChain;\n        this.apiAnswerChain = fields.apiAnswerChain;\n        this.apiDocs = fields.apiDocs;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.headers = fields.headers ?? this.headers;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const question = values[this.inputKey];\n        const api_url = await this.apiRequestChain.predict({ question, api_docs: this.apiDocs }, runManager?.getChild(\"request\"));\n        const res = await fetch(api_url, { headers: this.headers });\n        const api_response = await res.text();\n        const answer = await this.apiAnswerChain.predict({ question, api_docs: this.apiDocs, api_url, api_response }, runManager?.getChild(\"response\"));\n        return { [this.outputKey]: answer };\n    }\n    _chainType() {\n        return \"api_chain\";\n    }\n    static async deserialize(data) {\n        const { api_request_chain, api_answer_chain, api_docs } = data;\n        if (!api_request_chain) {\n            throw new Error(\"LLMChain must have api_request_chain\");\n        }\n        if (!api_answer_chain) {\n            throw new Error(\"LLMChain must have api_answer_chain\");\n        }\n        if (!api_docs) {\n            throw new Error(\"LLMChain must have api_docs\");\n        }\n        return new APIChain({\n            apiAnswerChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain.deserialize(api_answer_chain),\n            apiRequestChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain.deserialize(api_request_chain),\n            apiDocs: api_docs,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            api_answer_chain: this.apiAnswerChain.serialize(),\n            api_request_chain: this.apiRequestChain.serialize(),\n            api_docs: this.apiDocs,\n        };\n    }\n    /**\n     * Static method to create a new APIChain from a BaseLanguageModel and API\n     * documentation.\n     * @param llm BaseLanguageModel instance.\n     * @param apiDocs API documentation.\n     * @param options Optional configuration options for the APIChain.\n     * @returns New APIChain instance.\n     */\n    static fromLLMAndAPIDocs(llm, apiDocs, options = {}) {\n        const { apiUrlPrompt = _prompts_js__WEBPACK_IMPORTED_MODULE_2__.API_URL_PROMPT_TEMPLATE, apiResponsePrompt = _prompts_js__WEBPACK_IMPORTED_MODULE_2__.API_RESPONSE_PROMPT_TEMPLATE, } = options;\n        const apiRequestChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({ prompt: apiUrlPrompt, llm });\n        const apiAnswerChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_1__.LLMChain({ prompt: apiResponsePrompt, llm });\n        return new this({\n            apiAnswerChain,\n            apiRequestChain,\n            apiDocs,\n            ...options,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvYXBpL2FwaV9jaGFpbi5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXVDO0FBQ0k7QUFDMkM7QUFDdEY7QUFDQTtBQUNBO0FBQ0E7QUFDTyx1QkFBdUIsK0NBQVM7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsNkRBQTZELGtDQUFrQztBQUMvRiwyQ0FBMkMsdUJBQXVCO0FBQ2xFO0FBQ0EsMkRBQTJELHlEQUF5RDtBQUNwSCxpQkFBaUI7QUFDakI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGdCQUFnQixnREFBZ0Q7QUFDaEU7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxrQ0FBa0MsbURBQVE7QUFDMUMsbUNBQW1DLG1EQUFRO0FBQzNDO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx1REFBdUQ7QUFDdkQsZ0JBQWdCLGVBQWUsZ0VBQXVCLHNCQUFzQixxRUFBNEIsSUFBSTtBQUM1RyxvQ0FBb0MsbURBQVEsR0FBRywyQkFBMkI7QUFDMUUsbUNBQW1DLG1EQUFRLEdBQUcsZ0NBQWdDO0FBQzlFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTlfQGxhbmdjaGFpbithbnRocm9waWNAMC4zLjEzX0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYl9uNWhtdmQ1d2szZW95d2J0eHRpN3hpdnZ4dS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL2FwaS9hcGlfY2hhaW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQmFzZUNoYWluIH0gZnJvbSBcIi4uL2Jhc2UuanNcIjtcbmltcG9ydCB7IExMTUNoYWluIH0gZnJvbSBcIi4uL2xsbV9jaGFpbi5qc1wiO1xuaW1wb3J0IHsgQVBJX1VSTF9QUk9NUFRfVEVNUExBVEUsIEFQSV9SRVNQT05TRV9QUk9NUFRfVEVNUExBVEUsIH0gZnJvbSBcIi4vcHJvbXB0cy5qc1wiO1xuLyoqXG4gKiBDbGFzcyB0aGF0IGV4dGVuZHMgQmFzZUNoYWluIGFuZCByZXByZXNlbnRzIGEgY2hhaW4gc3BlY2lmaWNhbGx5XG4gKiBkZXNpZ25lZCBmb3IgbWFraW5nIEFQSSByZXF1ZXN0cyBhbmQgcHJvY2Vzc2luZyBBUEkgcmVzcG9uc2VzLlxuICovXG5leHBvcnQgY2xhc3MgQVBJQ2hhaW4gZXh0ZW5kcyBCYXNlQ2hhaW4ge1xuICAgIGdldCBpbnB1dEtleXMoKSB7XG4gICAgICAgIHJldHVybiBbdGhpcy5pbnB1dEtleV07XG4gICAgfVxuICAgIGdldCBvdXRwdXRLZXlzKCkge1xuICAgICAgICByZXR1cm4gW3RoaXMub3V0cHV0S2V5XTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKGZpZWxkcyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImFwaUFuc3dlckNoYWluXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImFwaVJlcXVlc3RDaGFpblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJhcGlEb2NzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImhlYWRlcnNcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHt9XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbnB1dEtleVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJxdWVzdGlvblwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJvdXRwdXRLZXlcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFwib3V0cHV0XCJcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuYXBpUmVxdWVzdENoYWluID0gZmllbGRzLmFwaVJlcXVlc3RDaGFpbjtcbiAgICAgICAgdGhpcy5hcGlBbnN3ZXJDaGFpbiA9IGZpZWxkcy5hcGlBbnN3ZXJDaGFpbjtcbiAgICAgICAgdGhpcy5hcGlEb2NzID0gZmllbGRzLmFwaURvY3M7XG4gICAgICAgIHRoaXMuaW5wdXRLZXkgPSBmaWVsZHMuaW5wdXRLZXkgPz8gdGhpcy5pbnB1dEtleTtcbiAgICAgICAgdGhpcy5vdXRwdXRLZXkgPSBmaWVsZHMub3V0cHV0S2V5ID8/IHRoaXMub3V0cHV0S2V5O1xuICAgICAgICB0aGlzLmhlYWRlcnMgPSBmaWVsZHMuaGVhZGVycyA/PyB0aGlzLmhlYWRlcnM7XG4gICAgfVxuICAgIC8qKiBAaWdub3JlICovXG4gICAgYXN5bmMgX2NhbGwodmFsdWVzLCBydW5NYW5hZ2VyKSB7XG4gICAgICAgIGNvbnN0IHF1ZXN0aW9uID0gdmFsdWVzW3RoaXMuaW5wdXRLZXldO1xuICAgICAgICBjb25zdCBhcGlfdXJsID0gYXdhaXQgdGhpcy5hcGlSZXF1ZXN0Q2hhaW4ucHJlZGljdCh7IHF1ZXN0aW9uLCBhcGlfZG9jczogdGhpcy5hcGlEb2NzIH0sIHJ1bk1hbmFnZXI/LmdldENoaWxkKFwicmVxdWVzdFwiKSk7XG4gICAgICAgIGNvbnN0IHJlcyA9IGF3YWl0IGZldGNoKGFwaV91cmwsIHsgaGVhZGVyczogdGhpcy5oZWFkZXJzIH0pO1xuICAgICAgICBjb25zdCBhcGlfcmVzcG9uc2UgPSBhd2FpdCByZXMudGV4dCgpO1xuICAgICAgICBjb25zdCBhbnN3ZXIgPSBhd2FpdCB0aGlzLmFwaUFuc3dlckNoYWluLnByZWRpY3QoeyBxdWVzdGlvbiwgYXBpX2RvY3M6IHRoaXMuYXBpRG9jcywgYXBpX3VybCwgYXBpX3Jlc3BvbnNlIH0sIHJ1bk1hbmFnZXI/LmdldENoaWxkKFwicmVzcG9uc2VcIikpO1xuICAgICAgICByZXR1cm4geyBbdGhpcy5vdXRwdXRLZXldOiBhbnN3ZXIgfTtcbiAgICB9XG4gICAgX2NoYWluVHlwZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiYXBpX2NoYWluXCI7XG4gICAgfVxuICAgIHN0YXRpYyBhc3luYyBkZXNlcmlhbGl6ZShkYXRhKSB7XG4gICAgICAgIGNvbnN0IHsgYXBpX3JlcXVlc3RfY2hhaW4sIGFwaV9hbnN3ZXJfY2hhaW4sIGFwaV9kb2NzIH0gPSBkYXRhO1xuICAgICAgICBpZiAoIWFwaV9yZXF1ZXN0X2NoYWluKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMTE1DaGFpbiBtdXN0IGhhdmUgYXBpX3JlcXVlc3RfY2hhaW5cIik7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKCFhcGlfYW5zd2VyX2NoYWluKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMTE1DaGFpbiBtdXN0IGhhdmUgYXBpX2Fuc3dlcl9jaGFpblwiKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoIWFwaV9kb2NzKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoXCJMTE1DaGFpbiBtdXN0IGhhdmUgYXBpX2RvY3NcIik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBBUElDaGFpbih7XG4gICAgICAgICAgICBhcGlBbnN3ZXJDaGFpbjogYXdhaXQgTExNQ2hhaW4uZGVzZXJpYWxpemUoYXBpX2Fuc3dlcl9jaGFpbiksXG4gICAgICAgICAgICBhcGlSZXF1ZXN0Q2hhaW46IGF3YWl0IExMTUNoYWluLmRlc2VyaWFsaXplKGFwaV9yZXF1ZXN0X2NoYWluKSxcbiAgICAgICAgICAgIGFwaURvY3M6IGFwaV9kb2NzLFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgc2VyaWFsaXplKCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgX3R5cGU6IHRoaXMuX2NoYWluVHlwZSgpLFxuICAgICAgICAgICAgYXBpX2Fuc3dlcl9jaGFpbjogdGhpcy5hcGlBbnN3ZXJDaGFpbi5zZXJpYWxpemUoKSxcbiAgICAgICAgICAgIGFwaV9yZXF1ZXN0X2NoYWluOiB0aGlzLmFwaVJlcXVlc3RDaGFpbi5zZXJpYWxpemUoKSxcbiAgICAgICAgICAgIGFwaV9kb2NzOiB0aGlzLmFwaURvY3MsXG4gICAgICAgIH07XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFN0YXRpYyBtZXRob2QgdG8gY3JlYXRlIGEgbmV3IEFQSUNoYWluIGZyb20gYSBCYXNlTGFuZ3VhZ2VNb2RlbCBhbmQgQVBJXG4gICAgICogZG9jdW1lbnRhdGlvbi5cbiAgICAgKiBAcGFyYW0gbGxtIEJhc2VMYW5ndWFnZU1vZGVsIGluc3RhbmNlLlxuICAgICAqIEBwYXJhbSBhcGlEb2NzIEFQSSBkb2N1bWVudGF0aW9uLlxuICAgICAqIEBwYXJhbSBvcHRpb25zIE9wdGlvbmFsIGNvbmZpZ3VyYXRpb24gb3B0aW9ucyBmb3IgdGhlIEFQSUNoYWluLlxuICAgICAqIEByZXR1cm5zIE5ldyBBUElDaGFpbiBpbnN0YW5jZS5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbUxMTUFuZEFQSURvY3MobGxtLCBhcGlEb2NzLCBvcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3QgeyBhcGlVcmxQcm9tcHQgPSBBUElfVVJMX1BST01QVF9URU1QTEFURSwgYXBpUmVzcG9uc2VQcm9tcHQgPSBBUElfUkVTUE9OU0VfUFJPTVBUX1RFTVBMQVRFLCB9ID0gb3B0aW9ucztcbiAgICAgICAgY29uc3QgYXBpUmVxdWVzdENoYWluID0gbmV3IExMTUNoYWluKHsgcHJvbXB0OiBhcGlVcmxQcm9tcHQsIGxsbSB9KTtcbiAgICAgICAgY29uc3QgYXBpQW5zd2VyQ2hhaW4gPSBuZXcgTExNQ2hhaW4oeyBwcm9tcHQ6IGFwaVJlc3BvbnNlUHJvbXB0LCBsbG0gfSk7XG4gICAgICAgIHJldHVybiBuZXcgdGhpcyh7XG4gICAgICAgICAgICBhcGlBbnN3ZXJDaGFpbixcbiAgICAgICAgICAgIGFwaVJlcXVlc3RDaGFpbixcbiAgICAgICAgICAgIGFwaURvY3MsXG4gICAgICAgICAgICAuLi5vcHRpb25zLFxuICAgICAgICB9KTtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/api/api_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/api/prompts.js":
/*!*******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/api/prompts.js ***!
  \*******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   API_RESPONSE_PROMPT_TEMPLATE: () => (/* binding */ API_RESPONSE_PROMPT_TEMPLATE),\n/* harmony export */   API_RESPONSE_RAW_PROMPT_TEMPLATE: () => (/* binding */ API_RESPONSE_RAW_PROMPT_TEMPLATE),\n/* harmony export */   API_URL_PROMPT_TEMPLATE: () => (/* binding */ API_URL_PROMPT_TEMPLATE),\n/* harmony export */   API_URL_RAW_PROMPT_TEMPLATE: () => (/* binding */ API_URL_RAW_PROMPT_TEMPLATE)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/prompts.js\");\n/* eslint-disable spaced-comment */\n\nconst API_URL_RAW_PROMPT_TEMPLATE = `You are given the below API Documentation:\n{api_docs}\nUsing this documentation, generate the full API url to call for answering the user question.\nYou should build the API url in order to get a response that is as short as possible, while still getting the necessary information to answer the question. Pay attention to deliberately exclude any unnecessary pieces of data in the API call.\n\nQuestion:{question}\nAPI url:`;\nconst API_URL_PROMPT_TEMPLATE = /* #__PURE__ */ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"api_docs\", \"question\"],\n    template: API_URL_RAW_PROMPT_TEMPLATE,\n});\nconst API_RESPONSE_RAW_PROMPT_TEMPLATE = `${API_URL_RAW_PROMPT_TEMPLATE} {api_url}\n\nHere is the response from the API:\n\n{api_response}\n\nSummarize this response to answer the original question.\n\nSummary:`;\nconst API_RESPONSE_PROMPT_TEMPLATE = /* #__PURE__ */ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"api_docs\", \"question\", \"api_url\", \"api_response\"],\n    template: API_RESPONSE_RAW_PROMPT_TEMPLATE,\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvYXBpL3Byb21wdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7QUFBQTtBQUN5RDtBQUNsRDtBQUNQLENBQUM7QUFDRDtBQUNBOztBQUVBLFVBQVU7QUFDVjtBQUNPLG9EQUFvRCxtRUFBYztBQUN6RTtBQUNBO0FBQ0EsQ0FBQztBQUNNLDRDQUE0Qyw4QkFBOEI7O0FBRWpGOztBQUVBLENBQUM7O0FBRUQ7O0FBRUE7QUFDTyx5REFBeUQsbUVBQWM7QUFDOUU7QUFDQTtBQUNBLENBQUMiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjE5X0BsYW5nY2hhaW4rYW50aHJvcGljQDAuMy4xM19AbGFuZ2NoYWluK2NvcmVAMC4zLjQwX29wZW5haUA0Ljg1LjJfd3NAOC4xOC4wX2JfbjVobXZkNXdrM2VveXdidHh0aTd4aXZ2eHUvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L2NoYWlucy9hcGkvcHJvbXB0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBzcGFjZWQtY29tbWVudCAqL1xuaW1wb3J0IHsgUHJvbXB0VGVtcGxhdGUgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Byb21wdHNcIjtcbmV4cG9ydCBjb25zdCBBUElfVVJMX1JBV19QUk9NUFRfVEVNUExBVEUgPSBgWW91IGFyZSBnaXZlbiB0aGUgYmVsb3cgQVBJIERvY3VtZW50YXRpb246XG57YXBpX2RvY3N9XG5Vc2luZyB0aGlzIGRvY3VtZW50YXRpb24sIGdlbmVyYXRlIHRoZSBmdWxsIEFQSSB1cmwgdG8gY2FsbCBmb3IgYW5zd2VyaW5nIHRoZSB1c2VyIHF1ZXN0aW9uLlxuWW91IHNob3VsZCBidWlsZCB0aGUgQVBJIHVybCBpbiBvcmRlciB0byBnZXQgYSByZXNwb25zZSB0aGF0IGlzIGFzIHNob3J0IGFzIHBvc3NpYmxlLCB3aGlsZSBzdGlsbCBnZXR0aW5nIHRoZSBuZWNlc3NhcnkgaW5mb3JtYXRpb24gdG8gYW5zd2VyIHRoZSBxdWVzdGlvbi4gUGF5IGF0dGVudGlvbiB0byBkZWxpYmVyYXRlbHkgZXhjbHVkZSBhbnkgdW5uZWNlc3NhcnkgcGllY2VzIG9mIGRhdGEgaW4gdGhlIEFQSSBjYWxsLlxuXG5RdWVzdGlvbjp7cXVlc3Rpb259XG5BUEkgdXJsOmA7XG5leHBvcnQgY29uc3QgQVBJX1VSTF9QUk9NUFRfVEVNUExBVEUgPSAvKiAjX19QVVJFX18gKi8gbmV3IFByb21wdFRlbXBsYXRlKHtcbiAgICBpbnB1dFZhcmlhYmxlczogW1wiYXBpX2RvY3NcIiwgXCJxdWVzdGlvblwiXSxcbiAgICB0ZW1wbGF0ZTogQVBJX1VSTF9SQVdfUFJPTVBUX1RFTVBMQVRFLFxufSk7XG5leHBvcnQgY29uc3QgQVBJX1JFU1BPTlNFX1JBV19QUk9NUFRfVEVNUExBVEUgPSBgJHtBUElfVVJMX1JBV19QUk9NUFRfVEVNUExBVEV9IHthcGlfdXJsfVxuXG5IZXJlIGlzIHRoZSByZXNwb25zZSBmcm9tIHRoZSBBUEk6XG5cbnthcGlfcmVzcG9uc2V9XG5cblN1bW1hcml6ZSB0aGlzIHJlc3BvbnNlIHRvIGFuc3dlciB0aGUgb3JpZ2luYWwgcXVlc3Rpb24uXG5cblN1bW1hcnk6YDtcbmV4cG9ydCBjb25zdCBBUElfUkVTUE9OU0VfUFJPTVBUX1RFTVBMQVRFID0gLyogI19fUFVSRV9fICovIG5ldyBQcm9tcHRUZW1wbGF0ZSh7XG4gICAgaW5wdXRWYXJpYWJsZXM6IFtcImFwaV9kb2NzXCIsIFwicXVlc3Rpb25cIiwgXCJhcGlfdXJsXCIsIFwiYXBpX3Jlc3BvbnNlXCJdLFxuICAgIHRlbXBsYXRlOiBBUElfUkVTUE9OU0VfUkFXX1BST01QVF9URU1QTEFURSxcbn0pO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/api/prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/base.js":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/base.js ***!
  \************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   BaseChain: () => (/* binding */ BaseChain)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_outputs__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/outputs */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/outputs.js\");\n/* harmony import */ var _langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/callbacks/manager */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/callbacks/manager.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @langchain/core/language_models/base */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/language_models/base.js\");\n\n\n\n\n/**\n * Base interface that all chains must implement.\n */\nclass BaseChain extends _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_3__.BaseLangChain {\n    get lc_namespace() {\n        return [\"langchain\", \"chains\", this._chainType()];\n    }\n    constructor(fields, \n    /** @deprecated */\n    verbose, \n    /** @deprecated */\n    callbacks) {\n        if (arguments.length === 1 &&\n            typeof fields === \"object\" &&\n            !(\"saveContext\" in fields)) {\n            // fields is not a BaseMemory\n            const { memory, callbackManager, ...rest } = fields;\n            super({ ...rest, callbacks: callbackManager ?? rest.callbacks });\n            this.memory = memory;\n        }\n        else {\n            // fields is a BaseMemory\n            super({ verbose, callbacks });\n            this.memory = fields;\n        }\n    }\n    /** @ignore */\n    _selectMemoryInputs(values) {\n        const valuesForMemory = { ...values };\n        if (\"signal\" in valuesForMemory) {\n            delete valuesForMemory.signal;\n        }\n        if (\"timeout\" in valuesForMemory) {\n            delete valuesForMemory.timeout;\n        }\n        return valuesForMemory;\n    }\n    /**\n     * Invoke the chain with the provided input and returns the output.\n     * @param input Input values for the chain run.\n     * @param config Optional configuration for the Runnable.\n     * @returns Promise that resolves with the output of the chain run.\n     */\n    async invoke(input, options) {\n        const config = (0,_langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.ensureConfig)(options);\n        const fullValues = await this._formatValues(input);\n        const callbackManager_ = await _langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_1__.CallbackManager.configure(config?.callbacks, this.callbacks, config?.tags, this.tags, config?.metadata, this.metadata, { verbose: this.verbose });\n        const runManager = await callbackManager_?.handleChainStart(this.toJSON(), fullValues, undefined, undefined, undefined, undefined, config?.runName);\n        let outputValues;\n        try {\n            outputValues = await (fullValues.signal\n                ? Promise.race([\n                    this._call(fullValues, runManager, config),\n                    new Promise((_, reject) => {\n                        fullValues.signal?.addEventListener(\"abort\", () => {\n                            reject(new Error(\"AbortError\"));\n                        });\n                    }),\n                ])\n                : this._call(fullValues, runManager, config));\n        }\n        catch (e) {\n            await runManager?.handleChainError(e);\n            throw e;\n        }\n        if (!(this.memory == null)) {\n            await this.memory.saveContext(this._selectMemoryInputs(input), outputValues);\n        }\n        await runManager?.handleChainEnd(outputValues);\n        // add the runManager's currentRunId to the outputValues\n        Object.defineProperty(outputValues, _langchain_core_outputs__WEBPACK_IMPORTED_MODULE_0__.RUN_KEY, {\n            value: runManager ? { runId: runManager?.runId } : undefined,\n            configurable: true,\n        });\n        return outputValues;\n    }\n    _validateOutputs(outputs) {\n        const missingKeys = this.outputKeys.filter((k) => !(k in outputs));\n        if (missingKeys.length) {\n            throw new Error(`Missing output keys: ${missingKeys.join(\", \")} from chain ${this._chainType()}`);\n        }\n    }\n    async prepOutputs(inputs, outputs, returnOnlyOutputs = false) {\n        this._validateOutputs(outputs);\n        if (this.memory) {\n            await this.memory.saveContext(inputs, outputs);\n        }\n        if (returnOnlyOutputs) {\n            return outputs;\n        }\n        return { ...inputs, ...outputs };\n    }\n    /**\n     * Return a json-like object representing this chain.\n     */\n    serialize() {\n        throw new Error(\"Method not implemented.\");\n    }\n    /** @deprecated Use .invoke() instead. Will be removed in 0.2.0. */\n    async run(\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    input, config) {\n        const inputKeys = this.inputKeys.filter((k) => !this.memory?.memoryKeys.includes(k) ?? true);\n        const isKeylessInput = inputKeys.length <= 1;\n        if (!isKeylessInput) {\n            throw new Error(`Chain ${this._chainType()} expects multiple inputs, cannot use 'run' `);\n        }\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        const values = inputKeys.length ? { [inputKeys[0]]: input } : {};\n        const returnValues = await this.call(values, config);\n        const keys = Object.keys(returnValues);\n        if (keys.length === 1) {\n            return returnValues[keys[0]];\n        }\n        throw new Error(\"return values have multiple keys, `run` only supported when one key currently\");\n    }\n    async _formatValues(values) {\n        const fullValues = { ...values };\n        if (fullValues.timeout && !fullValues.signal) {\n            fullValues.signal = AbortSignal.timeout(fullValues.timeout);\n            delete fullValues.timeout;\n        }\n        if (!(this.memory == null)) {\n            const newValues = await this.memory.loadMemoryVariables(this._selectMemoryInputs(values));\n            for (const [key, value] of Object.entries(newValues)) {\n                fullValues[key] = value;\n            }\n        }\n        return fullValues;\n    }\n    /**\n     * @deprecated Use .invoke() instead. Will be removed in 0.2.0.\n     *\n     * Run the core logic of this chain and add to output if desired.\n     *\n     * Wraps _call and handles memory.\n     */\n    async call(values, config, \n    /** @deprecated */\n    tags) {\n        const parsedConfig = { tags, ...(0,_langchain_core_callbacks_manager__WEBPACK_IMPORTED_MODULE_1__.parseCallbackConfigArg)(config) };\n        return this.invoke(values, parsedConfig);\n    }\n    /**\n     * @deprecated Use .batch() instead. Will be removed in 0.2.0.\n     *\n     * Call the chain on all inputs in the list\n     */\n    async apply(inputs, config) {\n        return Promise.all(inputs.map(async (i, idx) => this.call(i, config?.[idx])));\n    }\n    /**\n     * Load a chain from a json-like object describing it.\n     */\n    static async deserialize(data, values = {}) {\n        switch (data._type) {\n            case \"llm_chain\": {\n                const { LLMChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/llm_chain.js\"));\n                return LLMChain.deserialize(data);\n            }\n            case \"sequential_chain\": {\n                const { SequentialChain } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu\").then(__webpack_require__.bind(__webpack_require__, /*! ./sequential_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/sequential_chain.js\"));\n                return SequentialChain.deserialize(data);\n            }\n            case \"simple_sequential_chain\": {\n                const { SimpleSequentialChain } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu\").then(__webpack_require__.bind(__webpack_require__, /*! ./sequential_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/sequential_chain.js\"));\n                return SimpleSequentialChain.deserialize(data);\n            }\n            case \"stuff_documents_chain\": {\n                const { StuffDocumentsChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./combine_docs_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/combine_docs_chain.js\"));\n                return StuffDocumentsChain.deserialize(data);\n            }\n            case \"map_reduce_documents_chain\": {\n                const { MapReduceDocumentsChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./combine_docs_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/combine_docs_chain.js\"));\n                return MapReduceDocumentsChain.deserialize(data);\n            }\n            case \"refine_documents_chain\": {\n                const { RefineDocumentsChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./combine_docs_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/combine_docs_chain.js\"));\n                return RefineDocumentsChain.deserialize(data);\n            }\n            case \"vector_db_qa\": {\n                const { VectorDBQAChain } = await Promise.resolve(/*! import() */).then(__webpack_require__.bind(__webpack_require__, /*! ./vector_db_qa.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/vector_db_qa.js\"));\n                return VectorDBQAChain.deserialize(data, values);\n            }\n            case \"api_chain\": {\n                const { APIChain } = await __webpack_require__.e(/*! import() */ \"vendor-chunks/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu\").then(__webpack_require__.bind(__webpack_require__, /*! ./api/api_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/api/api_chain.js\"));\n                return APIChain.deserialize(data);\n            }\n            default:\n                throw new Error(`Invalid prompt type in config: ${data._type}`);\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/combine_docs_chain.js":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/combine_docs_chain.js ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MapReduceDocumentsChain: () => (/* binding */ MapReduceDocumentsChain),\n/* harmony export */   RefineDocumentsChain: () => (/* binding */ RefineDocumentsChain),\n/* harmony export */   StuffDocumentsChain: () => (/* binding */ StuffDocumentsChain)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/llm_chain.js\");\n\n\n\n/**\n * Chain that combines documents by stuffing into context.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nclass StuffDocumentsChain extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChain {\n    static lc_name() {\n        return \"StuffDocumentsChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey, ...this.llmChain.inputKeys].filter((key) => key !== this.documentVariableName);\n    }\n    get outputKeys() {\n        return this.llmChain.outputKeys;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        this.llmChain = fields.llmChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n    }\n    /** @ignore */\n    _prepInputs(values) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        const texts = docs.map(({ pageContent }) => pageContent);\n        const text = texts.join(\"\\n\\n\");\n        return {\n            ...rest,\n            [this.documentVariableName]: text,\n        };\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const result = await this.llmChain.call(this._prepInputs(values), runManager?.getChild(\"combine_documents\"));\n        return result;\n    }\n    _chainType() {\n        return \"stuff_documents_chain\";\n    }\n    static async deserialize(data) {\n        if (!data.llm_chain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        return new StuffDocumentsChain({\n            llmChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(data.llm_chain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n        };\n    }\n}\n/**\n * Combine documents by mapping a chain over them, then combining results.\n * @augments BaseChain\n * @augments StuffDocumentsChainInput\n */\nclass MapReduceDocumentsChain extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChain {\n    static lc_name() {\n        return \"MapReduceDocumentsChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey, ...this.combineDocumentChain.inputKeys];\n    }\n    get outputKeys() {\n        return this.combineDocumentChain.outputKeys;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        Object.defineProperty(this, \"returnIntermediateSteps\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"maxTokens\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 3000\n        });\n        Object.defineProperty(this, \"maxIterations\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 10\n        });\n        Object.defineProperty(this, \"ensureMapStep\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        Object.defineProperty(this, \"combineDocumentChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.llmChain = fields.llmChain;\n        this.combineDocumentChain = fields.combineDocumentChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.ensureMapStep = fields.ensureMapStep ?? this.ensureMapStep;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.maxTokens = fields.maxTokens ?? this.maxTokens;\n        this.maxIterations = fields.maxIterations ?? this.maxIterations;\n        this.returnIntermediateSteps = fields.returnIntermediateSteps ?? false;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        let currentDocs = docs;\n        let intermediateSteps = [];\n        // For each iteration, we'll use the `llmChain` to get a new result\n        for (let i = 0; i < this.maxIterations; i += 1) {\n            const inputs = currentDocs.map((d) => ({\n                [this.documentVariableName]: d.pageContent,\n                ...rest,\n            }));\n            const canSkipMapStep = i !== 0 || !this.ensureMapStep;\n            if (canSkipMapStep) {\n                // Calculate the total tokens required in the input\n                const formatted = await this.combineDocumentChain.llmChain.prompt.format(this.combineDocumentChain._prepInputs({\n                    [this.combineDocumentChain.inputKey]: currentDocs,\n                    ...rest,\n                }));\n                const length = await this.combineDocumentChain.llmChain._getNumTokens(formatted);\n                const withinTokenLimit = length < this.maxTokens;\n                // If we can skip the map step, and we're within the token limit, we don't\n                // need to run the map step, so just break out of the loop.\n                if (withinTokenLimit) {\n                    break;\n                }\n            }\n            const results = await this.llmChain.apply(inputs, \n            // If we have a runManager, then we need to create a child for each input\n            // so that we can track the progress of each input.\n            runManager\n                ? Array.from({ length: inputs.length }, (_, i) => runManager.getChild(`map_${i + 1}`))\n                : undefined);\n            const { outputKey } = this.llmChain;\n            // If the flag is set, then concat that to the intermediate steps\n            if (this.returnIntermediateSteps) {\n                intermediateSteps = intermediateSteps.concat(results.map((r) => r[outputKey]));\n            }\n            currentDocs = results.map((r) => ({\n                pageContent: r[outputKey],\n                metadata: {},\n            }));\n        }\n        // Now, with the final result of all the inputs from the `llmChain`, we can\n        // run the `combineDocumentChain` over them.\n        const newInputs = {\n            [this.combineDocumentChain.inputKey]: currentDocs,\n            ...rest,\n        };\n        const result = await this.combineDocumentChain.call(newInputs, runManager?.getChild(\"combine_documents\"));\n        // Return the intermediate steps results if the flag is set\n        if (this.returnIntermediateSteps) {\n            return { ...result, intermediateSteps };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"map_reduce_documents_chain\";\n    }\n    static async deserialize(data) {\n        if (!data.llm_chain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        if (!data.combine_document_chain) {\n            throw new Error(\"Missing combine_document_chain\");\n        }\n        return new MapReduceDocumentsChain({\n            llmChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(data.llm_chain),\n            combineDocumentChain: await StuffDocumentsChain.deserialize(data.combine_document_chain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n            combine_document_chain: this.combineDocumentChain.serialize(),\n        };\n    }\n}\n/**\n * Combine documents by doing a first pass and then refining on more documents.\n * @augments BaseChain\n * @augments RefineDocumentsChainInput\n */\nclass RefineDocumentsChain extends _base_js__WEBPACK_IMPORTED_MODULE_1__.BaseChain {\n    static lc_name() {\n        return \"RefineDocumentsChain\";\n    }\n    get defaultDocumentPrompt() {\n        return new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n            inputVariables: [\"page_content\"],\n            template: \"{page_content}\",\n        });\n    }\n    get inputKeys() {\n        return [\n            ...new Set([\n                this.inputKey,\n                ...this.llmChain.inputKeys,\n                ...this.refineLLMChain.inputKeys,\n            ]),\n        ].filter((key) => key !== this.documentVariableName && key !== this.initialResponseName);\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"llmChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input_documents\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output_text\"\n        });\n        Object.defineProperty(this, \"documentVariableName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"context\"\n        });\n        Object.defineProperty(this, \"initialResponseName\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"existing_answer\"\n        });\n        Object.defineProperty(this, \"refineLLMChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"documentPrompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: this.defaultDocumentPrompt\n        });\n        this.llmChain = fields.llmChain;\n        this.refineLLMChain = fields.refineLLMChain;\n        this.documentVariableName =\n            fields.documentVariableName ?? this.documentVariableName;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.documentPrompt = fields.documentPrompt ?? this.documentPrompt;\n        this.initialResponseName =\n            fields.initialResponseName ?? this.initialResponseName;\n    }\n    /** @ignore */\n    async _constructInitialInputs(doc, rest) {\n        const baseInfo = {\n            page_content: doc.pageContent,\n            ...doc.metadata,\n        };\n        const documentInfo = {};\n        this.documentPrompt.inputVariables.forEach((value) => {\n            documentInfo[value] = baseInfo[value];\n        });\n        const baseInputs = {\n            [this.documentVariableName]: await this.documentPrompt.format({\n                ...documentInfo,\n            }),\n        };\n        const inputs = { ...baseInputs, ...rest };\n        return inputs;\n    }\n    /** @ignore */\n    async _constructRefineInputs(doc, res) {\n        const baseInfo = {\n            page_content: doc.pageContent,\n            ...doc.metadata,\n        };\n        const documentInfo = {};\n        this.documentPrompt.inputVariables.forEach((value) => {\n            documentInfo[value] = baseInfo[value];\n        });\n        const baseInputs = {\n            [this.documentVariableName]: await this.documentPrompt.format({\n                ...documentInfo,\n            }),\n        };\n        const inputs = { [this.initialResponseName]: res, ...baseInputs };\n        return inputs;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Document key ${this.inputKey} not found.`);\n        }\n        const { [this.inputKey]: docs, ...rest } = values;\n        const currentDocs = docs;\n        const initialInputs = await this._constructInitialInputs(currentDocs[0], rest);\n        let res = await this.llmChain.predict({ ...initialInputs }, runManager?.getChild(\"answer\"));\n        const refineSteps = [res];\n        for (let i = 1; i < currentDocs.length; i += 1) {\n            const refineInputs = await this._constructRefineInputs(currentDocs[i], res);\n            const inputs = { ...refineInputs, ...rest };\n            res = await this.refineLLMChain.predict({ ...inputs }, runManager?.getChild(\"refine\"));\n            refineSteps.push(res);\n        }\n        return { [this.outputKey]: res };\n    }\n    _chainType() {\n        return \"refine_documents_chain\";\n    }\n    static async deserialize(data) {\n        const SerializedLLMChain = data.llm_chain;\n        if (!SerializedLLMChain) {\n            throw new Error(\"Missing llm_chain\");\n        }\n        const SerializedRefineDocumentChain = data.refine_llm_chain;\n        if (!SerializedRefineDocumentChain) {\n            throw new Error(\"Missing refine_llm_chain\");\n        }\n        return new RefineDocumentsChain({\n            llmChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(SerializedLLMChain),\n            refineLLMChain: await _llm_chain_js__WEBPACK_IMPORTED_MODULE_2__.LLMChain.deserialize(SerializedRefineDocumentChain),\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            llm_chain: this.llmChain.serialize(),\n            refine_llm_chain: this.refineLLMChain.serialize(),\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/combine_docs_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/llm_chain.js":
/*!*****************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/llm_chain.js ***!
  \*****************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   LLMChain: () => (/* binding */ LLMChain)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/language_models/base */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/language_models/base.js\");\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/runnables */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/runnables.js\");\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _output_parsers_noop_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ../output_parsers/noop.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/output_parsers/noop.js\");\n\n\n\n\n\nfunction isBaseLanguageModel(llmLike) {\n    return typeof llmLike._llmType === \"function\";\n}\nfunction _getLanguageModel(llmLike) {\n    if (isBaseLanguageModel(llmLike)) {\n        return llmLike;\n    }\n    else if (\"bound\" in llmLike && _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.Runnable.isRunnable(llmLike.bound)) {\n        return _getLanguageModel(llmLike.bound);\n    }\n    else if (\"runnable\" in llmLike &&\n        \"fallbacks\" in llmLike &&\n        _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.Runnable.isRunnable(llmLike.runnable)) {\n        return _getLanguageModel(llmLike.runnable);\n    }\n    else if (\"default\" in llmLike && _langchain_core_runnables__WEBPACK_IMPORTED_MODULE_2__.Runnable.isRunnable(llmLike.default)) {\n        return _getLanguageModel(llmLike.default);\n    }\n    else {\n        throw new Error(\"Unable to extract BaseLanguageModel from llmLike object.\");\n    }\n}\n/**\n * @deprecated This class will be removed in 1.0.0. Use the LangChain Expression Language (LCEL) instead.\n * See the example below for how to use LCEL with the LLMChain class:\n *\n * Chain to run queries against LLMs.\n *\n * @example\n * ```ts\n * import { ChatPromptTemplate } from \"@langchain/core/prompts\";\n * import { ChatOpenAI } from \"@langchain/openai\";\n *\n * const prompt = ChatPromptTemplate.fromTemplate(\"Tell me a {adjective} joke\");\n * const llm = new ChatOpenAI();\n * const chain = prompt.pipe(llm);\n *\n * const response = await chain.invoke({ adjective: \"funny\" });\n * ```\n */\nclass LLMChain extends _base_js__WEBPACK_IMPORTED_MODULE_3__.BaseChain {\n    static lc_name() {\n        return \"LLMChain\";\n    }\n    get inputKeys() {\n        return this.prompt.inputVariables;\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n        Object.defineProperty(this, \"prompt\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llmKwargs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"text\"\n        });\n        Object.defineProperty(this, \"outputParser\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.prompt = fields.prompt;\n        this.llm = fields.llm;\n        this.llmKwargs = fields.llmKwargs;\n        this.outputKey = fields.outputKey ?? this.outputKey;\n        this.outputParser =\n            fields.outputParser ?? new _output_parsers_noop_js__WEBPACK_IMPORTED_MODULE_4__.NoOpOutputParser();\n        if (this.prompt.outputParser) {\n            if (fields.outputParser) {\n                throw new Error(\"Cannot set both outputParser and prompt.outputParser\");\n            }\n            this.outputParser = this.prompt.outputParser;\n        }\n    }\n    getCallKeys() {\n        const callKeys = \"callKeys\" in this.llm ? this.llm.callKeys : [];\n        return callKeys;\n    }\n    /** @ignore */\n    _selectMemoryInputs(values) {\n        const valuesForMemory = super._selectMemoryInputs(values);\n        const callKeys = this.getCallKeys();\n        for (const key of callKeys) {\n            if (key in values) {\n                delete valuesForMemory[key];\n            }\n        }\n        return valuesForMemory;\n    }\n    /** @ignore */\n    async _getFinalOutput(generations, promptValue, runManager) {\n        let finalCompletion;\n        if (this.outputParser) {\n            finalCompletion = await this.outputParser.parseResultWithPrompt(generations, promptValue, runManager?.getChild());\n        }\n        else {\n            finalCompletion = generations[0].text;\n        }\n        return finalCompletion;\n    }\n    /**\n     * Run the core logic of this chain and add to output if desired.\n     *\n     * Wraps _call and handles memory.\n     */\n    call(values, config) {\n        return super.call(values, config);\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        const valuesForPrompt = { ...values };\n        const valuesForLLM = {\n            ...this.llmKwargs,\n        };\n        const callKeys = this.getCallKeys();\n        for (const key of callKeys) {\n            if (key in values) {\n                if (valuesForLLM) {\n                    valuesForLLM[key] =\n                        values[key];\n                    delete valuesForPrompt[key];\n                }\n            }\n        }\n        const promptValue = await this.prompt.formatPromptValue(valuesForPrompt);\n        if (\"generatePrompt\" in this.llm) {\n            const { generations } = await this.llm.generatePrompt([promptValue], valuesForLLM, runManager?.getChild());\n            return {\n                [this.outputKey]: await this._getFinalOutput(generations[0], promptValue, runManager),\n            };\n        }\n        const modelWithParser = this.outputParser\n            ? this.llm.pipe(this.outputParser)\n            : this.llm;\n        const response = await modelWithParser.invoke(promptValue, runManager?.getChild());\n        return {\n            [this.outputKey]: response,\n        };\n    }\n    /**\n     * Format prompt with values and pass to LLM\n     *\n     * @param values - keys to pass to prompt template\n     * @param callbackManager - CallbackManager to use\n     * @returns Completion from LLM.\n     *\n     * @example\n     * ```ts\n     * llm.predict({ adjective: \"funny\" })\n     * ```\n     */\n    async predict(values, callbackManager) {\n        const output = await this.call(values, callbackManager);\n        return output[this.outputKey];\n    }\n    _chainType() {\n        return \"llm\";\n    }\n    static async deserialize(data) {\n        const { llm, prompt } = data;\n        if (!llm) {\n            throw new Error(\"LLMChain must have llm\");\n        }\n        if (!prompt) {\n            throw new Error(\"LLMChain must have prompt\");\n        }\n        return new LLMChain({\n            llm: await _langchain_core_language_models_base__WEBPACK_IMPORTED_MODULE_0__.BaseLanguageModel.deserialize(llm),\n            prompt: await _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_1__.BasePromptTemplate.deserialize(prompt),\n        });\n    }\n    /** @deprecated */\n    serialize() {\n        const serialize = \"serialize\" in this.llm ? this.llm.serialize() : undefined;\n        return {\n            _type: `${this._chainType()}_chain`,\n            llm: serialize,\n            prompt: this.prompt.serialize(),\n        };\n    }\n    _getNumTokens(text) {\n        return _getLanguageModel(this.llm).getNumTokens(text);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/llm_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/load.js":
/*!*******************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/load.js ***!
  \*******************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   loadQAChain: () => (/* binding */ loadQAChain),\n/* harmony export */   loadQAMapReduceChain: () => (/* binding */ loadQAMapReduceChain),\n/* harmony export */   loadQARefineChain: () => (/* binding */ loadQARefineChain),\n/* harmony export */   loadQAStuffChain: () => (/* binding */ loadQAStuffChain)\n/* harmony export */ });\n/* harmony import */ var _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ../llm_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/llm_chain.js\");\n/* harmony import */ var _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../combine_docs_chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/combine_docs_chain.js\");\n/* harmony import */ var _stuff_prompts_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./stuff_prompts.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/stuff_prompts.js\");\n/* harmony import */ var _map_reduce_prompts_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./map_reduce_prompts.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js\");\n/* harmony import */ var _refine_prompts_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./refine_prompts.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/refine_prompts.js\");\n\n\n\n\n\nconst loadQAChain = (llm, params = { type: \"stuff\" }) => {\n    const { type } = params;\n    if (type === \"stuff\") {\n        return loadQAStuffChain(llm, params);\n    }\n    if (type === \"map_reduce\") {\n        return loadQAMapReduceChain(llm, params);\n    }\n    if (type === \"refine\") {\n        return loadQARefineChain(llm, params);\n    }\n    throw new Error(`Invalid _type: ${type}`);\n};\n/**\n * Loads a StuffQAChain based on the provided parameters. It takes an LLM\n * instance and StuffQAChainParams as parameters.\n * @param llm An instance of BaseLanguageModel.\n * @param params Parameters for creating a StuffQAChain.\n * @returns A StuffQAChain instance.\n */\nfunction loadQAStuffChain(llm, params = {}) {\n    const { prompt = _stuff_prompts_js__WEBPACK_IMPORTED_MODULE_2__.QA_PROMPT_SELECTOR.getPrompt(llm), verbose } = params;\n    const llmChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({ prompt, llm, verbose });\n    const chain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.StuffDocumentsChain({ llmChain, verbose });\n    return chain;\n}\n/**\n * Loads a MapReduceQAChain based on the provided parameters. It takes an\n * LLM instance and MapReduceQAChainParams as parameters.\n * @param llm An instance of BaseLanguageModel.\n * @param params Parameters for creating a MapReduceQAChain.\n * @returns A MapReduceQAChain instance.\n */\nfunction loadQAMapReduceChain(llm, params = {}) {\n    const { combineMapPrompt = _map_reduce_prompts_js__WEBPACK_IMPORTED_MODULE_3__.COMBINE_QA_PROMPT_SELECTOR.getPrompt(llm), combinePrompt = _map_reduce_prompts_js__WEBPACK_IMPORTED_MODULE_3__.COMBINE_PROMPT_SELECTOR.getPrompt(llm), verbose, combineLLM, returnIntermediateSteps, } = params;\n    const llmChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({ prompt: combineMapPrompt, llm, verbose });\n    const combineLLMChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({\n        prompt: combinePrompt,\n        llm: combineLLM ?? llm,\n        verbose,\n    });\n    const combineDocumentChain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.StuffDocumentsChain({\n        llmChain: combineLLMChain,\n        documentVariableName: \"summaries\",\n        verbose,\n    });\n    const chain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.MapReduceDocumentsChain({\n        llmChain,\n        combineDocumentChain,\n        returnIntermediateSteps,\n        verbose,\n    });\n    return chain;\n}\n/**\n * Loads a RefineQAChain based on the provided parameters. It takes an LLM\n * instance and RefineQAChainParams as parameters.\n * @param llm An instance of BaseLanguageModel.\n * @param params Parameters for creating a RefineQAChain.\n * @returns A RefineQAChain instance.\n */\nfunction loadQARefineChain(llm, params = {}) {\n    const { questionPrompt = _refine_prompts_js__WEBPACK_IMPORTED_MODULE_4__.QUESTION_PROMPT_SELECTOR.getPrompt(llm), refinePrompt = _refine_prompts_js__WEBPACK_IMPORTED_MODULE_4__.REFINE_PROMPT_SELECTOR.getPrompt(llm), refineLLM, verbose, } = params;\n    const llmChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({ prompt: questionPrompt, llm, verbose });\n    const refineLLMChain = new _llm_chain_js__WEBPACK_IMPORTED_MODULE_0__.LLMChain({\n        prompt: refinePrompt,\n        llm: refineLLM ?? llm,\n        verbose,\n    });\n    const chain = new _combine_docs_chain_js__WEBPACK_IMPORTED_MODULE_1__.RefineDocumentsChain({\n        llmChain,\n        refineLLMChain,\n        verbose,\n    });\n    return chain;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvcXVlc3Rpb25fYW5zd2VyaW5nL2xvYWQuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQTJDO0FBQ29FO0FBQ3ZEO0FBQ3VDO0FBQ1A7QUFDakYscUNBQXFDLGVBQWU7QUFDM0QsWUFBWSxPQUFPO0FBQ25CO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHNDQUFzQyxLQUFLO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywwQ0FBMEM7QUFDakQsWUFBWSxTQUFTLGlFQUFrQiwyQkFBMkI7QUFDbEUseUJBQXlCLG1EQUFRLEdBQUcsc0JBQXNCO0FBQzFELHNCQUFzQix1RUFBbUIsR0FBRyxtQkFBbUI7QUFDL0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sOENBQThDO0FBQ3JELFlBQVksbUJBQW1CLDhFQUEwQixpQ0FBaUMsMkVBQXVCLGlFQUFpRTtBQUNsTCx5QkFBeUIsbURBQVEsR0FBRyx3Q0FBd0M7QUFDNUUsZ0NBQWdDLG1EQUFRO0FBQ3hDO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxxQ0FBcUMsdUVBQW1CO0FBQ3hEO0FBQ0E7QUFDQTtBQUNBLEtBQUs7QUFDTCxzQkFBc0IsMkVBQXVCO0FBQzdDO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsS0FBSztBQUNMO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDJDQUEyQztBQUNsRCxZQUFZLGlCQUFpQix3RUFBd0IsZ0NBQWdDLHNFQUFzQix1Q0FBdUM7QUFDbEoseUJBQXlCLG1EQUFRLEdBQUcsc0NBQXNDO0FBQzFFLCtCQUErQixtREFBUTtBQUN2QztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0wsc0JBQXNCLHdFQUFvQjtBQUMxQztBQUNBO0FBQ0E7QUFDQSxLQUFLO0FBQ0w7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTlfQGxhbmdjaGFpbithbnRocm9waWNAMC4zLjEzX0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYl9uNWhtdmQ1d2szZW95d2J0eHRpN3hpdnZ4dS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL3F1ZXN0aW9uX2Fuc3dlcmluZy9sb2FkLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IExMTUNoYWluIH0gZnJvbSBcIi4uL2xsbV9jaGFpbi5qc1wiO1xuaW1wb3J0IHsgU3R1ZmZEb2N1bWVudHNDaGFpbiwgTWFwUmVkdWNlRG9jdW1lbnRzQ2hhaW4sIFJlZmluZURvY3VtZW50c0NoYWluLCB9IGZyb20gXCIuLi9jb21iaW5lX2RvY3NfY2hhaW4uanNcIjtcbmltcG9ydCB7IFFBX1BST01QVF9TRUxFQ1RPUiB9IGZyb20gXCIuL3N0dWZmX3Byb21wdHMuanNcIjtcbmltcG9ydCB7IENPTUJJTkVfUFJPTVBUX1NFTEVDVE9SLCBDT01CSU5FX1FBX1BST01QVF9TRUxFQ1RPUiwgfSBmcm9tIFwiLi9tYXBfcmVkdWNlX3Byb21wdHMuanNcIjtcbmltcG9ydCB7IFFVRVNUSU9OX1BST01QVF9TRUxFQ1RPUiwgUkVGSU5FX1BST01QVF9TRUxFQ1RPUiwgfSBmcm9tIFwiLi9yZWZpbmVfcHJvbXB0cy5qc1wiO1xuZXhwb3J0IGNvbnN0IGxvYWRRQUNoYWluID0gKGxsbSwgcGFyYW1zID0geyB0eXBlOiBcInN0dWZmXCIgfSkgPT4ge1xuICAgIGNvbnN0IHsgdHlwZSB9ID0gcGFyYW1zO1xuICAgIGlmICh0eXBlID09PSBcInN0dWZmXCIpIHtcbiAgICAgICAgcmV0dXJuIGxvYWRRQVN0dWZmQ2hhaW4obGxtLCBwYXJhbXMpO1xuICAgIH1cbiAgICBpZiAodHlwZSA9PT0gXCJtYXBfcmVkdWNlXCIpIHtcbiAgICAgICAgcmV0dXJuIGxvYWRRQU1hcFJlZHVjZUNoYWluKGxsbSwgcGFyYW1zKTtcbiAgICB9XG4gICAgaWYgKHR5cGUgPT09IFwicmVmaW5lXCIpIHtcbiAgICAgICAgcmV0dXJuIGxvYWRRQVJlZmluZUNoYWluKGxsbSwgcGFyYW1zKTtcbiAgICB9XG4gICAgdGhyb3cgbmV3IEVycm9yKGBJbnZhbGlkIF90eXBlOiAke3R5cGV9YCk7XG59O1xuLyoqXG4gKiBMb2FkcyBhIFN0dWZmUUFDaGFpbiBiYXNlZCBvbiB0aGUgcHJvdmlkZWQgcGFyYW1ldGVycy4gSXQgdGFrZXMgYW4gTExNXG4gKiBpbnN0YW5jZSBhbmQgU3R1ZmZRQUNoYWluUGFyYW1zIGFzIHBhcmFtZXRlcnMuXG4gKiBAcGFyYW0gbGxtIEFuIGluc3RhbmNlIG9mIEJhc2VMYW5ndWFnZU1vZGVsLlxuICogQHBhcmFtIHBhcmFtcyBQYXJhbWV0ZXJzIGZvciBjcmVhdGluZyBhIFN0dWZmUUFDaGFpbi5cbiAqIEByZXR1cm5zIEEgU3R1ZmZRQUNoYWluIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9hZFFBU3R1ZmZDaGFpbihsbG0sIHBhcmFtcyA9IHt9KSB7XG4gICAgY29uc3QgeyBwcm9tcHQgPSBRQV9QUk9NUFRfU0VMRUNUT1IuZ2V0UHJvbXB0KGxsbSksIHZlcmJvc2UgfSA9IHBhcmFtcztcbiAgICBjb25zdCBsbG1DaGFpbiA9IG5ldyBMTE1DaGFpbih7IHByb21wdCwgbGxtLCB2ZXJib3NlIH0pO1xuICAgIGNvbnN0IGNoYWluID0gbmV3IFN0dWZmRG9jdW1lbnRzQ2hhaW4oeyBsbG1DaGFpbiwgdmVyYm9zZSB9KTtcbiAgICByZXR1cm4gY2hhaW47XG59XG4vKipcbiAqIExvYWRzIGEgTWFwUmVkdWNlUUFDaGFpbiBiYXNlZCBvbiB0aGUgcHJvdmlkZWQgcGFyYW1ldGVycy4gSXQgdGFrZXMgYW5cbiAqIExMTSBpbnN0YW5jZSBhbmQgTWFwUmVkdWNlUUFDaGFpblBhcmFtcyBhcyBwYXJhbWV0ZXJzLlxuICogQHBhcmFtIGxsbSBBbiBpbnN0YW5jZSBvZiBCYXNlTGFuZ3VhZ2VNb2RlbC5cbiAqIEBwYXJhbSBwYXJhbXMgUGFyYW1ldGVycyBmb3IgY3JlYXRpbmcgYSBNYXBSZWR1Y2VRQUNoYWluLlxuICogQHJldHVybnMgQSBNYXBSZWR1Y2VRQUNoYWluIGluc3RhbmNlLlxuICovXG5leHBvcnQgZnVuY3Rpb24gbG9hZFFBTWFwUmVkdWNlQ2hhaW4obGxtLCBwYXJhbXMgPSB7fSkge1xuICAgIGNvbnN0IHsgY29tYmluZU1hcFByb21wdCA9IENPTUJJTkVfUUFfUFJPTVBUX1NFTEVDVE9SLmdldFByb21wdChsbG0pLCBjb21iaW5lUHJvbXB0ID0gQ09NQklORV9QUk9NUFRfU0VMRUNUT1IuZ2V0UHJvbXB0KGxsbSksIHZlcmJvc2UsIGNvbWJpbmVMTE0sIHJldHVybkludGVybWVkaWF0ZVN0ZXBzLCB9ID0gcGFyYW1zO1xuICAgIGNvbnN0IGxsbUNoYWluID0gbmV3IExMTUNoYWluKHsgcHJvbXB0OiBjb21iaW5lTWFwUHJvbXB0LCBsbG0sIHZlcmJvc2UgfSk7XG4gICAgY29uc3QgY29tYmluZUxMTUNoYWluID0gbmV3IExMTUNoYWluKHtcbiAgICAgICAgcHJvbXB0OiBjb21iaW5lUHJvbXB0LFxuICAgICAgICBsbG06IGNvbWJpbmVMTE0gPz8gbGxtLFxuICAgICAgICB2ZXJib3NlLFxuICAgIH0pO1xuICAgIGNvbnN0IGNvbWJpbmVEb2N1bWVudENoYWluID0gbmV3IFN0dWZmRG9jdW1lbnRzQ2hhaW4oe1xuICAgICAgICBsbG1DaGFpbjogY29tYmluZUxMTUNoYWluLFxuICAgICAgICBkb2N1bWVudFZhcmlhYmxlTmFtZTogXCJzdW1tYXJpZXNcIixcbiAgICAgICAgdmVyYm9zZSxcbiAgICB9KTtcbiAgICBjb25zdCBjaGFpbiA9IG5ldyBNYXBSZWR1Y2VEb2N1bWVudHNDaGFpbih7XG4gICAgICAgIGxsbUNoYWluLFxuICAgICAgICBjb21iaW5lRG9jdW1lbnRDaGFpbixcbiAgICAgICAgcmV0dXJuSW50ZXJtZWRpYXRlU3RlcHMsXG4gICAgICAgIHZlcmJvc2UsXG4gICAgfSk7XG4gICAgcmV0dXJuIGNoYWluO1xufVxuLyoqXG4gKiBMb2FkcyBhIFJlZmluZVFBQ2hhaW4gYmFzZWQgb24gdGhlIHByb3ZpZGVkIHBhcmFtZXRlcnMuIEl0IHRha2VzIGFuIExMTVxuICogaW5zdGFuY2UgYW5kIFJlZmluZVFBQ2hhaW5QYXJhbXMgYXMgcGFyYW1ldGVycy5cbiAqIEBwYXJhbSBsbG0gQW4gaW5zdGFuY2Ugb2YgQmFzZUxhbmd1YWdlTW9kZWwuXG4gKiBAcGFyYW0gcGFyYW1zIFBhcmFtZXRlcnMgZm9yIGNyZWF0aW5nIGEgUmVmaW5lUUFDaGFpbi5cbiAqIEByZXR1cm5zIEEgUmVmaW5lUUFDaGFpbiBpbnN0YW5jZS5cbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGxvYWRRQVJlZmluZUNoYWluKGxsbSwgcGFyYW1zID0ge30pIHtcbiAgICBjb25zdCB7IHF1ZXN0aW9uUHJvbXB0ID0gUVVFU1RJT05fUFJPTVBUX1NFTEVDVE9SLmdldFByb21wdChsbG0pLCByZWZpbmVQcm9tcHQgPSBSRUZJTkVfUFJPTVBUX1NFTEVDVE9SLmdldFByb21wdChsbG0pLCByZWZpbmVMTE0sIHZlcmJvc2UsIH0gPSBwYXJhbXM7XG4gICAgY29uc3QgbGxtQ2hhaW4gPSBuZXcgTExNQ2hhaW4oeyBwcm9tcHQ6IHF1ZXN0aW9uUHJvbXB0LCBsbG0sIHZlcmJvc2UgfSk7XG4gICAgY29uc3QgcmVmaW5lTExNQ2hhaW4gPSBuZXcgTExNQ2hhaW4oe1xuICAgICAgICBwcm9tcHQ6IHJlZmluZVByb21wdCxcbiAgICAgICAgbGxtOiByZWZpbmVMTE0gPz8gbGxtLFxuICAgICAgICB2ZXJib3NlLFxuICAgIH0pO1xuICAgIGNvbnN0IGNoYWluID0gbmV3IFJlZmluZURvY3VtZW50c0NoYWluKHtcbiAgICAgICAgbGxtQ2hhaW4sXG4gICAgICAgIHJlZmluZUxMTUNoYWluLFxuICAgICAgICB2ZXJib3NlLFxuICAgIH0pO1xuICAgIHJldHVybiBjaGFpbjtcbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/load.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js":
/*!*********************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js ***!
  \*********************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   COMBINE_PROMPT: () => (/* binding */ COMBINE_PROMPT),\n/* harmony export */   COMBINE_PROMPT_SELECTOR: () => (/* binding */ COMBINE_PROMPT_SELECTOR),\n/* harmony export */   COMBINE_QA_PROMPT_SELECTOR: () => (/* binding */ COMBINE_QA_PROMPT_SELECTOR),\n/* harmony export */   DEFAULT_COMBINE_QA_PROMPT: () => (/* binding */ DEFAULT_COMBINE_QA_PROMPT)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/example_selectors */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/example_selectors.js\");\n/* eslint-disable spaced-comment */\n\n\nconst qa_template = `Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n{context}\nQuestion: {question}\nRelevant text, if any:`;\nconst DEFAULT_COMBINE_QA_PROMPT = \n/*#__PURE__*/\n_langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate.fromTemplate(qa_template);\nconst system_template = `Use the following portion of a long document to see if any of the text is relevant to answer the question. \nReturn any relevant text verbatim.\n----------------\n{context}`;\nconst messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(system_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_QA_PROMPT = /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\nconst COMBINE_QA_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_COMBINE_QA_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_QA_PROMPT],\n]);\nconst combine_prompt = `Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n\nQUESTION: Which state/country's law governs the interpretation of the contract?\n=========\nContent: This Agreement is governed by English law and the parties submit to the exclusive jurisdiction of the English courts in  relation to any dispute (contractual or non-contractual) concerning this Agreement save that either party may apply to any court for an  injunction or other relief to protect its Intellectual Property Rights.\n\nContent: No Waiver. Failure or delay in exercising any right or remedy under this Agreement shall not constitute a waiver of such (or any other)  right or remedy.\\n\\n11.7 Severability. The invalidity, illegality or unenforceability of any term (or part of a term) of this Agreement shall not affect the continuation  in force of the remainder of the term (if any) and this Agreement.\\n\\n11.8 No Agency. Except as expressly stated otherwise, nothing in this Agreement shall create an agency, partnership or joint venture of any  kind between the parties.\\n\\n11.9 No Third-Party Beneficiaries.\n\nContent: (b) if Google believes, in good faith, that the Distributor has violated or caused Google to violate any Anti-Bribery Laws (as  defined in Clause 8.5) or that such a violation is reasonably likely to occur,\n=========\nFINAL ANSWER: This Agreement is governed by English law.\n\nQUESTION: What did the president say about Michael Jackson?\n=========\nContent: Madam Speaker, Madam Vice President, our First Lady and Second Gentleman. Members of Congress and the Cabinet. Justices of the Supreme Court. My fellow Americans.  \\n\\nLast year COVID-19 kept us apart. This year we are finally together again. \\n\\nTonight, we meet as Democrats Republicans and Independents. But most importantly as Americans. \\n\\nWith a duty to one another to the American people to the Constitution. \\n\\nAnd with an unwavering resolve that freedom will always triumph over tyranny. \\n\\nSix days ago, Russia’s Vladimir Putin sought to shake the foundations of the free world thinking he could make it bend to his menacing ways. But he badly miscalculated. \\n\\nHe thought he could roll into Ukraine and the world would roll over. Instead he met a wall of strength he never imagined. \\n\\nHe met the Ukrainian people. \\n\\nFrom President Zelenskyy to every Ukrainian, their fearlessness, their courage, their determination, inspires the world. \\n\\nGroups of citizens blocking tanks with their bodies. Everyone from students to retirees teachers turned soldiers defending their homeland.\n\nContent: And we won’t stop. \\n\\nWe have lost so much to COVID-19. Time with one another. And worst of all, so much loss of life. \\n\\nLet’s use this moment to reset. Let’s stop looking at COVID-19 as a partisan dividing line and see it for what it is: A God-awful disease.  \\n\\nLet’s stop seeing each other as enemies, and start seeing each other for who we really are: Fellow Americans.  \\n\\nWe can’t change how divided we’ve been. But we can change how we move forward—on COVID-19 and other issues we must face together. \\n\\nI recently visited the New York City Police Department days after the funerals of Officer Wilbert Mora and his partner, Officer Jason Rivera. \\n\\nThey were responding to a 9-1-1 call when a man shot and killed them with a stolen gun. \\n\\nOfficer Mora was 27 years old. \\n\\nOfficer Rivera was 22. \\n\\nBoth Dominican Americans who’d grown up on the same streets they later chose to patrol as police officers. \\n\\nI spoke with their families and told them that we are forever in debt for their sacrifice, and we will carry on their mission to restore the trust and safety every community deserves.\n\nContent: And a proud Ukrainian people, who have known 30 years  of independence, have repeatedly shown that they will not tolerate anyone who tries to take their country backwards.  \\n\\nTo all Americans, I will be honest with you, as I’ve always promised. A Russian dictator, invading a foreign country, has costs around the world. \\n\\nAnd I’m taking robust action to make sure the pain of our sanctions  is targeted at Russia’s economy. And I will use every tool at our disposal to protect American businesses and consumers. \\n\\nTonight, I can announce that the United States has worked with 30 other countries to release 60 Million barrels of oil from reserves around the world.  \\n\\nAmerica will lead that effort, releasing 30 Million barrels from our own Strategic Petroleum Reserve. And we stand ready to do more if necessary, unified with our allies.  \\n\\nThese steps will help blunt gas prices here at home. And I know the news about what’s happening can seem alarming. \\n\\nBut I want you to know that we are going to be okay.\n\nContent: More support for patients and families. \\n\\nTo get there, I call on Congress to fund ARPA-H, the Advanced Research Projects Agency for Health. \\n\\nIt’s based on DARPA—the Defense Department project that led to the Internet, GPS, and so much more.  \\n\\nARPA-H will have a singular purpose—to drive breakthroughs in cancer, Alzheimer’s, diabetes, and more. \\n\\nA unity agenda for the nation. \\n\\nWe can do this. \\n\\nMy fellow Americans—tonight , we have gathered in a sacred space—the citadel of our democracy. \\n\\nIn this Capitol, generation after generation, Americans have debated great questions amid great strife, and have done great things. \\n\\nWe have fought for freedom, expanded liberty, defeated totalitarianism and terror. \\n\\nAnd built the strongest, freest, and most prosperous nation the world has ever known. \\n\\nNow is the hour. \\n\\nOur moment of responsibility. \\n\\nOur test of resolve and conscience, of history itself. \\n\\nIt is in this moment that our character is formed. Our purpose is found. Our future is forged. \\n\\nWell I know this nation.\n=========\nFINAL ANSWER: The president did not mention Michael Jackson.\n\nQUESTION: {question}\n=========\n{summaries}\n=========\nFINAL ANSWER:`;\nconst COMBINE_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate.fromTemplate(combine_prompt);\nconst system_combine_template = `Given the following extracted parts of a long document and a question, create a final answer. \nIf you don't know the answer, just say that you don't know. Don't try to make up an answer.\n----------------\n{summaries}`;\nconst combine_messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(system_combine_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_COMBINE_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(combine_messages);\nconst COMBINE_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(COMBINE_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_COMBINE_PROMPT],\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvcXVlc3Rpb25fYW5zd2VyaW5nL21hcF9yZWR1Y2VfcHJvbXB0cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7QUFBQTtBQUN1STtBQUMzQztBQUM1RjtBQUNBO0FBQ0EsQ0FBQztBQUNELFdBQVc7QUFDWDtBQUNPO0FBQ1A7QUFDQSxtRUFBYztBQUNkO0FBQ0E7QUFDQTtBQUNBLENBQUMsUUFBUTtBQUNUO0FBQ0Esa0JBQWtCLGdGQUEyQjtBQUM3QyxrQkFBa0IsK0VBQTBCLGdCQUFnQixTQUFTO0FBQ3JFO0FBQ0EscUNBQXFDLHVFQUFrQjtBQUNoRDtBQUNQLGtCQUFrQix3RkFBeUI7QUFDM0MsS0FBSywwRUFBVztBQUNoQjtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBOztBQUVBO0FBQ0E7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7O0FBRUE7O0FBRUE7QUFDQTtBQUNBOztBQUVBLFdBQVc7QUFDWDtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ087QUFDUCxjQUFjLG1FQUFjO0FBQzVCO0FBQ0E7QUFDQTtBQUNBLENBQUMsVUFBVTtBQUNYO0FBQ0Esa0JBQWtCLGdGQUEyQjtBQUM3QyxrQkFBa0IsK0VBQTBCLGdCQUFnQixTQUFTO0FBQ3JFO0FBQ0E7QUFDQSxjQUFjLHVFQUFrQjtBQUN6QjtBQUNQLGtCQUFrQix3RkFBeUI7QUFDM0MsS0FBSywwRUFBVztBQUNoQiIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTlfQGxhbmdjaGFpbithbnRocm9waWNAMC4zLjEzX0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYl9uNWhtdmQ1d2szZW95d2J0eHRpN3hpdnZ4dS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL3F1ZXN0aW9uX2Fuc3dlcmluZy9tYXBfcmVkdWNlX3Byb21wdHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgc3BhY2VkLWNvbW1lbnQgKi9cbmltcG9ydCB7IENoYXRQcm9tcHRUZW1wbGF0ZSwgU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlLCBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZSwgUHJvbXB0VGVtcGxhdGUsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG5pbXBvcnQgeyBDb25kaXRpb25hbFByb21wdFNlbGVjdG9yLCBpc0NoYXRNb2RlbCwgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL2V4YW1wbGVfc2VsZWN0b3JzXCI7XG5jb25zdCBxYV90ZW1wbGF0ZSA9IGBVc2UgdGhlIGZvbGxvd2luZyBwb3J0aW9uIG9mIGEgbG9uZyBkb2N1bWVudCB0byBzZWUgaWYgYW55IG9mIHRoZSB0ZXh0IGlzIHJlbGV2YW50IHRvIGFuc3dlciB0aGUgcXVlc3Rpb24uIFxuUmV0dXJuIGFueSByZWxldmFudCB0ZXh0IHZlcmJhdGltLlxue2NvbnRleHR9XG5RdWVzdGlvbjoge3F1ZXN0aW9ufVxuUmVsZXZhbnQgdGV4dCwgaWYgYW55OmA7XG5leHBvcnQgY29uc3QgREVGQVVMVF9DT01CSU5FX1FBX1BST01QVCA9IFxuLyojX19QVVJFX18qL1xuUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKHFhX3RlbXBsYXRlKTtcbmNvbnN0IHN5c3RlbV90ZW1wbGF0ZSA9IGBVc2UgdGhlIGZvbGxvd2luZyBwb3J0aW9uIG9mIGEgbG9uZyBkb2N1bWVudCB0byBzZWUgaWYgYW55IG9mIHRoZSB0ZXh0IGlzIHJlbGV2YW50IHRvIGFuc3dlciB0aGUgcXVlc3Rpb24uIFxuUmV0dXJuIGFueSByZWxldmFudCB0ZXh0IHZlcmJhdGltLlxuLS0tLS0tLS0tLS0tLS0tLVxue2NvbnRleHR9YDtcbmNvbnN0IG1lc3NhZ2VzID0gW1xuICAgIC8qI19fUFVSRV9fKi8gU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShzeXN0ZW1fdGVtcGxhdGUpLFxuICAgIC8qI19fUFVSRV9fKi8gSHVtYW5NZXNzYWdlUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKFwie3F1ZXN0aW9ufVwiKSxcbl07XG5jb25zdCBDSEFUX1FBX1BST01QVCA9IC8qI19fUFVSRV9fKi8gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21NZXNzYWdlcyhtZXNzYWdlcyk7XG5leHBvcnQgY29uc3QgQ09NQklORV9RQV9QUk9NUFRfU0VMRUNUT1IgPSBcbi8qI19fUFVSRV9fKi8gbmV3IENvbmRpdGlvbmFsUHJvbXB0U2VsZWN0b3IoREVGQVVMVF9DT01CSU5FX1FBX1BST01QVCwgW1xuICAgIFtpc0NoYXRNb2RlbCwgQ0hBVF9RQV9QUk9NUFRdLFxuXSk7XG5jb25zdCBjb21iaW5lX3Byb21wdCA9IGBHaXZlbiB0aGUgZm9sbG93aW5nIGV4dHJhY3RlZCBwYXJ0cyBvZiBhIGxvbmcgZG9jdW1lbnQgYW5kIGEgcXVlc3Rpb24sIGNyZWF0ZSBhIGZpbmFsIGFuc3dlci4gXG5JZiB5b3UgZG9uJ3Qga25vdyB0aGUgYW5zd2VyLCBqdXN0IHNheSB0aGF0IHlvdSBkb24ndCBrbm93LiBEb24ndCB0cnkgdG8gbWFrZSB1cCBhbiBhbnN3ZXIuXG5cblFVRVNUSU9OOiBXaGljaCBzdGF0ZS9jb3VudHJ5J3MgbGF3IGdvdmVybnMgdGhlIGludGVycHJldGF0aW9uIG9mIHRoZSBjb250cmFjdD9cbj09PT09PT09PVxuQ29udGVudDogVGhpcyBBZ3JlZW1lbnQgaXMgZ292ZXJuZWQgYnkgRW5nbGlzaCBsYXcgYW5kIHRoZSBwYXJ0aWVzIHN1Ym1pdCB0byB0aGUgZXhjbHVzaXZlIGp1cmlzZGljdGlvbiBvZiB0aGUgRW5nbGlzaCBjb3VydHMgaW4gIHJlbGF0aW9uIHRvIGFueSBkaXNwdXRlIChjb250cmFjdHVhbCBvciBub24tY29udHJhY3R1YWwpIGNvbmNlcm5pbmcgdGhpcyBBZ3JlZW1lbnQgc2F2ZSB0aGF0IGVpdGhlciBwYXJ0eSBtYXkgYXBwbHkgdG8gYW55IGNvdXJ0IGZvciBhbiAgaW5qdW5jdGlvbiBvciBvdGhlciByZWxpZWYgdG8gcHJvdGVjdCBpdHMgSW50ZWxsZWN0dWFsIFByb3BlcnR5IFJpZ2h0cy5cblxuQ29udGVudDogTm8gV2FpdmVyLiBGYWlsdXJlIG9yIGRlbGF5IGluIGV4ZXJjaXNpbmcgYW55IHJpZ2h0IG9yIHJlbWVkeSB1bmRlciB0aGlzIEFncmVlbWVudCBzaGFsbCBub3QgY29uc3RpdHV0ZSBhIHdhaXZlciBvZiBzdWNoIChvciBhbnkgb3RoZXIpICByaWdodCBvciByZW1lZHkuXFxuXFxuMTEuNyBTZXZlcmFiaWxpdHkuIFRoZSBpbnZhbGlkaXR5LCBpbGxlZ2FsaXR5IG9yIHVuZW5mb3JjZWFiaWxpdHkgb2YgYW55IHRlcm0gKG9yIHBhcnQgb2YgYSB0ZXJtKSBvZiB0aGlzIEFncmVlbWVudCBzaGFsbCBub3QgYWZmZWN0IHRoZSBjb250aW51YXRpb24gIGluIGZvcmNlIG9mIHRoZSByZW1haW5kZXIgb2YgdGhlIHRlcm0gKGlmIGFueSkgYW5kIHRoaXMgQWdyZWVtZW50LlxcblxcbjExLjggTm8gQWdlbmN5LiBFeGNlcHQgYXMgZXhwcmVzc2x5IHN0YXRlZCBvdGhlcndpc2UsIG5vdGhpbmcgaW4gdGhpcyBBZ3JlZW1lbnQgc2hhbGwgY3JlYXRlIGFuIGFnZW5jeSwgcGFydG5lcnNoaXAgb3Igam9pbnQgdmVudHVyZSBvZiBhbnkgIGtpbmQgYmV0d2VlbiB0aGUgcGFydGllcy5cXG5cXG4xMS45IE5vIFRoaXJkLVBhcnR5IEJlbmVmaWNpYXJpZXMuXG5cbkNvbnRlbnQ6IChiKSBpZiBHb29nbGUgYmVsaWV2ZXMsIGluIGdvb2QgZmFpdGgsIHRoYXQgdGhlIERpc3RyaWJ1dG9yIGhhcyB2aW9sYXRlZCBvciBjYXVzZWQgR29vZ2xlIHRvIHZpb2xhdGUgYW55IEFudGktQnJpYmVyeSBMYXdzIChhcyAgZGVmaW5lZCBpbiBDbGF1c2UgOC41KSBvciB0aGF0IHN1Y2ggYSB2aW9sYXRpb24gaXMgcmVhc29uYWJseSBsaWtlbHkgdG8gb2NjdXIsXG49PT09PT09PT1cbkZJTkFMIEFOU1dFUjogVGhpcyBBZ3JlZW1lbnQgaXMgZ292ZXJuZWQgYnkgRW5nbGlzaCBsYXcuXG5cblFVRVNUSU9OOiBXaGF0IGRpZCB0aGUgcHJlc2lkZW50IHNheSBhYm91dCBNaWNoYWVsIEphY2tzb24/XG49PT09PT09PT1cbkNvbnRlbnQ6IE1hZGFtIFNwZWFrZXIsIE1hZGFtIFZpY2UgUHJlc2lkZW50LCBvdXIgRmlyc3QgTGFkeSBhbmQgU2Vjb25kIEdlbnRsZW1hbi4gTWVtYmVycyBvZiBDb25ncmVzcyBhbmQgdGhlIENhYmluZXQuIEp1c3RpY2VzIG9mIHRoZSBTdXByZW1lIENvdXJ0LiBNeSBmZWxsb3cgQW1lcmljYW5zLiAgXFxuXFxuTGFzdCB5ZWFyIENPVklELTE5IGtlcHQgdXMgYXBhcnQuIFRoaXMgeWVhciB3ZSBhcmUgZmluYWxseSB0b2dldGhlciBhZ2Fpbi4gXFxuXFxuVG9uaWdodCwgd2UgbWVldCBhcyBEZW1vY3JhdHMgUmVwdWJsaWNhbnMgYW5kIEluZGVwZW5kZW50cy4gQnV0IG1vc3QgaW1wb3J0YW50bHkgYXMgQW1lcmljYW5zLiBcXG5cXG5XaXRoIGEgZHV0eSB0byBvbmUgYW5vdGhlciB0byB0aGUgQW1lcmljYW4gcGVvcGxlIHRvIHRoZSBDb25zdGl0dXRpb24uIFxcblxcbkFuZCB3aXRoIGFuIHVud2F2ZXJpbmcgcmVzb2x2ZSB0aGF0IGZyZWVkb20gd2lsbCBhbHdheXMgdHJpdW1waCBvdmVyIHR5cmFubnkuIFxcblxcblNpeCBkYXlzIGFnbywgUnVzc2lh4oCZcyBWbGFkaW1pciBQdXRpbiBzb3VnaHQgdG8gc2hha2UgdGhlIGZvdW5kYXRpb25zIG9mIHRoZSBmcmVlIHdvcmxkIHRoaW5raW5nIGhlIGNvdWxkIG1ha2UgaXQgYmVuZCB0byBoaXMgbWVuYWNpbmcgd2F5cy4gQnV0IGhlIGJhZGx5IG1pc2NhbGN1bGF0ZWQuIFxcblxcbkhlIHRob3VnaHQgaGUgY291bGQgcm9sbCBpbnRvIFVrcmFpbmUgYW5kIHRoZSB3b3JsZCB3b3VsZCByb2xsIG92ZXIuIEluc3RlYWQgaGUgbWV0IGEgd2FsbCBvZiBzdHJlbmd0aCBoZSBuZXZlciBpbWFnaW5lZC4gXFxuXFxuSGUgbWV0IHRoZSBVa3JhaW5pYW4gcGVvcGxlLiBcXG5cXG5Gcm9tIFByZXNpZGVudCBaZWxlbnNreXkgdG8gZXZlcnkgVWtyYWluaWFuLCB0aGVpciBmZWFybGVzc25lc3MsIHRoZWlyIGNvdXJhZ2UsIHRoZWlyIGRldGVybWluYXRpb24sIGluc3BpcmVzIHRoZSB3b3JsZC4gXFxuXFxuR3JvdXBzIG9mIGNpdGl6ZW5zIGJsb2NraW5nIHRhbmtzIHdpdGggdGhlaXIgYm9kaWVzLiBFdmVyeW9uZSBmcm9tIHN0dWRlbnRzIHRvIHJldGlyZWVzIHRlYWNoZXJzIHR1cm5lZCBzb2xkaWVycyBkZWZlbmRpbmcgdGhlaXIgaG9tZWxhbmQuXG5cbkNvbnRlbnQ6IEFuZCB3ZSB3b27igJl0IHN0b3AuIFxcblxcbldlIGhhdmUgbG9zdCBzbyBtdWNoIHRvIENPVklELTE5LiBUaW1lIHdpdGggb25lIGFub3RoZXIuIEFuZCB3b3JzdCBvZiBhbGwsIHNvIG11Y2ggbG9zcyBvZiBsaWZlLiBcXG5cXG5MZXTigJlzIHVzZSB0aGlzIG1vbWVudCB0byByZXNldC4gTGV04oCZcyBzdG9wIGxvb2tpbmcgYXQgQ09WSUQtMTkgYXMgYSBwYXJ0aXNhbiBkaXZpZGluZyBsaW5lIGFuZCBzZWUgaXQgZm9yIHdoYXQgaXQgaXM6IEEgR29kLWF3ZnVsIGRpc2Vhc2UuICBcXG5cXG5MZXTigJlzIHN0b3Agc2VlaW5nIGVhY2ggb3RoZXIgYXMgZW5lbWllcywgYW5kIHN0YXJ0IHNlZWluZyBlYWNoIG90aGVyIGZvciB3aG8gd2UgcmVhbGx5IGFyZTogRmVsbG93IEFtZXJpY2Fucy4gIFxcblxcbldlIGNhbuKAmXQgY2hhbmdlIGhvdyBkaXZpZGVkIHdl4oCZdmUgYmVlbi4gQnV0IHdlIGNhbiBjaGFuZ2UgaG93IHdlIG1vdmUgZm9yd2FyZOKAlG9uIENPVklELTE5IGFuZCBvdGhlciBpc3N1ZXMgd2UgbXVzdCBmYWNlIHRvZ2V0aGVyLiBcXG5cXG5JIHJlY2VudGx5IHZpc2l0ZWQgdGhlIE5ldyBZb3JrIENpdHkgUG9saWNlIERlcGFydG1lbnQgZGF5cyBhZnRlciB0aGUgZnVuZXJhbHMgb2YgT2ZmaWNlciBXaWxiZXJ0IE1vcmEgYW5kIGhpcyBwYXJ0bmVyLCBPZmZpY2VyIEphc29uIFJpdmVyYS4gXFxuXFxuVGhleSB3ZXJlIHJlc3BvbmRpbmcgdG8gYSA5LTEtMSBjYWxsIHdoZW4gYSBtYW4gc2hvdCBhbmQga2lsbGVkIHRoZW0gd2l0aCBhIHN0b2xlbiBndW4uIFxcblxcbk9mZmljZXIgTW9yYSB3YXMgMjcgeWVhcnMgb2xkLiBcXG5cXG5PZmZpY2VyIFJpdmVyYSB3YXMgMjIuIFxcblxcbkJvdGggRG9taW5pY2FuIEFtZXJpY2FucyB3aG/igJlkIGdyb3duIHVwIG9uIHRoZSBzYW1lIHN0cmVldHMgdGhleSBsYXRlciBjaG9zZSB0byBwYXRyb2wgYXMgcG9saWNlIG9mZmljZXJzLiBcXG5cXG5JIHNwb2tlIHdpdGggdGhlaXIgZmFtaWxpZXMgYW5kIHRvbGQgdGhlbSB0aGF0IHdlIGFyZSBmb3JldmVyIGluIGRlYnQgZm9yIHRoZWlyIHNhY3JpZmljZSwgYW5kIHdlIHdpbGwgY2Fycnkgb24gdGhlaXIgbWlzc2lvbiB0byByZXN0b3JlIHRoZSB0cnVzdCBhbmQgc2FmZXR5IGV2ZXJ5IGNvbW11bml0eSBkZXNlcnZlcy5cblxuQ29udGVudDogQW5kIGEgcHJvdWQgVWtyYWluaWFuIHBlb3BsZSwgd2hvIGhhdmUga25vd24gMzAgeWVhcnMgIG9mIGluZGVwZW5kZW5jZSwgaGF2ZSByZXBlYXRlZGx5IHNob3duIHRoYXQgdGhleSB3aWxsIG5vdCB0b2xlcmF0ZSBhbnlvbmUgd2hvIHRyaWVzIHRvIHRha2UgdGhlaXIgY291bnRyeSBiYWNrd2FyZHMuICBcXG5cXG5UbyBhbGwgQW1lcmljYW5zLCBJIHdpbGwgYmUgaG9uZXN0IHdpdGggeW91LCBhcyBJ4oCZdmUgYWx3YXlzIHByb21pc2VkLiBBIFJ1c3NpYW4gZGljdGF0b3IsIGludmFkaW5nIGEgZm9yZWlnbiBjb3VudHJ5LCBoYXMgY29zdHMgYXJvdW5kIHRoZSB3b3JsZC4gXFxuXFxuQW5kIEnigJltIHRha2luZyByb2J1c3QgYWN0aW9uIHRvIG1ha2Ugc3VyZSB0aGUgcGFpbiBvZiBvdXIgc2FuY3Rpb25zICBpcyB0YXJnZXRlZCBhdCBSdXNzaWHigJlzIGVjb25vbXkuIEFuZCBJIHdpbGwgdXNlIGV2ZXJ5IHRvb2wgYXQgb3VyIGRpc3Bvc2FsIHRvIHByb3RlY3QgQW1lcmljYW4gYnVzaW5lc3NlcyBhbmQgY29uc3VtZXJzLiBcXG5cXG5Ub25pZ2h0LCBJIGNhbiBhbm5vdW5jZSB0aGF0IHRoZSBVbml0ZWQgU3RhdGVzIGhhcyB3b3JrZWQgd2l0aCAzMCBvdGhlciBjb3VudHJpZXMgdG8gcmVsZWFzZSA2MCBNaWxsaW9uIGJhcnJlbHMgb2Ygb2lsIGZyb20gcmVzZXJ2ZXMgYXJvdW5kIHRoZSB3b3JsZC4gIFxcblxcbkFtZXJpY2Egd2lsbCBsZWFkIHRoYXQgZWZmb3J0LCByZWxlYXNpbmcgMzAgTWlsbGlvbiBiYXJyZWxzIGZyb20gb3VyIG93biBTdHJhdGVnaWMgUGV0cm9sZXVtIFJlc2VydmUuIEFuZCB3ZSBzdGFuZCByZWFkeSB0byBkbyBtb3JlIGlmIG5lY2Vzc2FyeSwgdW5pZmllZCB3aXRoIG91ciBhbGxpZXMuICBcXG5cXG5UaGVzZSBzdGVwcyB3aWxsIGhlbHAgYmx1bnQgZ2FzIHByaWNlcyBoZXJlIGF0IGhvbWUuIEFuZCBJIGtub3cgdGhlIG5ld3MgYWJvdXQgd2hhdOKAmXMgaGFwcGVuaW5nIGNhbiBzZWVtIGFsYXJtaW5nLiBcXG5cXG5CdXQgSSB3YW50IHlvdSB0byBrbm93IHRoYXQgd2UgYXJlIGdvaW5nIHRvIGJlIG9rYXkuXG5cbkNvbnRlbnQ6IE1vcmUgc3VwcG9ydCBmb3IgcGF0aWVudHMgYW5kIGZhbWlsaWVzLiBcXG5cXG5UbyBnZXQgdGhlcmUsIEkgY2FsbCBvbiBDb25ncmVzcyB0byBmdW5kIEFSUEEtSCwgdGhlIEFkdmFuY2VkIFJlc2VhcmNoIFByb2plY3RzIEFnZW5jeSBmb3IgSGVhbHRoLiBcXG5cXG5JdOKAmXMgYmFzZWQgb24gREFSUEHigJR0aGUgRGVmZW5zZSBEZXBhcnRtZW50IHByb2plY3QgdGhhdCBsZWQgdG8gdGhlIEludGVybmV0LCBHUFMsIGFuZCBzbyBtdWNoIG1vcmUuICBcXG5cXG5BUlBBLUggd2lsbCBoYXZlIGEgc2luZ3VsYXIgcHVycG9zZeKAlHRvIGRyaXZlIGJyZWFrdGhyb3VnaHMgaW4gY2FuY2VyLCBBbHpoZWltZXLigJlzLCBkaWFiZXRlcywgYW5kIG1vcmUuIFxcblxcbkEgdW5pdHkgYWdlbmRhIGZvciB0aGUgbmF0aW9uLiBcXG5cXG5XZSBjYW4gZG8gdGhpcy4gXFxuXFxuTXkgZmVsbG93IEFtZXJpY2Fuc+KAlHRvbmlnaHQgLCB3ZSBoYXZlIGdhdGhlcmVkIGluIGEgc2FjcmVkIHNwYWNl4oCUdGhlIGNpdGFkZWwgb2Ygb3VyIGRlbW9jcmFjeS4gXFxuXFxuSW4gdGhpcyBDYXBpdG9sLCBnZW5lcmF0aW9uIGFmdGVyIGdlbmVyYXRpb24sIEFtZXJpY2FucyBoYXZlIGRlYmF0ZWQgZ3JlYXQgcXVlc3Rpb25zIGFtaWQgZ3JlYXQgc3RyaWZlLCBhbmQgaGF2ZSBkb25lIGdyZWF0IHRoaW5ncy4gXFxuXFxuV2UgaGF2ZSBmb3VnaHQgZm9yIGZyZWVkb20sIGV4cGFuZGVkIGxpYmVydHksIGRlZmVhdGVkIHRvdGFsaXRhcmlhbmlzbSBhbmQgdGVycm9yLiBcXG5cXG5BbmQgYnVpbHQgdGhlIHN0cm9uZ2VzdCwgZnJlZXN0LCBhbmQgbW9zdCBwcm9zcGVyb3VzIG5hdGlvbiB0aGUgd29ybGQgaGFzIGV2ZXIga25vd24uIFxcblxcbk5vdyBpcyB0aGUgaG91ci4gXFxuXFxuT3VyIG1vbWVudCBvZiByZXNwb25zaWJpbGl0eS4gXFxuXFxuT3VyIHRlc3Qgb2YgcmVzb2x2ZSBhbmQgY29uc2NpZW5jZSwgb2YgaGlzdG9yeSBpdHNlbGYuIFxcblxcbkl0IGlzIGluIHRoaXMgbW9tZW50IHRoYXQgb3VyIGNoYXJhY3RlciBpcyBmb3JtZWQuIE91ciBwdXJwb3NlIGlzIGZvdW5kLiBPdXIgZnV0dXJlIGlzIGZvcmdlZC4gXFxuXFxuV2VsbCBJIGtub3cgdGhpcyBuYXRpb24uXG49PT09PT09PT1cbkZJTkFMIEFOU1dFUjogVGhlIHByZXNpZGVudCBkaWQgbm90IG1lbnRpb24gTWljaGFlbCBKYWNrc29uLlxuXG5RVUVTVElPTjoge3F1ZXN0aW9ufVxuPT09PT09PT09XG57c3VtbWFyaWVzfVxuPT09PT09PT09XG5GSU5BTCBBTlNXRVI6YDtcbmV4cG9ydCBjb25zdCBDT01CSU5FX1BST01QVCA9IFxuLyojX19QVVJFX18qLyBQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoY29tYmluZV9wcm9tcHQpO1xuY29uc3Qgc3lzdGVtX2NvbWJpbmVfdGVtcGxhdGUgPSBgR2l2ZW4gdGhlIGZvbGxvd2luZyBleHRyYWN0ZWQgcGFydHMgb2YgYSBsb25nIGRvY3VtZW50IGFuZCBhIHF1ZXN0aW9uLCBjcmVhdGUgYSBmaW5hbCBhbnN3ZXIuIFxuSWYgeW91IGRvbid0IGtub3cgdGhlIGFuc3dlciwganVzdCBzYXkgdGhhdCB5b3UgZG9uJ3Qga25vdy4gRG9uJ3QgdHJ5IHRvIG1ha2UgdXAgYW4gYW5zd2VyLlxuLS0tLS0tLS0tLS0tLS0tLVxue3N1bW1hcmllc31gO1xuY29uc3QgY29tYmluZV9tZXNzYWdlcyA9IFtcbiAgICAvKiNfX1BVUkVfXyovIFN5c3RlbU1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoc3lzdGVtX2NvbWJpbmVfdGVtcGxhdGUpLFxuICAgIC8qI19fUFVSRV9fKi8gSHVtYW5NZXNzYWdlUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKFwie3F1ZXN0aW9ufVwiKSxcbl07XG5jb25zdCBDSEFUX0NPTUJJTkVfUFJPTVBUID0gXG4vKiNfX1BVUkVfXyovIENoYXRQcm9tcHRUZW1wbGF0ZS5mcm9tTWVzc2FnZXMoY29tYmluZV9tZXNzYWdlcyk7XG5leHBvcnQgY29uc3QgQ09NQklORV9QUk9NUFRfU0VMRUNUT1IgPSBcbi8qI19fUFVSRV9fKi8gbmV3IENvbmRpdGlvbmFsUHJvbXB0U2VsZWN0b3IoQ09NQklORV9QUk9NUFQsIFtcbiAgICBbaXNDaGF0TW9kZWwsIENIQVRfQ09NQklORV9QUk9NUFRdLFxuXSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/map_reduce_prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/refine_prompts.js":
/*!*****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/refine_prompts.js ***!
  \*****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CHAT_QUESTION_PROMPT: () => (/* binding */ CHAT_QUESTION_PROMPT),\n/* harmony export */   CHAT_REFINE_PROMPT: () => (/* binding */ CHAT_REFINE_PROMPT),\n/* harmony export */   DEFAULT_REFINE_PROMPT: () => (/* binding */ DEFAULT_REFINE_PROMPT),\n/* harmony export */   DEFAULT_REFINE_PROMPT_TMPL: () => (/* binding */ DEFAULT_REFINE_PROMPT_TMPL),\n/* harmony export */   DEFAULT_TEXT_QA_PROMPT: () => (/* binding */ DEFAULT_TEXT_QA_PROMPT),\n/* harmony export */   DEFAULT_TEXT_QA_PROMPT_TMPL: () => (/* binding */ DEFAULT_TEXT_QA_PROMPT_TMPL),\n/* harmony export */   QUESTION_PROMPT_SELECTOR: () => (/* binding */ QUESTION_PROMPT_SELECTOR),\n/* harmony export */   REFINE_PROMPT_SELECTOR: () => (/* binding */ REFINE_PROMPT_SELECTOR)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/example_selectors */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/example_selectors.js\");\n/* eslint-disable spaced-comment */\n\n\nconst DEFAULT_REFINE_PROMPT_TMPL = `The original question is as follows: {question}\nWe have provided an existing answer: {existing_answer}\nWe have the opportunity to refine the existing answer\n(only if needed) with some more context below.\n------------\n{context}\n------------\nGiven the new context, refine the original answer to better answer the question. \nIf the context isn't useful, return the original answer.`;\nconst DEFAULT_REFINE_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"question\", \"existing_answer\", \"context\"],\n    template: DEFAULT_REFINE_PROMPT_TMPL,\n});\nconst refineTemplate = `The original question is as follows: {question}\nWe have provided an existing answer: {existing_answer}\nWe have the opportunity to refine the existing answer\n(only if needed) with some more context below.\n------------\n{context}\n------------\nGiven the new context, refine the original answer to better answer the question. \nIf the context isn't useful, return the original answer.`;\nconst messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.AIMessagePromptTemplate.fromTemplate(\"{existing_answer}\"),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(refineTemplate),\n];\nconst CHAT_REFINE_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\nconst REFINE_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_REFINE_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_REFINE_PROMPT],\n]);\nconst DEFAULT_TEXT_QA_PROMPT_TMPL = `Context information is below. \n---------------------\n{context}\n---------------------\nGiven the context information and no prior knowledge, answer the question: {question}`;\nconst DEFAULT_TEXT_QA_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    inputVariables: [\"context\", \"question\"],\n    template: DEFAULT_TEXT_QA_PROMPT_TMPL,\n});\nconst chat_qa_prompt_template = `Context information is below. \n---------------------\n{context}\n---------------------\nGiven the context information and no prior knowledge, answer any questions`;\nconst chat_messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(chat_qa_prompt_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_QUESTION_PROMPT = \n/*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(chat_messages);\nconst QUESTION_PROMPT_SELECTOR = \n/*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_TEXT_QA_PROMPT, [\n    [_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_QUESTION_PROMPT],\n]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvcXVlc3Rpb25fYW5zd2VyaW5nL3JlZmluZV9wcm9tcHRzLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNnSztBQUNwRTtBQUNyRiwwRUFBMEU7QUFDakYsc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDTyxnREFBZ0QsbUVBQWM7QUFDckU7QUFDQTtBQUNBLENBQUM7QUFDRCw4REFBOEQ7QUFDOUQsc0NBQXNDO0FBQ3RDO0FBQ0E7QUFDQTtBQUNBLENBQUM7QUFDRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQiwrRUFBMEIsZ0JBQWdCLFNBQVM7QUFDckUsa0JBQWtCLDRFQUF1QixnQkFBZ0IsZ0JBQWdCO0FBQ3pFLGtCQUFrQiwrRUFBMEI7QUFDNUM7QUFDTztBQUNQLGNBQWMsdUVBQWtCO0FBQ3pCO0FBQ1Asa0JBQWtCLHdGQUF5QjtBQUMzQyxLQUFLLDBFQUFXO0FBQ2hCO0FBQ087QUFDUDtBQUNBLENBQUM7QUFDRDtBQUNBLDRFQUE0RSxTQUFTO0FBQzlFLGlEQUFpRCxtRUFBYztBQUN0RTtBQUNBO0FBQ0EsQ0FBQztBQUNEO0FBQ0E7QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0Esa0JBQWtCLGdGQUEyQjtBQUM3QyxrQkFBa0IsK0VBQTBCLGdCQUFnQixTQUFTO0FBQ3JFO0FBQ087QUFDUCxjQUFjLHVFQUFrQjtBQUN6QjtBQUNQLGtCQUFrQix3RkFBeUI7QUFDM0MsS0FBSywwRUFBVztBQUNoQiIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTlfQGxhbmdjaGFpbithbnRocm9waWNAMC4zLjEzX0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYl9uNWhtdmQ1d2szZW95d2J0eHRpN3hpdnZ4dS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL3F1ZXN0aW9uX2Fuc3dlcmluZy9yZWZpbmVfcHJvbXB0cy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKiBlc2xpbnQtZGlzYWJsZSBzcGFjZWQtY29tbWVudCAqL1xuaW1wb3J0IHsgUHJvbXB0VGVtcGxhdGUsIENoYXRQcm9tcHRUZW1wbGF0ZSwgU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlLCBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZSwgQUlNZXNzYWdlUHJvbXB0VGVtcGxhdGUsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG5pbXBvcnQgeyBDb25kaXRpb25hbFByb21wdFNlbGVjdG9yLCBpc0NoYXRNb2RlbCwgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL2V4YW1wbGVfc2VsZWN0b3JzXCI7XG5leHBvcnQgY29uc3QgREVGQVVMVF9SRUZJTkVfUFJPTVBUX1RNUEwgPSBgVGhlIG9yaWdpbmFsIHF1ZXN0aW9uIGlzIGFzIGZvbGxvd3M6IHtxdWVzdGlvbn1cbldlIGhhdmUgcHJvdmlkZWQgYW4gZXhpc3RpbmcgYW5zd2VyOiB7ZXhpc3RpbmdfYW5zd2VyfVxuV2UgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gcmVmaW5lIHRoZSBleGlzdGluZyBhbnN3ZXJcbihvbmx5IGlmIG5lZWRlZCkgd2l0aCBzb21lIG1vcmUgY29udGV4dCBiZWxvdy5cbi0tLS0tLS0tLS0tLVxue2NvbnRleHR9XG4tLS0tLS0tLS0tLS1cbkdpdmVuIHRoZSBuZXcgY29udGV4dCwgcmVmaW5lIHRoZSBvcmlnaW5hbCBhbnN3ZXIgdG8gYmV0dGVyIGFuc3dlciB0aGUgcXVlc3Rpb24uIFxuSWYgdGhlIGNvbnRleHQgaXNuJ3QgdXNlZnVsLCByZXR1cm4gdGhlIG9yaWdpbmFsIGFuc3dlci5gO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUkVGSU5FX1BST01QVCA9IC8qI19fUFVSRV9fKi8gbmV3IFByb21wdFRlbXBsYXRlKHtcbiAgICBpbnB1dFZhcmlhYmxlczogW1wicXVlc3Rpb25cIiwgXCJleGlzdGluZ19hbnN3ZXJcIiwgXCJjb250ZXh0XCJdLFxuICAgIHRlbXBsYXRlOiBERUZBVUxUX1JFRklORV9QUk9NUFRfVE1QTCxcbn0pO1xuY29uc3QgcmVmaW5lVGVtcGxhdGUgPSBgVGhlIG9yaWdpbmFsIHF1ZXN0aW9uIGlzIGFzIGZvbGxvd3M6IHtxdWVzdGlvbn1cbldlIGhhdmUgcHJvdmlkZWQgYW4gZXhpc3RpbmcgYW5zd2VyOiB7ZXhpc3RpbmdfYW5zd2VyfVxuV2UgaGF2ZSB0aGUgb3Bwb3J0dW5pdHkgdG8gcmVmaW5lIHRoZSBleGlzdGluZyBhbnN3ZXJcbihvbmx5IGlmIG5lZWRlZCkgd2l0aCBzb21lIG1vcmUgY29udGV4dCBiZWxvdy5cbi0tLS0tLS0tLS0tLVxue2NvbnRleHR9XG4tLS0tLS0tLS0tLS1cbkdpdmVuIHRoZSBuZXcgY29udGV4dCwgcmVmaW5lIHRoZSBvcmlnaW5hbCBhbnN3ZXIgdG8gYmV0dGVyIGFuc3dlciB0aGUgcXVlc3Rpb24uIFxuSWYgdGhlIGNvbnRleHQgaXNuJ3QgdXNlZnVsLCByZXR1cm4gdGhlIG9yaWdpbmFsIGFuc3dlci5gO1xuY29uc3QgbWVzc2FnZXMgPSBbXG4gICAgLyojX19QVVJFX18qLyBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoXCJ7cXVlc3Rpb259XCIpLFxuICAgIC8qI19fUFVSRV9fKi8gQUlNZXNzYWdlUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKFwie2V4aXN0aW5nX2Fuc3dlcn1cIiksXG4gICAgLyojX19QVVJFX18qLyBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUocmVmaW5lVGVtcGxhdGUpLFxuXTtcbmV4cG9ydCBjb25zdCBDSEFUX1JFRklORV9QUk9NUFQgPSBcbi8qI19fUFVSRV9fKi8gQ2hhdFByb21wdFRlbXBsYXRlLmZyb21NZXNzYWdlcyhtZXNzYWdlcyk7XG5leHBvcnQgY29uc3QgUkVGSU5FX1BST01QVF9TRUxFQ1RPUiA9IFxuLyojX19QVVJFX18qLyBuZXcgQ29uZGl0aW9uYWxQcm9tcHRTZWxlY3RvcihERUZBVUxUX1JFRklORV9QUk9NUFQsIFtcbiAgICBbaXNDaGF0TW9kZWwsIENIQVRfUkVGSU5FX1BST01QVF0sXG5dKTtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1RFWFRfUUFfUFJPTVBUX1RNUEwgPSBgQ29udGV4dCBpbmZvcm1hdGlvbiBpcyBiZWxvdy4gXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbntjb250ZXh0fVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5HaXZlbiB0aGUgY29udGV4dCBpbmZvcm1hdGlvbiBhbmQgbm8gcHJpb3Iga25vd2xlZGdlLCBhbnN3ZXIgdGhlIHF1ZXN0aW9uOiB7cXVlc3Rpb259YDtcbmV4cG9ydCBjb25zdCBERUZBVUxUX1RFWFRfUUFfUFJPTVBUID0gLyojX19QVVJFX18qLyBuZXcgUHJvbXB0VGVtcGxhdGUoe1xuICAgIGlucHV0VmFyaWFibGVzOiBbXCJjb250ZXh0XCIsIFwicXVlc3Rpb25cIl0sXG4gICAgdGVtcGxhdGU6IERFRkFVTFRfVEVYVF9RQV9QUk9NUFRfVE1QTCxcbn0pO1xuY29uc3QgY2hhdF9xYV9wcm9tcHRfdGVtcGxhdGUgPSBgQ29udGV4dCBpbmZvcm1hdGlvbiBpcyBiZWxvdy4gXG4tLS0tLS0tLS0tLS0tLS0tLS0tLS1cbntjb250ZXh0fVxuLS0tLS0tLS0tLS0tLS0tLS0tLS0tXG5HaXZlbiB0aGUgY29udGV4dCBpbmZvcm1hdGlvbiBhbmQgbm8gcHJpb3Iga25vd2xlZGdlLCBhbnN3ZXIgYW55IHF1ZXN0aW9uc2A7XG5jb25zdCBjaGF0X21lc3NhZ2VzID0gW1xuICAgIC8qI19fUFVSRV9fKi8gU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlLmZyb21UZW1wbGF0ZShjaGF0X3FhX3Byb21wdF90ZW1wbGF0ZSksXG4gICAgLyojX19QVVJFX18qLyBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoXCJ7cXVlc3Rpb259XCIpLFxuXTtcbmV4cG9ydCBjb25zdCBDSEFUX1FVRVNUSU9OX1BST01QVCA9IFxuLyojX19QVVJFX18qLyBDaGF0UHJvbXB0VGVtcGxhdGUuZnJvbU1lc3NhZ2VzKGNoYXRfbWVzc2FnZXMpO1xuZXhwb3J0IGNvbnN0IFFVRVNUSU9OX1BST01QVF9TRUxFQ1RPUiA9IFxuLyojX19QVVJFX18qLyBuZXcgQ29uZGl0aW9uYWxQcm9tcHRTZWxlY3RvcihERUZBVUxUX1RFWFRfUUFfUFJPTVBULCBbXG4gICAgW2lzQ2hhdE1vZGVsLCBDSEFUX1FVRVNUSU9OX1BST01QVF0sXG5dKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/refine_prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/stuff_prompts.js":
/*!****************************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/stuff_prompts.js ***!
  \****************************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DEFAULT_QA_PROMPT: () => (/* binding */ DEFAULT_QA_PROMPT),\n/* harmony export */   QA_PROMPT_SELECTOR: () => (/* binding */ QA_PROMPT_SELECTOR)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/prompts */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/prompts.js\");\n/* harmony import */ var _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/example_selectors */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/example_selectors.js\");\n/* eslint-disable spaced-comment */\n\n\nconst DEFAULT_QA_PROMPT = /*#__PURE__*/ new _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.PromptTemplate({\n    template: \"Use the following pieces of context to answer the question at the end. If you don't know the answer, just say that you don't know, don't try to make up an answer.\\n\\n{context}\\n\\nQuestion: {question}\\nHelpful Answer:\",\n    inputVariables: [\"context\", \"question\"],\n});\nconst system_template = `Use the following pieces of context to answer the users question. \nIf you don't know the answer, just say that you don't know, don't try to make up an answer.\n----------------\n{context}`;\nconst messages = [\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.SystemMessagePromptTemplate.fromTemplate(system_template),\n    /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.HumanMessagePromptTemplate.fromTemplate(\"{question}\"),\n];\nconst CHAT_PROMPT = /*#__PURE__*/ _langchain_core_prompts__WEBPACK_IMPORTED_MODULE_0__.ChatPromptTemplate.fromMessages(messages);\nconst QA_PROMPT_SELECTOR = /*#__PURE__*/ new _langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.ConditionalPromptSelector(DEFAULT_QA_PROMPT, [[_langchain_core_example_selectors__WEBPACK_IMPORTED_MODULE_1__.isChatModel, CHAT_PROMPT]]);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvcXVlc3Rpb25fYW5zd2VyaW5nL3N0dWZmX3Byb21wdHMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQ3VJO0FBQzNDO0FBQ3JGLDRDQUE0QyxtRUFBYztBQUNqRSxzTEFBc0wsUUFBUSxlQUFlLFNBQVM7QUFDdE47QUFDQSxDQUFDO0FBQ0Q7QUFDQTtBQUNBO0FBQ0EsQ0FBQyxRQUFRO0FBQ1Q7QUFDQSxrQkFBa0IsZ0ZBQTJCO0FBQzdDLGtCQUFrQiwrRUFBMEIsZ0JBQWdCLFNBQVM7QUFDckU7QUFDQSxrQ0FBa0MsdUVBQWtCO0FBQzdDLDZDQUE2Qyx3RkFBeUIsc0JBQXNCLDBFQUFXIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvcXVlc3Rpb25fYW5zd2VyaW5nL3N0dWZmX3Byb21wdHMuanMiXSwic291cmNlc0NvbnRlbnQiOlsiLyogZXNsaW50LWRpc2FibGUgc3BhY2VkLWNvbW1lbnQgKi9cbmltcG9ydCB7IENoYXRQcm9tcHRUZW1wbGF0ZSwgU3lzdGVtTWVzc2FnZVByb21wdFRlbXBsYXRlLCBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZSwgUHJvbXB0VGVtcGxhdGUsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS9wcm9tcHRzXCI7XG5pbXBvcnQgeyBDb25kaXRpb25hbFByb21wdFNlbGVjdG9yLCBpc0NoYXRNb2RlbCwgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL2V4YW1wbGVfc2VsZWN0b3JzXCI7XG5leHBvcnQgY29uc3QgREVGQVVMVF9RQV9QUk9NUFQgPSAvKiNfX1BVUkVfXyovIG5ldyBQcm9tcHRUZW1wbGF0ZSh7XG4gICAgdGVtcGxhdGU6IFwiVXNlIHRoZSBmb2xsb3dpbmcgcGllY2VzIG9mIGNvbnRleHQgdG8gYW5zd2VyIHRoZSBxdWVzdGlvbiBhdCB0aGUgZW5kLiBJZiB5b3UgZG9uJ3Qga25vdyB0aGUgYW5zd2VyLCBqdXN0IHNheSB0aGF0IHlvdSBkb24ndCBrbm93LCBkb24ndCB0cnkgdG8gbWFrZSB1cCBhbiBhbnN3ZXIuXFxuXFxue2NvbnRleHR9XFxuXFxuUXVlc3Rpb246IHtxdWVzdGlvbn1cXG5IZWxwZnVsIEFuc3dlcjpcIixcbiAgICBpbnB1dFZhcmlhYmxlczogW1wiY29udGV4dFwiLCBcInF1ZXN0aW9uXCJdLFxufSk7XG5jb25zdCBzeXN0ZW1fdGVtcGxhdGUgPSBgVXNlIHRoZSBmb2xsb3dpbmcgcGllY2VzIG9mIGNvbnRleHQgdG8gYW5zd2VyIHRoZSB1c2VycyBxdWVzdGlvbi4gXG5JZiB5b3UgZG9uJ3Qga25vdyB0aGUgYW5zd2VyLCBqdXN0IHNheSB0aGF0IHlvdSBkb24ndCBrbm93LCBkb24ndCB0cnkgdG8gbWFrZSB1cCBhbiBhbnN3ZXIuXG4tLS0tLS0tLS0tLS0tLS0tXG57Y29udGV4dH1gO1xuY29uc3QgbWVzc2FnZXMgPSBbXG4gICAgLyojX19QVVJFX18qLyBTeXN0ZW1NZXNzYWdlUHJvbXB0VGVtcGxhdGUuZnJvbVRlbXBsYXRlKHN5c3RlbV90ZW1wbGF0ZSksXG4gICAgLyojX19QVVJFX18qLyBIdW1hbk1lc3NhZ2VQcm9tcHRUZW1wbGF0ZS5mcm9tVGVtcGxhdGUoXCJ7cXVlc3Rpb259XCIpLFxuXTtcbmNvbnN0IENIQVRfUFJPTVBUID0gLyojX19QVVJFX18qLyBDaGF0UHJvbXB0VGVtcGxhdGUuZnJvbU1lc3NhZ2VzKG1lc3NhZ2VzKTtcbmV4cG9ydCBjb25zdCBRQV9QUk9NUFRfU0VMRUNUT1IgPSAvKiNfX1BVUkVfXyovIG5ldyBDb25kaXRpb25hbFByb21wdFNlbGVjdG9yKERFRkFVTFRfUUFfUFJPTVBULCBbW2lzQ2hhdE1vZGVsLCBDSEFUX1BST01QVF1dKTtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/stuff_prompts.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/sequential_chain.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/sequential_chain.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   SequentialChain: () => (/* binding */ SequentialChain),\n/* harmony export */   SimpleSequentialChain: () => (/* binding */ SimpleSequentialChain)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _util_set_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../util/set.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/util/set.js\");\n\n\nfunction formatSet(input) {\n    return Array.from(input)\n        .map((i) => `\"${i}\"`)\n        .join(\", \");\n}\n/**\n * Chain where the outputs of one chain feed directly into next.\n * @example\n * ```typescript\n * const promptTemplate = new PromptTemplate({\n *   template: `You are a playwright. Given the title of play and the era it is set in, it is your job to write a synopsis for that title.\n * Title: {title}\n * Era: {era}\n * Playwright: This is a synopsis for the above play:`,\n *   inputVariables: [\"title\", \"era\"],\n * });\n\n * const reviewPromptTemplate = new PromptTemplate({\n *   template: `You are a play critic from the New York Times. Given the synopsis of play, it is your job to write a review for that play.\n *\n *     Play Synopsis:\n *     {synopsis}\n *     Review from a New York Times play critic of the above play:`,\n *   inputVariables: [\"synopsis\"],\n * });\n\n * const overallChain = new SequentialChain({\n *   chains: [\n *     new LLMChain({\n *       llm: new ChatOpenAI({ temperature: 0 }),\n *       prompt: promptTemplate,\n *       outputKey: \"synopsis\",\n *     }),\n *     new LLMChain({\n *       llm: new OpenAI({ temperature: 0 }),\n *       prompt: reviewPromptTemplate,\n *       outputKey: \"review\",\n *     }),\n *   ],\n *   inputVariables: [\"era\", \"title\"],\n *   outputVariables: [\"synopsis\", \"review\"],\n *   verbose: true,\n * });\n\n * const chainExecutionResult = await overallChain.call({\n *   title: \"Tragedy at sunset on the beach\",\n *   era: \"Victorian England\",\n * });\n * console.log(chainExecutionResult);\n * ```\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/expression_language/ | expression language}.\n * Will be removed in 0.2.0\n */\nclass SequentialChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    static lc_name() {\n        return \"SequentialChain\";\n    }\n    get inputKeys() {\n        return this.inputVariables;\n    }\n    get outputKeys() {\n        return this.outputVariables;\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"chains\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"outputVariables\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnAll\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chains = fields.chains;\n        this.inputVariables = fields.inputVariables;\n        this.outputVariables = fields.outputVariables ?? [];\n        if (this.outputVariables.length > 0 && fields.returnAll) {\n            throw new Error(\"Either specify variables to return using `outputVariables` or use `returnAll` param. Cannot apply both conditions at the same time.\");\n        }\n        this.returnAll = fields.returnAll ?? false;\n        this._validateChains();\n    }\n    /** @ignore */\n    _validateChains() {\n        if (this.chains.length === 0) {\n            throw new Error(\"Sequential chain must have at least one chain.\");\n        }\n        const memoryKeys = this.memory?.memoryKeys ?? [];\n        const inputKeysSet = new Set(this.inputKeys);\n        const memoryKeysSet = new Set(memoryKeys);\n        const keysIntersection = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.intersection)(inputKeysSet, memoryKeysSet);\n        if (keysIntersection.size > 0) {\n            throw new Error(`The following keys: ${formatSet(keysIntersection)} are overlapping between memory and input keys of the chain variables. This can lead to unexpected behaviour. Please use input and memory keys that don't overlap.`);\n        }\n        const availableKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.union)(inputKeysSet, memoryKeysSet);\n        for (const chain of this.chains) {\n            let missingKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(new Set(chain.inputKeys), availableKeys);\n            if (chain.memory) {\n                missingKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(missingKeys, new Set(chain.memory.memoryKeys));\n            }\n            if (missingKeys.size > 0) {\n                throw new Error(`Missing variables for chain \"${chain._chainType()}\": ${formatSet(missingKeys)}. Only got the following variables: ${formatSet(availableKeys)}.`);\n            }\n            const outputKeysSet = new Set(chain.outputKeys);\n            const overlappingOutputKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.intersection)(availableKeys, outputKeysSet);\n            if (overlappingOutputKeys.size > 0) {\n                throw new Error(`The following output variables for chain \"${chain._chainType()}\" are overlapping: ${formatSet(overlappingOutputKeys)}. This can lead to unexpected behaviour.`);\n            }\n            for (const outputKey of outputKeysSet) {\n                availableKeys.add(outputKey);\n            }\n        }\n        if (this.outputVariables.length === 0) {\n            if (this.returnAll) {\n                const outputKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(availableKeys, inputKeysSet);\n                this.outputVariables = Array.from(outputKeys);\n            }\n            else {\n                this.outputVariables = this.chains[this.chains.length - 1].outputKeys;\n            }\n        }\n        else {\n            const missingKeys = (0,_util_set_js__WEBPACK_IMPORTED_MODULE_1__.difference)(new Set(this.outputVariables), new Set(availableKeys));\n            if (missingKeys.size > 0) {\n                throw new Error(`The following output variables were expected to be in the final chain output but were not found: ${formatSet(missingKeys)}.`);\n            }\n        }\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        let input = {};\n        const allChainValues = values;\n        let i = 0;\n        for (const chain of this.chains) {\n            i += 1;\n            input = await chain.call(allChainValues, runManager?.getChild(`step_${i}`));\n            for (const key of Object.keys(input)) {\n                allChainValues[key] = input[key];\n            }\n        }\n        const output = {};\n        for (const key of this.outputVariables) {\n            output[key] = allChainValues[key];\n        }\n        return output;\n    }\n    _chainType() {\n        return \"sequential_chain\";\n    }\n    static async deserialize(data) {\n        const chains = [];\n        const inputVariables = data.input_variables;\n        const outputVariables = data.output_variables;\n        const serializedChains = data.chains;\n        for (const serializedChain of serializedChains) {\n            const deserializedChain = await _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain.deserialize(serializedChain);\n            chains.push(deserializedChain);\n        }\n        return new SequentialChain({ chains, inputVariables, outputVariables });\n    }\n    serialize() {\n        const chains = [];\n        for (const chain of this.chains) {\n            chains.push(chain.serialize());\n        }\n        return {\n            _type: this._chainType(),\n            input_variables: this.inputVariables,\n            output_variables: this.outputVariables,\n            chains,\n        };\n    }\n}\n/**\n * @deprecated Switch to expression language: https://js.langchain.com/docs/expression_language/\n * Simple chain where a single string output of one chain is fed directly into the next.\n * @augments BaseChain\n * @augments SimpleSequentialChainInput\n *\n * @example\n * ```ts\n * import { SimpleSequentialChain, LLMChain } from \"langchain/chains\";\n * import { OpenAI } from \"langchain/llms/openai\";\n * import { PromptTemplate } from \"langchain/prompts\";\n *\n * // This is an LLMChain to write a synopsis given a title of a play.\n * const llm = new OpenAI({ temperature: 0 });\n * const template = `You are a playwright. Given the title of play, it is your job to write a synopsis for that title.\n *\n * Title: {title}\n * Playwright: This is a synopsis for the above play:`\n * const promptTemplate = new PromptTemplate({ template, inputVariables: [\"title\"] });\n * const synopsisChain = new LLMChain({ llm, prompt: promptTemplate });\n *\n *\n * // This is an LLMChain to write a review of a play given a synopsis.\n * const reviewLLM = new OpenAI({ temperature: 0 })\n * const reviewTemplate = `You are a play critic from the New York Times. Given the synopsis of play, it is your job to write a review for that play.\n *\n * Play Synopsis:\n * {synopsis}\n * Review from a New York Times play critic of the above play:`\n * const reviewPromptTemplate = new PromptTemplate({ template: reviewTemplate, inputVariables: [\"synopsis\"] });\n * const reviewChain = new LLMChain({ llm: reviewLLM, prompt: reviewPromptTemplate });\n *\n * const overallChain = new SimpleSequentialChain({chains: [synopsisChain, reviewChain], verbose:true})\n * const review = await overallChain.run(\"Tragedy at sunset on the beach\")\n * // the variable review contains resulting play review.\n * ```\n */\nclass SimpleSequentialChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    static lc_name() {\n        return \"SimpleSequentialChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return [this.outputKey];\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"chains\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"input\"\n        });\n        Object.defineProperty(this, \"outputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"output\"\n        });\n        Object.defineProperty(this, \"trimOutputs\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chains = fields.chains;\n        this.trimOutputs = fields.trimOutputs ?? false;\n        this._validateChains();\n    }\n    /** @ignore */\n    _validateChains() {\n        for (const chain of this.chains) {\n            if (chain.inputKeys.filter((k) => !chain.memory?.memoryKeys.includes(k) ?? true).length !== 1) {\n                throw new Error(`Chains used in SimpleSequentialChain should all have one input, got ${chain.inputKeys.length} for ${chain._chainType()}.`);\n            }\n            if (chain.outputKeys.length !== 1) {\n                throw new Error(`Chains used in SimpleSequentialChain should all have one output, got ${chain.outputKeys.length} for ${chain._chainType()}.`);\n            }\n        }\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        let input = values[this.inputKey];\n        let i = 0;\n        for (const chain of this.chains) {\n            i += 1;\n            input = (await chain.call({ [chain.inputKeys[0]]: input, signal: values.signal }, runManager?.getChild(`step_${i}`)))[chain.outputKeys[0]];\n            if (this.trimOutputs) {\n                input = input.trim();\n            }\n            await runManager?.handleText(input);\n        }\n        return { [this.outputKey]: input };\n    }\n    _chainType() {\n        return \"simple_sequential_chain\";\n    }\n    static async deserialize(data) {\n        const chains = [];\n        const serializedChains = data.chains;\n        for (const serializedChain of serializedChains) {\n            const deserializedChain = await _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain.deserialize(serializedChain);\n            chains.push(deserializedChain);\n        }\n        return new SimpleSequentialChain({ chains });\n    }\n    serialize() {\n        const chains = [];\n        for (const chain of this.chains) {\n            chains.push(chain.serialize());\n        }\n        return {\n            _type: this._chainType(),\n            chains,\n        };\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/sequential_chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/vector_db_qa.js":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/vector_db_qa.js ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorDBQAChain: () => (/* binding */ VectorDBQAChain)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/base.js\");\n/* harmony import */ var _question_answering_load_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./question_answering/load.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/question_answering/load.js\");\n\n\n/**\n * Class that represents a VectorDBQAChain. It extends the `BaseChain`\n * class and implements the `VectorDBQAChainInput` interface. It performs\n * a similarity search using a vector store and combines the search\n * results using a specified combine documents chain.\n *\n * @deprecated\n * Switch to {@link https://js.langchain.com/docs/modules/chains/ | createRetrievalChain}\n * Will be removed in 0.2.0\n */\nclass VectorDBQAChain extends _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain {\n    static lc_name() {\n        return \"VectorDBQAChain\";\n    }\n    get inputKeys() {\n        return [this.inputKey];\n    }\n    get outputKeys() {\n        return this.combineDocumentsChain.outputKeys.concat(this.returnSourceDocuments ? [\"sourceDocuments\"] : []);\n    }\n    constructor(fields) {\n        super(fields);\n        Object.defineProperty(this, \"k\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4\n        });\n        Object.defineProperty(this, \"inputKey\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"query\"\n        });\n        Object.defineProperty(this, \"vectorstore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"combineDocumentsChain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"returnSourceDocuments\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: false\n        });\n        this.vectorstore = fields.vectorstore;\n        this.combineDocumentsChain = fields.combineDocumentsChain;\n        this.inputKey = fields.inputKey ?? this.inputKey;\n        this.k = fields.k ?? this.k;\n        this.returnSourceDocuments =\n            fields.returnSourceDocuments ?? this.returnSourceDocuments;\n    }\n    /** @ignore */\n    async _call(values, runManager) {\n        if (!(this.inputKey in values)) {\n            throw new Error(`Question key ${this.inputKey} not found.`);\n        }\n        const question = values[this.inputKey];\n        const docs = await this.vectorstore.similaritySearch(question, this.k, values.filter, runManager?.getChild(\"vectorstore\"));\n        const inputs = { question, input_documents: docs };\n        const result = await this.combineDocumentsChain.call(inputs, runManager?.getChild(\"combine_documents\"));\n        if (this.returnSourceDocuments) {\n            return {\n                ...result,\n                sourceDocuments: docs,\n            };\n        }\n        return result;\n    }\n    _chainType() {\n        return \"vector_db_qa\";\n    }\n    static async deserialize(data, values) {\n        if (!(\"vectorstore\" in values)) {\n            throw new Error(`Need to pass in a vectorstore to deserialize VectorDBQAChain`);\n        }\n        const { vectorstore } = values;\n        if (!data.combine_documents_chain) {\n            throw new Error(`VectorDBQAChain must have combine_documents_chain in serialized data`);\n        }\n        return new VectorDBQAChain({\n            combineDocumentsChain: await _base_js__WEBPACK_IMPORTED_MODULE_0__.BaseChain.deserialize(data.combine_documents_chain),\n            k: data.k,\n            vectorstore,\n        });\n    }\n    serialize() {\n        return {\n            _type: this._chainType(),\n            combine_documents_chain: this.combineDocumentsChain.serialize(),\n            k: this.k,\n        };\n    }\n    /**\n     * Static method that creates a VectorDBQAChain instance from a\n     * BaseLanguageModel and a vector store. It also accepts optional options\n     * to customize the chain.\n     * @param llm The BaseLanguageModel instance.\n     * @param vectorstore The vector store used for similarity search.\n     * @param options Optional options to customize the chain.\n     * @returns A new instance of VectorDBQAChain.\n     */\n    static fromLLM(llm, vectorstore, options) {\n        const qaChain = (0,_question_answering_load_js__WEBPACK_IMPORTED_MODULE_1__.loadQAStuffChain)(llm);\n        return new this({\n            vectorstore,\n            combineDocumentsChain: qaChain,\n            ...options,\n        });\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9jaGFpbnMvdmVjdG9yX2RiX3FhLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFzQztBQUMwQjtBQUNoRTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLGNBQWM7QUFDZDtBQUNBO0FBQ08sOEJBQThCLCtDQUFTO0FBQzlDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSw0Q0FBNEMsZUFBZTtBQUMzRDtBQUNBO0FBQ0E7QUFDQSx5QkFBeUI7QUFDekI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxnQkFBZ0IsY0FBYztBQUM5QjtBQUNBO0FBQ0E7QUFDQTtBQUNBLHlDQUF5QywrQ0FBUztBQUNsRDtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3Qiw2RUFBZ0I7QUFDeEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTlfQGxhbmdjaGFpbithbnRocm9waWNAMC4zLjEzX0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYl9uNWhtdmQ1d2szZW95d2J0eHRpN3hpdnZ4dS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvY2hhaW5zL3ZlY3Rvcl9kYl9xYS5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBCYXNlQ2hhaW4gfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG5pbXBvcnQgeyBsb2FkUUFTdHVmZkNoYWluIH0gZnJvbSBcIi4vcXVlc3Rpb25fYW5zd2VyaW5nL2xvYWQuanNcIjtcbi8qKlxuICogQ2xhc3MgdGhhdCByZXByZXNlbnRzIGEgVmVjdG9yREJRQUNoYWluLiBJdCBleHRlbmRzIHRoZSBgQmFzZUNoYWluYFxuICogY2xhc3MgYW5kIGltcGxlbWVudHMgdGhlIGBWZWN0b3JEQlFBQ2hhaW5JbnB1dGAgaW50ZXJmYWNlLiBJdCBwZXJmb3Jtc1xuICogYSBzaW1pbGFyaXR5IHNlYXJjaCB1c2luZyBhIHZlY3RvciBzdG9yZSBhbmQgY29tYmluZXMgdGhlIHNlYXJjaFxuICogcmVzdWx0cyB1c2luZyBhIHNwZWNpZmllZCBjb21iaW5lIGRvY3VtZW50cyBjaGFpbi5cbiAqXG4gKiBAZGVwcmVjYXRlZFxuICogU3dpdGNoIHRvIHtAbGluayBodHRwczovL2pzLmxhbmdjaGFpbi5jb20vZG9jcy9tb2R1bGVzL2NoYWlucy8gfCBjcmVhdGVSZXRyaWV2YWxDaGFpbn1cbiAqIFdpbGwgYmUgcmVtb3ZlZCBpbiAwLjIuMFxuICovXG5leHBvcnQgY2xhc3MgVmVjdG9yREJRQUNoYWluIGV4dGVuZHMgQmFzZUNoYWluIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiVmVjdG9yREJRQUNoYWluXCI7XG4gICAgfVxuICAgIGdldCBpbnB1dEtleXMoKSB7XG4gICAgICAgIHJldHVybiBbdGhpcy5pbnB1dEtleV07XG4gICAgfVxuICAgIGdldCBvdXRwdXRLZXlzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jb21iaW5lRG9jdW1lbnRzQ2hhaW4ub3V0cHV0S2V5cy5jb25jYXQodGhpcy5yZXR1cm5Tb3VyY2VEb2N1bWVudHMgPyBbXCJzb3VyY2VEb2N1bWVudHNcIl0gOiBbXSk7XG4gICAgfVxuICAgIGNvbnN0cnVjdG9yKGZpZWxkcykge1xuICAgICAgICBzdXBlcihmaWVsZHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJrXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiA0XG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJpbnB1dEtleVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJxdWVyeVwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJ2ZWN0b3JzdG9yZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJjb21iaW5lRG9jdW1lbnRzQ2hhaW5cIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHZvaWQgMFxuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwicmV0dXJuU291cmNlRG9jdW1lbnRzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICAgICAgdGhpcy52ZWN0b3JzdG9yZSA9IGZpZWxkcy52ZWN0b3JzdG9yZTtcbiAgICAgICAgdGhpcy5jb21iaW5lRG9jdW1lbnRzQ2hhaW4gPSBmaWVsZHMuY29tYmluZURvY3VtZW50c0NoYWluO1xuICAgICAgICB0aGlzLmlucHV0S2V5ID0gZmllbGRzLmlucHV0S2V5ID8/IHRoaXMuaW5wdXRLZXk7XG4gICAgICAgIHRoaXMuayA9IGZpZWxkcy5rID8/IHRoaXMuaztcbiAgICAgICAgdGhpcy5yZXR1cm5Tb3VyY2VEb2N1bWVudHMgPVxuICAgICAgICAgICAgZmllbGRzLnJldHVyblNvdXJjZURvY3VtZW50cyA/PyB0aGlzLnJldHVyblNvdXJjZURvY3VtZW50cztcbiAgICB9XG4gICAgLyoqIEBpZ25vcmUgKi9cbiAgICBhc3luYyBfY2FsbCh2YWx1ZXMsIHJ1bk1hbmFnZXIpIHtcbiAgICAgICAgaWYgKCEodGhpcy5pbnB1dEtleSBpbiB2YWx1ZXMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFF1ZXN0aW9uIGtleSAke3RoaXMuaW5wdXRLZXl9IG5vdCBmb3VuZC5gKTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCBxdWVzdGlvbiA9IHZhbHVlc1t0aGlzLmlucHV0S2V5XTtcbiAgICAgICAgY29uc3QgZG9jcyA9IGF3YWl0IHRoaXMudmVjdG9yc3RvcmUuc2ltaWxhcml0eVNlYXJjaChxdWVzdGlvbiwgdGhpcy5rLCB2YWx1ZXMuZmlsdGVyLCBydW5NYW5hZ2VyPy5nZXRDaGlsZChcInZlY3RvcnN0b3JlXCIpKTtcbiAgICAgICAgY29uc3QgaW5wdXRzID0geyBxdWVzdGlvbiwgaW5wdXRfZG9jdW1lbnRzOiBkb2NzIH07XG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IHRoaXMuY29tYmluZURvY3VtZW50c0NoYWluLmNhbGwoaW5wdXRzLCBydW5NYW5hZ2VyPy5nZXRDaGlsZChcImNvbWJpbmVfZG9jdW1lbnRzXCIpKTtcbiAgICAgICAgaWYgKHRoaXMucmV0dXJuU291cmNlRG9jdW1lbnRzKSB7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIC4uLnJlc3VsdCxcbiAgICAgICAgICAgICAgICBzb3VyY2VEb2N1bWVudHM6IGRvY3MsXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgfVxuICAgIF9jaGFpblR5cGUoKSB7XG4gICAgICAgIHJldHVybiBcInZlY3Rvcl9kYl9xYVwiO1xuICAgIH1cbiAgICBzdGF0aWMgYXN5bmMgZGVzZXJpYWxpemUoZGF0YSwgdmFsdWVzKSB7XG4gICAgICAgIGlmICghKFwidmVjdG9yc3RvcmVcIiBpbiB2YWx1ZXMpKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYE5lZWQgdG8gcGFzcyBpbiBhIHZlY3RvcnN0b3JlIHRvIGRlc2VyaWFsaXplIFZlY3RvckRCUUFDaGFpbmApO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IHsgdmVjdG9yc3RvcmUgfSA9IHZhbHVlcztcbiAgICAgICAgaWYgKCFkYXRhLmNvbWJpbmVfZG9jdW1lbnRzX2NoYWluKSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoYFZlY3RvckRCUUFDaGFpbiBtdXN0IGhhdmUgY29tYmluZV9kb2N1bWVudHNfY2hhaW4gaW4gc2VyaWFsaXplZCBkYXRhYCk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIG5ldyBWZWN0b3JEQlFBQ2hhaW4oe1xuICAgICAgICAgICAgY29tYmluZURvY3VtZW50c0NoYWluOiBhd2FpdCBCYXNlQ2hhaW4uZGVzZXJpYWxpemUoZGF0YS5jb21iaW5lX2RvY3VtZW50c19jaGFpbiksXG4gICAgICAgICAgICBrOiBkYXRhLmssXG4gICAgICAgICAgICB2ZWN0b3JzdG9yZSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHNlcmlhbGl6ZSgpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIF90eXBlOiB0aGlzLl9jaGFpblR5cGUoKSxcbiAgICAgICAgICAgIGNvbWJpbmVfZG9jdW1lbnRzX2NoYWluOiB0aGlzLmNvbWJpbmVEb2N1bWVudHNDaGFpbi5zZXJpYWxpemUoKSxcbiAgICAgICAgICAgIGs6IHRoaXMuayxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgLyoqXG4gICAgICogU3RhdGljIG1ldGhvZCB0aGF0IGNyZWF0ZXMgYSBWZWN0b3JEQlFBQ2hhaW4gaW5zdGFuY2UgZnJvbSBhXG4gICAgICogQmFzZUxhbmd1YWdlTW9kZWwgYW5kIGEgdmVjdG9yIHN0b3JlLiBJdCBhbHNvIGFjY2VwdHMgb3B0aW9uYWwgb3B0aW9uc1xuICAgICAqIHRvIGN1c3RvbWl6ZSB0aGUgY2hhaW4uXG4gICAgICogQHBhcmFtIGxsbSBUaGUgQmFzZUxhbmd1YWdlTW9kZWwgaW5zdGFuY2UuXG4gICAgICogQHBhcmFtIHZlY3RvcnN0b3JlIFRoZSB2ZWN0b3Igc3RvcmUgdXNlZCBmb3Igc2ltaWxhcml0eSBzZWFyY2guXG4gICAgICogQHBhcmFtIG9wdGlvbnMgT3B0aW9uYWwgb3B0aW9ucyB0byBjdXN0b21pemUgdGhlIGNoYWluLlxuICAgICAqIEByZXR1cm5zIEEgbmV3IGluc3RhbmNlIG9mIFZlY3RvckRCUUFDaGFpbi5cbiAgICAgKi9cbiAgICBzdGF0aWMgZnJvbUxMTShsbG0sIHZlY3RvcnN0b3JlLCBvcHRpb25zKSB7XG4gICAgICAgIGNvbnN0IHFhQ2hhaW4gPSBsb2FkUUFTdHVmZkNoYWluKGxsbSk7XG4gICAgICAgIHJldHVybiBuZXcgdGhpcyh7XG4gICAgICAgICAgICB2ZWN0b3JzdG9yZSxcbiAgICAgICAgICAgIGNvbWJpbmVEb2N1bWVudHNDaGFpbjogcWFDaGFpbixcbiAgICAgICAgICAgIC4uLm9wdGlvbnMsXG4gICAgICAgIH0pO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/vector_db_qa.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/output_parsers/noop.js":
/*!********************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/output_parsers/noop.js ***!
  \********************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   NoOpOutputParser: () => (/* binding */ NoOpOutputParser)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/output_parsers */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/output_parsers.js\");\n\n/**\n * The NoOpOutputParser class is a type of output parser that does not\n * perform any operations on the output. It extends the BaseOutputParser\n * class and is part of the LangChain's output parsers module. This class\n * is useful in scenarios where the raw output of the Large Language\n * Models (LLMs) is required.\n */\nclass NoOpOutputParser extends _langchain_core_output_parsers__WEBPACK_IMPORTED_MODULE_0__.BaseOutputParser {\n    constructor() {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"output_parsers\", \"default\"]\n        });\n        Object.defineProperty(this, \"lc_serializable\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: true\n        });\n    }\n    static lc_name() {\n        return \"NoOpOutputParser\";\n    }\n    /**\n     * This method takes a string as input and returns the same string as\n     * output. It does not perform any operations on the input string.\n     * @param text The input string to be parsed.\n     * @returns The same input string without any operations performed on it.\n     */\n    parse(text) {\n        return Promise.resolve(text);\n    }\n    /**\n     * This method returns an empty string. It does not provide any formatting\n     * instructions.\n     * @returns An empty string, indicating no formatting instructions.\n     */\n    getFormatInstructions() {\n        return \"\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9vdXRwdXRfcGFyc2Vycy9ub29wLmpzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQWtFO0FBQ2xFO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sK0JBQStCLDRFQUFnQjtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC9vdXRwdXRfcGFyc2Vycy9ub29wLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJhc2VPdXRwdXRQYXJzZXIgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL291dHB1dF9wYXJzZXJzXCI7XG4vKipcbiAqIFRoZSBOb09wT3V0cHV0UGFyc2VyIGNsYXNzIGlzIGEgdHlwZSBvZiBvdXRwdXQgcGFyc2VyIHRoYXQgZG9lcyBub3RcbiAqIHBlcmZvcm0gYW55IG9wZXJhdGlvbnMgb24gdGhlIG91dHB1dC4gSXQgZXh0ZW5kcyB0aGUgQmFzZU91dHB1dFBhcnNlclxuICogY2xhc3MgYW5kIGlzIHBhcnQgb2YgdGhlIExhbmdDaGFpbidzIG91dHB1dCBwYXJzZXJzIG1vZHVsZS4gVGhpcyBjbGFzc1xuICogaXMgdXNlZnVsIGluIHNjZW5hcmlvcyB3aGVyZSB0aGUgcmF3IG91dHB1dCBvZiB0aGUgTGFyZ2UgTGFuZ3VhZ2VcbiAqIE1vZGVscyAoTExNcykgaXMgcmVxdWlyZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBOb09wT3V0cHV0UGFyc2VyIGV4dGVuZHMgQmFzZU91dHB1dFBhcnNlciB7XG4gICAgY29uc3RydWN0b3IoKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxjX25hbWVzcGFjZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogW1wibGFuZ2NoYWluXCIsIFwib3V0cHV0X3BhcnNlcnNcIiwgXCJkZWZhdWx0XCJdXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJsY19zZXJpYWxpemFibGVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJOb09wT3V0cHV0UGFyc2VyXCI7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHRha2VzIGEgc3RyaW5nIGFzIGlucHV0IGFuZCByZXR1cm5zIHRoZSBzYW1lIHN0cmluZyBhc1xuICAgICAqIG91dHB1dC4gSXQgZG9lcyBub3QgcGVyZm9ybSBhbnkgb3BlcmF0aW9ucyBvbiB0aGUgaW5wdXQgc3RyaW5nLlxuICAgICAqIEBwYXJhbSB0ZXh0IFRoZSBpbnB1dCBzdHJpbmcgdG8gYmUgcGFyc2VkLlxuICAgICAqIEByZXR1cm5zIFRoZSBzYW1lIGlucHV0IHN0cmluZyB3aXRob3V0IGFueSBvcGVyYXRpb25zIHBlcmZvcm1lZCBvbiBpdC5cbiAgICAgKi9cbiAgICBwYXJzZSh0ZXh0KSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUodGV4dCk7XG4gICAgfVxuICAgIC8qKlxuICAgICAqIFRoaXMgbWV0aG9kIHJldHVybnMgYW4gZW1wdHkgc3RyaW5nLiBJdCBkb2VzIG5vdCBwcm92aWRlIGFueSBmb3JtYXR0aW5nXG4gICAgICogaW5zdHJ1Y3Rpb25zLlxuICAgICAqIEByZXR1cm5zIEFuIGVtcHR5IHN0cmluZywgaW5kaWNhdGluZyBubyBmb3JtYXR0aW5nIGluc3RydWN0aW9ucy5cbiAgICAgKi9cbiAgICBnZXRGb3JtYXRJbnN0cnVjdGlvbnMoKSB7XG4gICAgICAgIHJldHVybiBcIlwiO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/output_parsers/noop.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/base.js":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/base.js ***!
  \***********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   StructuredTool: () => (/* reexport safe */ _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.StructuredTool),\n/* harmony export */   Tool: () => (/* reexport safe */ _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool),\n/* harmony export */   ToolInputParsingException: () => (/* reexport safe */ _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.ToolInputParsingException)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/tools.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9iYXNlLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFBeUYiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjE5X0BsYW5nY2hhaW4rYW50aHJvcGljQDAuMy4xM19AbGFuZ2NoYWluK2NvcmVAMC4zLjQwX29wZW5haUA0Ljg1LjJfd3NAOC4xOC4wX2JfbjVobXZkNXdrM2VveXdidHh0aTd4aXZ2eHUvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L3Rvb2xzL2Jhc2UuanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgVG9vbElucHV0UGFyc2luZ0V4Y2VwdGlvbiwgU3RydWN0dXJlZFRvb2wsIFRvb2wsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS90b29sc1wiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/base.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/chain.js":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/chain.js ***!
  \************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainTool: () => (/* binding */ ChainTool)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/tools.js\");\n\n/**\n * @deprecated Wrap in a DynamicTool instead.\n * Class that extends DynamicTool for creating tools that can run chains.\n * Takes an instance of a class that extends BaseChain as a parameter in\n * its constructor and uses it to run the chain when its 'func' method is\n * called.\n */\nclass ChainTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.DynamicTool {\n    static lc_name() {\n        return \"ChainTool\";\n    }\n    constructor({ chain, ...rest }) {\n        super({\n            ...rest,\n            func: async (input, runManager) => chain.run(input, runManager?.getChild()),\n        });\n        Object.defineProperty(this, \"chain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.chain = chain;\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9jaGFpbi5qcyIsIm1hcHBpbmdzIjoiOzs7OztBQUFvRDtBQUNwRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLHdCQUF3Qiw4REFBVztBQUMxQztBQUNBO0FBQ0E7QUFDQSxrQkFBa0IsZ0JBQWdCO0FBQ2xDO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTlfQGxhbmdjaGFpbithbnRocm9waWNAMC4zLjEzX0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYl9uNWhtdmQ1d2szZW95d2J0eHRpN3hpdnZ4dS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdG9vbHMvY2hhaW4uanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgRHluYW1pY1Rvb2wgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Rvb2xzXCI7XG4vKipcbiAqIEBkZXByZWNhdGVkIFdyYXAgaW4gYSBEeW5hbWljVG9vbCBpbnN0ZWFkLlxuICogQ2xhc3MgdGhhdCBleHRlbmRzIER5bmFtaWNUb29sIGZvciBjcmVhdGluZyB0b29scyB0aGF0IGNhbiBydW4gY2hhaW5zLlxuICogVGFrZXMgYW4gaW5zdGFuY2Ugb2YgYSBjbGFzcyB0aGF0IGV4dGVuZHMgQmFzZUNoYWluIGFzIGEgcGFyYW1ldGVyIGluXG4gKiBpdHMgY29uc3RydWN0b3IgYW5kIHVzZXMgaXQgdG8gcnVuIHRoZSBjaGFpbiB3aGVuIGl0cyAnZnVuYycgbWV0aG9kIGlzXG4gKiBjYWxsZWQuXG4gKi9cbmV4cG9ydCBjbGFzcyBDaGFpblRvb2wgZXh0ZW5kcyBEeW5hbWljVG9vbCB7XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIkNoYWluVG9vbFwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcih7IGNoYWluLCAuLi5yZXN0IH0pIHtcbiAgICAgICAgc3VwZXIoe1xuICAgICAgICAgICAgLi4ucmVzdCxcbiAgICAgICAgICAgIGZ1bmM6IGFzeW5jIChpbnB1dCwgcnVuTWFuYWdlcikgPT4gY2hhaW4ucnVuKGlucHV0LCBydW5NYW5hZ2VyPy5nZXRDaGlsZCgpKSxcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNoYWluXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuY2hhaW4gPSBjaGFpbjtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/chain.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/convert_to_openai.js":
/*!************************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/convert_to_openai.js ***!
  \************************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   formatToOpenAIAssistantTool: () => (/* binding */ formatToOpenAIAssistantTool),\n/* harmony export */   formatToOpenAIFunction: () => (/* reexport safe */ _langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__.convertToOpenAIFunction),\n/* harmony export */   formatToOpenAITool: () => (/* reexport safe */ _langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__.convertToOpenAITool)\n/* harmony export */ });\n/* harmony import */ var zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! zod-to-json-schema */ \"(rsc)/./node_modules/.pnpm/zod-to-json-schema@3.24.1_zod@3.24.2/node_modules/zod-to-json-schema/dist/esm/index.js\");\n/* harmony import */ var _langchain_core_utils_function_calling__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/utils/function_calling */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/utils/function_calling.js\");\n\n\n\nfunction formatToOpenAIAssistantTool(tool) {\n    return {\n        type: \"function\",\n        function: {\n            name: tool.name,\n            description: tool.description,\n            parameters: (0,zod_to_json_schema__WEBPACK_IMPORTED_MODULE_0__.zodToJsonSchema)(tool.schema),\n        },\n    };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9jb252ZXJ0X3RvX29wZW5haS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7OztBQUFxRDtBQUNrRDtBQUNFO0FBQ2xHO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHdCQUF3QixtRUFBZTtBQUN2QyxTQUFTO0FBQ1Q7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTlfQGxhbmdjaGFpbithbnRocm9waWNAMC4zLjEzX0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYl9uNWhtdmQ1d2szZW95d2J0eHRpN3hpdnZ4dS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdG9vbHMvY29udmVydF90b19vcGVuYWkuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgem9kVG9Kc29uU2NoZW1hIH0gZnJvbSBcInpvZC10by1qc29uLXNjaGVtYVwiO1xuaW1wb3J0IHsgY29udmVydFRvT3BlbkFJRnVuY3Rpb24sIGNvbnZlcnRUb09wZW5BSVRvb2wsIH0gZnJvbSBcIkBsYW5nY2hhaW4vY29yZS91dGlscy9mdW5jdGlvbl9jYWxsaW5nXCI7XG5leHBvcnQgeyBjb252ZXJ0VG9PcGVuQUlGdW5jdGlvbiBhcyBmb3JtYXRUb09wZW5BSUZ1bmN0aW9uLCBjb252ZXJ0VG9PcGVuQUlUb29sIGFzIGZvcm1hdFRvT3BlbkFJVG9vbCwgfTtcbmV4cG9ydCBmdW5jdGlvbiBmb3JtYXRUb09wZW5BSUFzc2lzdGFudFRvb2wodG9vbCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IFwiZnVuY3Rpb25cIixcbiAgICAgICAgZnVuY3Rpb246IHtcbiAgICAgICAgICAgIG5hbWU6IHRvb2wubmFtZSxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiB0b29sLmRlc2NyaXB0aW9uLFxuICAgICAgICAgICAgcGFyYW1ldGVyczogem9kVG9Kc29uU2NoZW1hKHRvb2wuc2NoZW1hKSxcbiAgICAgICAgfSxcbiAgICB9O1xufVxuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/convert_to_openai.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/dynamic.js":
/*!**************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/dynamic.js ***!
  \**************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DynamicStructuredTool: () => (/* reexport safe */ _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.DynamicStructuredTool),\n/* harmony export */   DynamicTool: () => (/* reexport safe */ _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.DynamicTool)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/tools.js\");\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9keW5hbWljLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUE0RSIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTlfQGxhbmdjaGFpbithbnRocm9waWNAMC4zLjEzX0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYl9uNWhtdmQ1d2szZW95d2J0eHRpN3hpdnZ4dS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdG9vbHMvZHluYW1pYy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgeyBEeW5hbWljVG9vbCwgRHluYW1pY1N0cnVjdHVyZWRUb29sLCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvdG9vbHNcIjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/dynamic.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/fs.js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/fs.js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ReadFileTool: () => (/* binding */ ReadFileTool),\n/* harmony export */   WriteFileTool: () => (/* binding */ WriteFileTool)\n/* harmony export */ });\n/* harmony import */ var zod__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! zod */ \"(rsc)/./node_modules/.pnpm/zod@3.24.2/node_modules/zod/lib/index.mjs\");\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/tools.js\");\n\n\n/**\n * Class for reading files from the disk. Extends the StructuredTool\n * class.\n */\nclass ReadFileTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.StructuredTool {\n    static lc_name() {\n        return \"ReadFileTool\";\n    }\n    constructor({ store }) {\n        super(...arguments);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n                file_path: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().describe(\"name of file\"),\n            })\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"read_file\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Read file from disk\"\n        });\n        Object.defineProperty(this, \"store\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.store = store;\n    }\n    async _call({ file_path }) {\n        return await this.store.readFile(file_path);\n    }\n}\n/**\n * Class for writing data to files on the disk. Extends the StructuredTool\n * class.\n */\nclass WriteFileTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.StructuredTool {\n    static lc_name() {\n        return \"WriteFileTool\";\n    }\n    constructor({ store, ...rest }) {\n        super(rest);\n        Object.defineProperty(this, \"schema\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: zod__WEBPACK_IMPORTED_MODULE_1__.z.object({\n                file_path: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().describe(\"name of file\"),\n                text: zod__WEBPACK_IMPORTED_MODULE_1__.z.string().describe(\"text to write to file\"),\n            })\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"write_file\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"Write file from disk\"\n        });\n        Object.defineProperty(this, \"store\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.store = store;\n    }\n    async _call({ file_path, text }) {\n        await this.store.writeFile(file_path, text);\n        return \"File written to successfully.\";\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9mcy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7O0FBQXdCO0FBQytCO0FBQ3ZEO0FBQ0E7QUFDQTtBQUNBO0FBQ08sMkJBQTJCLGlFQUFjO0FBQ2hEO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixPQUFPO0FBQ3pCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxtQkFBbUIsa0NBQUM7QUFDcEIsMkJBQTJCLGtDQUFDO0FBQzVCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGtCQUFrQixXQUFXO0FBQzdCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sNEJBQTRCLGlFQUFjO0FBQ2pEO0FBQ0E7QUFDQTtBQUNBLGtCQUFrQixnQkFBZ0I7QUFDbEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLG1CQUFtQixrQ0FBQztBQUNwQiwyQkFBMkIsa0NBQUM7QUFDNUIsc0JBQXNCLGtDQUFDO0FBQ3ZCLGFBQWE7QUFDYixTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBLGtCQUFrQixpQkFBaUI7QUFDbkM7QUFDQTtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjE5X0BsYW5nY2hhaW4rYW50aHJvcGljQDAuMy4xM19AbGFuZ2NoYWluK2NvcmVAMC4zLjQwX29wZW5haUA0Ljg1LjJfd3NAOC4xOC4wX2JfbjVobXZkNXdrM2VveXdidHh0aTd4aXZ2eHUvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L3Rvb2xzL2ZzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IHogfSBmcm9tIFwiem9kXCI7XG5pbXBvcnQgeyBTdHJ1Y3R1cmVkVG9vbCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvdG9vbHNcIjtcbi8qKlxuICogQ2xhc3MgZm9yIHJlYWRpbmcgZmlsZXMgZnJvbSB0aGUgZGlzay4gRXh0ZW5kcyB0aGUgU3RydWN0dXJlZFRvb2xcbiAqIGNsYXNzLlxuICovXG5leHBvcnQgY2xhc3MgUmVhZEZpbGVUb29sIGV4dGVuZHMgU3RydWN0dXJlZFRvb2wge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJSZWFkRmlsZVRvb2xcIjtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoeyBzdG9yZSB9KSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNjaGVtYVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogei5vYmplY3Qoe1xuICAgICAgICAgICAgICAgIGZpbGVfcGF0aDogei5zdHJpbmcoKS5kZXNjcmliZShcIm5hbWUgb2YgZmlsZVwiKSxcbiAgICAgICAgICAgIH0pXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcInJlYWRfZmlsZVwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJkZXNjcmlwdGlvblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJSZWFkIGZpbGUgZnJvbSBkaXNrXCJcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInN0b3JlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMuc3RvcmUgPSBzdG9yZTtcbiAgICB9XG4gICAgYXN5bmMgX2NhbGwoeyBmaWxlX3BhdGggfSkge1xuICAgICAgICByZXR1cm4gYXdhaXQgdGhpcy5zdG9yZS5yZWFkRmlsZShmaWxlX3BhdGgpO1xuICAgIH1cbn1cbi8qKlxuICogQ2xhc3MgZm9yIHdyaXRpbmcgZGF0YSB0byBmaWxlcyBvbiB0aGUgZGlzay4gRXh0ZW5kcyB0aGUgU3RydWN0dXJlZFRvb2xcbiAqIGNsYXNzLlxuICovXG5leHBvcnQgY2xhc3MgV3JpdGVGaWxlVG9vbCBleHRlbmRzIFN0cnVjdHVyZWRUb29sIHtcbiAgICBzdGF0aWMgbGNfbmFtZSgpIHtcbiAgICAgICAgcmV0dXJuIFwiV3JpdGVGaWxlVG9vbFwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3Rvcih7IHN0b3JlLCAuLi5yZXN0IH0pIHtcbiAgICAgICAgc3VwZXIocmVzdCk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInNjaGVtYVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogei5vYmplY3Qoe1xuICAgICAgICAgICAgICAgIGZpbGVfcGF0aDogei5zdHJpbmcoKS5kZXNjcmliZShcIm5hbWUgb2YgZmlsZVwiKSxcbiAgICAgICAgICAgICAgICB0ZXh0OiB6LnN0cmluZygpLmRlc2NyaWJlKFwidGV4dCB0byB3cml0ZSB0byBmaWxlXCIpLFxuICAgICAgICAgICAgfSlcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm5hbWVcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IFwid3JpdGVfZmlsZVwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJkZXNjcmlwdGlvblwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJXcml0ZSBmaWxlIGZyb20gZGlza1wiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJzdG9yZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLnN0b3JlID0gc3RvcmU7XG4gICAgfVxuICAgIGFzeW5jIF9jYWxsKHsgZmlsZV9wYXRoLCB0ZXh0IH0pIHtcbiAgICAgICAgYXdhaXQgdGhpcy5zdG9yZS53cml0ZUZpbGUoZmlsZV9wYXRoLCB0ZXh0KTtcbiAgICAgICAgcmV0dXJuIFwiRmlsZSB3cml0dGVuIHRvIHN1Y2Nlc3NmdWxseS5cIjtcbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/fs.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/index.js":
/*!************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/index.js ***!
  \************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   ChainTool: () => (/* reexport safe */ _chain_js__WEBPACK_IMPORTED_MODULE_2__.ChainTool),\n/* harmony export */   DynamicStructuredTool: () => (/* reexport safe */ _dynamic_js__WEBPACK_IMPORTED_MODULE_1__.DynamicStructuredTool),\n/* harmony export */   DynamicTool: () => (/* reexport safe */ _dynamic_js__WEBPACK_IMPORTED_MODULE_1__.DynamicTool),\n/* harmony export */   JsonGetValueTool: () => (/* reexport safe */ _json_js__WEBPACK_IMPORTED_MODULE_3__.JsonGetValueTool),\n/* harmony export */   JsonListKeysTool: () => (/* reexport safe */ _json_js__WEBPACK_IMPORTED_MODULE_3__.JsonListKeysTool),\n/* harmony export */   JsonSpec: () => (/* reexport safe */ _json_js__WEBPACK_IMPORTED_MODULE_3__.JsonSpec),\n/* harmony export */   ReadFileTool: () => (/* reexport safe */ _fs_js__WEBPACK_IMPORTED_MODULE_6__.ReadFileTool),\n/* harmony export */   RequestsGetTool: () => (/* reexport safe */ _requests_js__WEBPACK_IMPORTED_MODULE_4__.RequestsGetTool),\n/* harmony export */   RequestsPostTool: () => (/* reexport safe */ _requests_js__WEBPACK_IMPORTED_MODULE_4__.RequestsPostTool),\n/* harmony export */   StructuredTool: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.StructuredTool),\n/* harmony export */   Tool: () => (/* reexport safe */ _base_js__WEBPACK_IMPORTED_MODULE_0__.Tool),\n/* harmony export */   VectorStoreQATool: () => (/* reexport safe */ _vectorstore_js__WEBPACK_IMPORTED_MODULE_5__.VectorStoreQATool),\n/* harmony export */   WriteFileTool: () => (/* reexport safe */ _fs_js__WEBPACK_IMPORTED_MODULE_6__.WriteFileTool),\n/* harmony export */   formatToOpenAIFunction: () => (/* reexport safe */ _convert_to_openai_js__WEBPACK_IMPORTED_MODULE_7__.formatToOpenAIFunction),\n/* harmony export */   formatToOpenAITool: () => (/* reexport safe */ _convert_to_openai_js__WEBPACK_IMPORTED_MODULE_7__.formatToOpenAITool)\n/* harmony export */ });\n/* harmony import */ var _base_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./base.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/base.js\");\n/* harmony import */ var _dynamic_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./dynamic.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/dynamic.js\");\n/* harmony import */ var _chain_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./chain.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/chain.js\");\n/* harmony import */ var _json_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./json.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/json.js\");\n/* harmony import */ var _requests_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./requests.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/requests.js\");\n/* harmony import */ var _vectorstore_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./vectorstore.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/vectorstore.js\");\n/* harmony import */ var _fs_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fs.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/fs.js\");\n/* harmony import */ var _convert_to_openai_js__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ./convert_to_openai.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/convert_to_openai.js\");\n\n\n\n\n\n\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9pbmRleC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQUFpRDtBQUNrQjtBQUM1QjtBQUNtQztBQUNSO0FBQ2I7QUFDQztBQUMrQiIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTlfQGxhbmdjaGFpbithbnRocm9waWNAMC4zLjEzX0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYl9uNWhtdmQ1d2szZW95d2J0eHRpN3hpdnZ4dS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdG9vbHMvaW5kZXguanMiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IHsgVG9vbCwgU3RydWN0dXJlZFRvb2wgfSBmcm9tIFwiLi9iYXNlLmpzXCI7XG5leHBvcnQgeyBEeW5hbWljVG9vbCwgRHluYW1pY1N0cnVjdHVyZWRUb29sLCB9IGZyb20gXCIuL2R5bmFtaWMuanNcIjtcbmV4cG9ydCB7IENoYWluVG9vbCB9IGZyb20gXCIuL2NoYWluLmpzXCI7XG5leHBvcnQgeyBKc29uU3BlYywgSnNvbkxpc3RLZXlzVG9vbCwgSnNvbkdldFZhbHVlVG9vbCwgfSBmcm9tIFwiLi9qc29uLmpzXCI7XG5leHBvcnQgeyBSZXF1ZXN0c0dldFRvb2wsIFJlcXVlc3RzUG9zdFRvb2wgfSBmcm9tIFwiLi9yZXF1ZXN0cy5qc1wiO1xuZXhwb3J0IHsgVmVjdG9yU3RvcmVRQVRvb2wgfSBmcm9tIFwiLi92ZWN0b3JzdG9yZS5qc1wiO1xuZXhwb3J0IHsgUmVhZEZpbGVUb29sLCBXcml0ZUZpbGVUb29sIH0gZnJvbSBcIi4vZnMuanNcIjtcbmV4cG9ydCB7IGZvcm1hdFRvT3BlbkFJRnVuY3Rpb24sIGZvcm1hdFRvT3BlbkFJVG9vbCwgfSBmcm9tIFwiLi9jb252ZXJ0X3RvX29wZW5haS5qc1wiO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/json.js":
/*!***********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/json.js ***!
  \***********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   JsonGetValueTool: () => (/* binding */ JsonGetValueTool),\n/* harmony export */   JsonListKeysTool: () => (/* binding */ JsonListKeysTool),\n/* harmony export */   JsonSpec: () => (/* binding */ JsonSpec)\n/* harmony export */ });\n/* harmony import */ var jsonpointer__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! jsonpointer */ \"(rsc)/./node_modules/.pnpm/jsonpointer@5.0.1/node_modules/jsonpointer/jsonpointer.js\");\n/* harmony import */ var _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @langchain/core/load/serializable */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/load/serializable.js\");\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/tools.js\");\n\n\n\n/**\n * Represents a JSON object in the LangChain framework. Provides methods\n * to get keys and values from the JSON object.\n */\nclass JsonSpec extends _langchain_core_load_serializable__WEBPACK_IMPORTED_MODULE_1__.Serializable {\n    constructor(obj, max_value_length = 4000) {\n        super(...arguments);\n        Object.defineProperty(this, \"lc_namespace\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: [\"langchain\", \"tools\", \"json\"]\n        });\n        Object.defineProperty(this, \"obj\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"maxValueLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 4000\n        });\n        this.obj = obj;\n        this.maxValueLength = max_value_length;\n    }\n    /**\n     * Retrieves all keys at a given path in the JSON object.\n     * @param input The path to the keys in the JSON object, provided as a string in JSON pointer syntax.\n     * @returns A string containing all keys at the given path, separated by commas.\n     */\n    getKeys(input) {\n        const pointer = jsonpointer__WEBPACK_IMPORTED_MODULE_0__.compile(input);\n        const res = pointer.get(this.obj);\n        if (typeof res === \"object\" && !Array.isArray(res) && res !== null) {\n            return Object.keys(res)\n                .map((i) => i.replaceAll(\"~\", \"~0\").replaceAll(\"/\", \"~1\"))\n                .join(\", \");\n        }\n        throw new Error(`Value at ${input} is not a dictionary, get the value directly instead.`);\n    }\n    /**\n     * Retrieves the value at a given path in the JSON object.\n     * @param input The path to the value in the JSON object, provided as a string in JSON pointer syntax.\n     * @returns The value at the given path in the JSON object, as a string. If the value is a large dictionary or exceeds the maximum length, a message is returned instead.\n     */\n    getValue(input) {\n        const pointer = jsonpointer__WEBPACK_IMPORTED_MODULE_0__.compile(input);\n        const res = pointer.get(this.obj);\n        if (res === null || res === undefined) {\n            throw new Error(`Value at ${input} is null or undefined.`);\n        }\n        const str = typeof res === \"object\" ? JSON.stringify(res) : res.toString();\n        if (typeof res === \"object\" &&\n            !Array.isArray(res) &&\n            str.length > this.maxValueLength) {\n            return `Value is a large dictionary, should explore its keys directly.`;\n        }\n        if (str.length > this.maxValueLength) {\n            return `${str.slice(0, this.maxValueLength)}...`;\n        }\n        return str;\n    }\n}\n/**\n * A tool in the LangChain framework that lists all keys at a given path\n * in a JSON object.\n */\nclass JsonListKeysTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_2__.Tool {\n    static lc_name() {\n        return \"JsonListKeysTool\";\n    }\n    constructor(fields) {\n        if (!(\"jsonSpec\" in fields)) {\n            // eslint-disable-next-line no-param-reassign\n            fields = { jsonSpec: fields };\n        }\n        super(fields);\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"json_list_keys\"\n        });\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Can be used to list all keys at a given path.\n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n        });\n        this.jsonSpec = fields.jsonSpec;\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            return this.jsonSpec.getKeys(input);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n/**\n * A tool in the LangChain framework that retrieves the value at a given\n * path in a JSON object.\n */\nclass JsonGetValueTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_2__.Tool {\n    static lc_name() {\n        return \"JsonGetValueTool\";\n    }\n    constructor(jsonSpec) {\n        super();\n        Object.defineProperty(this, \"jsonSpec\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: jsonSpec\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"json_get_value\"\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Can be used to see value in string format at a given path.\n    Before calling this you should be SURE that the path to this exists.\n    The input is a text representation of the path to the json as json pointer syntax (e.g. /key1/0/key2).`\n        });\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            return this.jsonSpec.getValue(input);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/json.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/requests.js":
/*!***************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/requests.js ***!
  \***************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   RequestsGetTool: () => (/* binding */ RequestsGetTool),\n/* harmony export */   RequestsPostTool: () => (/* binding */ RequestsPostTool)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/tools.js\");\n\n/**\n * Class for making GET requests. Extends the Tool class and implements\n * the RequestTool interface. The input should be a URL string, and the\n * output will be the text response of the GET request.\n */\nclass RequestsGetTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    static lc_name() {\n        return \"RequestsGetTool\";\n    }\n    constructor(headers = {}, { maxOutputLength } = {}) {\n        super(...arguments);\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: headers\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"requests_get\"\n        });\n        Object.defineProperty(this, \"maxOutputLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: 2000\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `A portal to the internet. Use this when you need to get specific content from a website.\n  Input should be a url string (i.e. \"https://www.google.com\"). The output will be the text response of the GET request.`\n        });\n        this.maxOutputLength = maxOutputLength ?? this.maxOutputLength;\n    }\n    /** @ignore */\n    async _call(input) {\n        const res = await fetch(input, {\n            headers: this.headers,\n        });\n        const text = await res.text();\n        return text.slice(0, this.maxOutputLength);\n    }\n}\n/**\n * Class for making POST requests. Extends the Tool class and implements\n * the RequestTool interface. The input should be a JSON string with two\n * keys: 'url' and 'data'. The output will be the text response of the\n * POST request.\n */\nclass RequestsPostTool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    static lc_name() {\n        return \"RequestsPostTool\";\n    }\n    constructor(headers = {}, { maxOutputLength } = {}) {\n        super(...arguments);\n        Object.defineProperty(this, \"headers\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: headers\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: \"requests_post\"\n        });\n        Object.defineProperty(this, \"maxOutputLength\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: Infinity\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: `Use this when you want to POST to a website.\n  Input should be a json string with two keys: \"url\" and \"data\".\n  The value of \"url\" should be a string, and the value of \"data\" should be a dictionary of\n  key-value pairs you want to POST to the url as a JSON body.\n  Be careful to always use double quotes for strings in the json string\n  The output will be the text response of the POST request.`\n        });\n        this.maxOutputLength = maxOutputLength ?? this.maxOutputLength;\n    }\n    /** @ignore */\n    async _call(input) {\n        try {\n            const { url, data } = JSON.parse(input);\n            const res = await fetch(url, {\n                method: \"POST\",\n                headers: this.headers,\n                body: JSON.stringify(data),\n            });\n            const text = await res.text();\n            return text.slice(0, this.maxOutputLength);\n        }\n        catch (error) {\n            return `${error}`;\n        }\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy9yZXF1ZXN0cy5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFDN0M7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPLDhCQUE4Qix1REFBSTtBQUN6QztBQUNBO0FBQ0E7QUFDQSw0QkFBNEIsSUFBSSxrQkFBa0IsSUFBSTtBQUN0RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTywrQkFBK0IsdURBQUk7QUFDMUM7QUFDQTtBQUNBO0FBQ0EsNEJBQTRCLElBQUksa0JBQWtCLElBQUk7QUFDdEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CLFlBQVk7QUFDaEM7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQSxzQkFBc0IsTUFBTTtBQUM1QjtBQUNBO0FBQ0EiLCJzb3VyY2VzIjpbIi9Vc2Vycy9mdWppYXdhbmcvRGVza3RvcC9jaGF0Ym90L25vZGVfbW9kdWxlcy8ucG5wbS9sYW5nY2hhaW5AMC4zLjE5X0BsYW5nY2hhaW4rYW50aHJvcGljQDAuMy4xM19AbGFuZ2NoYWluK2NvcmVAMC4zLjQwX29wZW5haUA0Ljg1LjJfd3NAOC4xOC4wX2JfbjVobXZkNXdrM2VveXdidHh0aTd4aXZ2eHUvbm9kZV9tb2R1bGVzL2xhbmdjaGFpbi9kaXN0L3Rvb2xzL3JlcXVlc3RzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IFRvb2wgfSBmcm9tIFwiQGxhbmdjaGFpbi9jb3JlL3Rvb2xzXCI7XG4vKipcbiAqIENsYXNzIGZvciBtYWtpbmcgR0VUIHJlcXVlc3RzLiBFeHRlbmRzIHRoZSBUb29sIGNsYXNzIGFuZCBpbXBsZW1lbnRzXG4gKiB0aGUgUmVxdWVzdFRvb2wgaW50ZXJmYWNlLiBUaGUgaW5wdXQgc2hvdWxkIGJlIGEgVVJMIHN0cmluZywgYW5kIHRoZVxuICogb3V0cHV0IHdpbGwgYmUgdGhlIHRleHQgcmVzcG9uc2Ugb2YgdGhlIEdFVCByZXF1ZXN0LlxuICovXG5leHBvcnQgY2xhc3MgUmVxdWVzdHNHZXRUb29sIGV4dGVuZHMgVG9vbCB7XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIlJlcXVlc3RzR2V0VG9vbFwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihoZWFkZXJzID0ge30sIHsgbWF4T3V0cHV0TGVuZ3RoIH0gPSB7fSkge1xuICAgICAgICBzdXBlciguLi5hcmd1bWVudHMpO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJoZWFkZXJzXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBoZWFkZXJzXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBcInJlcXVlc3RzX2dldFwiXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJtYXhPdXRwdXRMZW5ndGhcIiwge1xuICAgICAgICAgICAgZW51bWVyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIGNvbmZpZ3VyYWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHdyaXRhYmxlOiB0cnVlLFxuICAgICAgICAgICAgdmFsdWU6IDIwMDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRlc2NyaXB0aW9uXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBgQSBwb3J0YWwgdG8gdGhlIGludGVybmV0LiBVc2UgdGhpcyB3aGVuIHlvdSBuZWVkIHRvIGdldCBzcGVjaWZpYyBjb250ZW50IGZyb20gYSB3ZWJzaXRlLlxuICBJbnB1dCBzaG91bGQgYmUgYSB1cmwgc3RyaW5nIChpLmUuIFwiaHR0cHM6Ly93d3cuZ29vZ2xlLmNvbVwiKS4gVGhlIG91dHB1dCB3aWxsIGJlIHRoZSB0ZXh0IHJlc3BvbnNlIG9mIHRoZSBHRVQgcmVxdWVzdC5gXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm1heE91dHB1dExlbmd0aCA9IG1heE91dHB1dExlbmd0aCA/PyB0aGlzLm1heE91dHB1dExlbmd0aDtcbiAgICB9XG4gICAgLyoqIEBpZ25vcmUgKi9cbiAgICBhc3luYyBfY2FsbChpbnB1dCkge1xuICAgICAgICBjb25zdCByZXMgPSBhd2FpdCBmZXRjaChpbnB1dCwge1xuICAgICAgICAgICAgaGVhZGVyczogdGhpcy5oZWFkZXJzLFxuICAgICAgICB9KTtcbiAgICAgICAgY29uc3QgdGV4dCA9IGF3YWl0IHJlcy50ZXh0KCk7XG4gICAgICAgIHJldHVybiB0ZXh0LnNsaWNlKDAsIHRoaXMubWF4T3V0cHV0TGVuZ3RoKTtcbiAgICB9XG59XG4vKipcbiAqIENsYXNzIGZvciBtYWtpbmcgUE9TVCByZXF1ZXN0cy4gRXh0ZW5kcyB0aGUgVG9vbCBjbGFzcyBhbmQgaW1wbGVtZW50c1xuICogdGhlIFJlcXVlc3RUb29sIGludGVyZmFjZS4gVGhlIGlucHV0IHNob3VsZCBiZSBhIEpTT04gc3RyaW5nIHdpdGggdHdvXG4gKiBrZXlzOiAndXJsJyBhbmQgJ2RhdGEnLiBUaGUgb3V0cHV0IHdpbGwgYmUgdGhlIHRleHQgcmVzcG9uc2Ugb2YgdGhlXG4gKiBQT1NUIHJlcXVlc3QuXG4gKi9cbmV4cG9ydCBjbGFzcyBSZXF1ZXN0c1Bvc3RUb29sIGV4dGVuZHMgVG9vbCB7XG4gICAgc3RhdGljIGxjX25hbWUoKSB7XG4gICAgICAgIHJldHVybiBcIlJlcXVlc3RzUG9zdFRvb2xcIjtcbiAgICB9XG4gICAgY29uc3RydWN0b3IoaGVhZGVycyA9IHt9LCB7IG1heE91dHB1dExlbmd0aCB9ID0ge30pIHtcbiAgICAgICAgc3VwZXIoLi4uYXJndW1lbnRzKTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwiaGVhZGVyc1wiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogaGVhZGVyc1xuICAgICAgICB9KTtcbiAgICAgICAgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRoaXMsIFwibmFtZVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogXCJyZXF1ZXN0c19wb3N0XCJcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcIm1heE91dHB1dExlbmd0aFwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogSW5maW5pdHlcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRlc2NyaXB0aW9uXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiBgVXNlIHRoaXMgd2hlbiB5b3Ugd2FudCB0byBQT1NUIHRvIGEgd2Vic2l0ZS5cbiAgSW5wdXQgc2hvdWxkIGJlIGEganNvbiBzdHJpbmcgd2l0aCB0d28ga2V5czogXCJ1cmxcIiBhbmQgXCJkYXRhXCIuXG4gIFRoZSB2YWx1ZSBvZiBcInVybFwiIHNob3VsZCBiZSBhIHN0cmluZywgYW5kIHRoZSB2YWx1ZSBvZiBcImRhdGFcIiBzaG91bGQgYmUgYSBkaWN0aW9uYXJ5IG9mXG4gIGtleS12YWx1ZSBwYWlycyB5b3Ugd2FudCB0byBQT1NUIHRvIHRoZSB1cmwgYXMgYSBKU09OIGJvZHkuXG4gIEJlIGNhcmVmdWwgdG8gYWx3YXlzIHVzZSBkb3VibGUgcXVvdGVzIGZvciBzdHJpbmdzIGluIHRoZSBqc29uIHN0cmluZ1xuICBUaGUgb3V0cHV0IHdpbGwgYmUgdGhlIHRleHQgcmVzcG9uc2Ugb2YgdGhlIFBPU1QgcmVxdWVzdC5gXG4gICAgICAgIH0pO1xuICAgICAgICB0aGlzLm1heE91dHB1dExlbmd0aCA9IG1heE91dHB1dExlbmd0aCA/PyB0aGlzLm1heE91dHB1dExlbmd0aDtcbiAgICB9XG4gICAgLyoqIEBpZ25vcmUgKi9cbiAgICBhc3luYyBfY2FsbChpbnB1dCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgeyB1cmwsIGRhdGEgfSA9IEpTT04ucGFyc2UoaW5wdXQpO1xuICAgICAgICAgICAgY29uc3QgcmVzID0gYXdhaXQgZmV0Y2godXJsLCB7XG4gICAgICAgICAgICAgICAgbWV0aG9kOiBcIlBPU1RcIixcbiAgICAgICAgICAgICAgICBoZWFkZXJzOiB0aGlzLmhlYWRlcnMsXG4gICAgICAgICAgICAgICAgYm9keTogSlNPTi5zdHJpbmdpZnkoZGF0YSksXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IHRleHQgPSBhd2FpdCByZXMudGV4dCgpO1xuICAgICAgICAgICAgcmV0dXJuIHRleHQuc2xpY2UoMCwgdGhpcy5tYXhPdXRwdXRMZW5ndGgpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgcmV0dXJuIGAke2Vycm9yfWA7XG4gICAgICAgIH1cbiAgICB9XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/requests.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/vectorstore.js":
/*!******************************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/vectorstore.js ***!
  \******************************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   VectorStoreQATool: () => (/* binding */ VectorStoreQATool)\n/* harmony export */ });\n/* harmony import */ var _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @langchain/core/tools */ \"(rsc)/./node_modules/.pnpm/@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10__zod@3.24.2_/node_modules/@langchain/core/tools.js\");\n/* harmony import */ var _chains_vector_db_qa_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../chains/vector_db_qa.js */ \"(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/chains/vector_db_qa.js\");\n\n\n/**\n * A tool for the VectorDBQA chain to interact with a Vector Store. It is\n * used to answer questions about a specific topic. The input to this tool\n * should be a fully formed question.\n */\nclass VectorStoreQATool extends _langchain_core_tools__WEBPACK_IMPORTED_MODULE_0__.Tool {\n    static lc_name() {\n        return \"VectorStoreQATool\";\n    }\n    constructor(name, description, fields) {\n        super(...arguments);\n        Object.defineProperty(this, \"vectorStore\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"llm\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"name\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"description\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        Object.defineProperty(this, \"chain\", {\n            enumerable: true,\n            configurable: true,\n            writable: true,\n            value: void 0\n        });\n        this.name = name;\n        this.description = description;\n        this.vectorStore = fields.vectorStore;\n        this.llm = fields.llm;\n        this.chain = _chains_vector_db_qa_js__WEBPACK_IMPORTED_MODULE_1__.VectorDBQAChain.fromLLM(this.llm, this.vectorStore);\n    }\n    /**\n     * Returns a string that describes what the tool does.\n     * @param name The name of the tool.\n     * @param description A description of what the tool does.\n     * @returns A string that describes what the tool does.\n     */\n    static getDescription(name, description) {\n        return `Useful for when you need to answer questions about ${name}. Whenever you need information about ${description} you should ALWAYS use this. Input should be a fully formed question.`;\n    }\n    /** @ignore */\n    async _call(input) {\n        return this.chain.run(input);\n    }\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC90b29scy92ZWN0b3JzdG9yZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBNkM7QUFDZTtBQUM1RDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ08sZ0NBQWdDLHVEQUFJO0FBQzNDO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVM7QUFDVDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsU0FBUztBQUNUO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxTQUFTO0FBQ1Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxxQkFBcUIsb0VBQWU7QUFDcEM7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLHFFQUFxRSxLQUFLLHdDQUF3QyxhQUFhO0FBQy9IO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL2xhbmdjaGFpbkAwLjMuMTlfQGxhbmdjaGFpbithbnRocm9waWNAMC4zLjEzX0BsYW5nY2hhaW4rY29yZUAwLjMuNDBfb3BlbmFpQDQuODUuMl93c0A4LjE4LjBfYl9uNWhtdmQ1d2szZW95d2J0eHRpN3hpdnZ4dS9ub2RlX21vZHVsZXMvbGFuZ2NoYWluL2Rpc3QvdG9vbHMvdmVjdG9yc3RvcmUuanMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgVG9vbCB9IGZyb20gXCJAbGFuZ2NoYWluL2NvcmUvdG9vbHNcIjtcbmltcG9ydCB7IFZlY3RvckRCUUFDaGFpbiB9IGZyb20gXCIuLi9jaGFpbnMvdmVjdG9yX2RiX3FhLmpzXCI7XG4vKipcbiAqIEEgdG9vbCBmb3IgdGhlIFZlY3RvckRCUUEgY2hhaW4gdG8gaW50ZXJhY3Qgd2l0aCBhIFZlY3RvciBTdG9yZS4gSXQgaXNcbiAqIHVzZWQgdG8gYW5zd2VyIHF1ZXN0aW9ucyBhYm91dCBhIHNwZWNpZmljIHRvcGljLiBUaGUgaW5wdXQgdG8gdGhpcyB0b29sXG4gKiBzaG91bGQgYmUgYSBmdWxseSBmb3JtZWQgcXVlc3Rpb24uXG4gKi9cbmV4cG9ydCBjbGFzcyBWZWN0b3JTdG9yZVFBVG9vbCBleHRlbmRzIFRvb2wge1xuICAgIHN0YXRpYyBsY19uYW1lKCkge1xuICAgICAgICByZXR1cm4gXCJWZWN0b3JTdG9yZVFBVG9vbFwiO1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihuYW1lLCBkZXNjcmlwdGlvbiwgZmllbGRzKSB7XG4gICAgICAgIHN1cGVyKC4uLmFyZ3VtZW50cyk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcInZlY3RvclN0b3JlXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImxsbVwiLCB7XG4gICAgICAgICAgICBlbnVtZXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgY29uZmlndXJhYmxlOiB0cnVlLFxuICAgICAgICAgICAgd3JpdGFibGU6IHRydWUsXG4gICAgICAgICAgICB2YWx1ZTogdm9pZCAwXG4gICAgICAgIH0pO1xuICAgICAgICBPYmplY3QuZGVmaW5lUHJvcGVydHkodGhpcywgXCJuYW1lXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImRlc2NyaXB0aW9uXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0aGlzLCBcImNoYWluXCIsIHtcbiAgICAgICAgICAgIGVudW1lcmFibGU6IHRydWUsXG4gICAgICAgICAgICBjb25maWd1cmFibGU6IHRydWUsXG4gICAgICAgICAgICB3cml0YWJsZTogdHJ1ZSxcbiAgICAgICAgICAgIHZhbHVlOiB2b2lkIDBcbiAgICAgICAgfSk7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWU7XG4gICAgICAgIHRoaXMuZGVzY3JpcHRpb24gPSBkZXNjcmlwdGlvbjtcbiAgICAgICAgdGhpcy52ZWN0b3JTdG9yZSA9IGZpZWxkcy52ZWN0b3JTdG9yZTtcbiAgICAgICAgdGhpcy5sbG0gPSBmaWVsZHMubGxtO1xuICAgICAgICB0aGlzLmNoYWluID0gVmVjdG9yREJRQUNoYWluLmZyb21MTE0odGhpcy5sbG0sIHRoaXMudmVjdG9yU3RvcmUpO1xuICAgIH1cbiAgICAvKipcbiAgICAgKiBSZXR1cm5zIGEgc3RyaW5nIHRoYXQgZGVzY3JpYmVzIHdoYXQgdGhlIHRvb2wgZG9lcy5cbiAgICAgKiBAcGFyYW0gbmFtZSBUaGUgbmFtZSBvZiB0aGUgdG9vbC5cbiAgICAgKiBAcGFyYW0gZGVzY3JpcHRpb24gQSBkZXNjcmlwdGlvbiBvZiB3aGF0IHRoZSB0b29sIGRvZXMuXG4gICAgICogQHJldHVybnMgQSBzdHJpbmcgdGhhdCBkZXNjcmliZXMgd2hhdCB0aGUgdG9vbCBkb2VzLlxuICAgICAqL1xuICAgIHN0YXRpYyBnZXREZXNjcmlwdGlvbihuYW1lLCBkZXNjcmlwdGlvbikge1xuICAgICAgICByZXR1cm4gYFVzZWZ1bCBmb3Igd2hlbiB5b3UgbmVlZCB0byBhbnN3ZXIgcXVlc3Rpb25zIGFib3V0ICR7bmFtZX0uIFdoZW5ldmVyIHlvdSBuZWVkIGluZm9ybWF0aW9uIGFib3V0ICR7ZGVzY3JpcHRpb259IHlvdSBzaG91bGQgQUxXQVlTIHVzZSB0aGlzLiBJbnB1dCBzaG91bGQgYmUgYSBmdWxseSBmb3JtZWQgcXVlc3Rpb24uYDtcbiAgICB9XG4gICAgLyoqIEBpZ25vcmUgKi9cbiAgICBhc3luYyBfY2FsbChpbnB1dCkge1xuICAgICAgICByZXR1cm4gdGhpcy5jaGFpbi5ydW4oaW5wdXQpO1xuICAgIH1cbn1cbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/vectorstore.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/util/set.js":
/*!*********************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/util/set.js ***!
  \*********************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   difference: () => (/* binding */ difference),\n/* harmony export */   intersection: () => (/* binding */ intersection),\n/* harmony export */   union: () => (/* binding */ union)\n/* harmony export */ });\n/**\n * Source: https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set#implementing_basic_set_operations\n */\n/**\n * returns intersection of two sets\n */\nfunction intersection(setA, setB) {\n    const _intersection = new Set();\n    for (const elem of setB) {\n        if (setA.has(elem)) {\n            _intersection.add(elem);\n        }\n    }\n    return _intersection;\n}\n/**\n * returns union of two sets\n */\nfunction union(setA, setB) {\n    const _union = new Set(setA);\n    for (const elem of setB) {\n        _union.add(elem);\n    }\n    return _union;\n}\n/**\n * returns difference of two sets\n */\nfunction difference(setA, setB) {\n    const _difference = new Set(setA);\n    for (const elem of setB) {\n        _difference.delete(elem);\n    }\n    return _difference;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC91dGlsL3NldC5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBIiwic291cmNlcyI6WyIvVXNlcnMvZnVqaWF3YW5nL0Rlc2t0b3AvY2hhdGJvdC9ub2RlX21vZHVsZXMvLnBucG0vbGFuZ2NoYWluQDAuMy4xOV9AbGFuZ2NoYWluK2FudGhyb3BpY0AwLjMuMTNfQGxhbmdjaGFpbitjb3JlQDAuMy40MF9vcGVuYWlANC44NS4yX3dzQDguMTguMF9iX241aG12ZDV3azNlb3l3YnR4dGk3eGl2dnh1L25vZGVfbW9kdWxlcy9sYW5nY2hhaW4vZGlzdC91dGlsL3NldC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIFNvdXJjZTogaHR0cHM6Ly9kZXZlbG9wZXIubW96aWxsYS5vcmcvZW4tVVMvZG9jcy9XZWIvSmF2YVNjcmlwdC9SZWZlcmVuY2UvR2xvYmFsX09iamVjdHMvU2V0I2ltcGxlbWVudGluZ19iYXNpY19zZXRfb3BlcmF0aW9uc1xuICovXG4vKipcbiAqIHJldHVybnMgaW50ZXJzZWN0aW9uIG9mIHR3byBzZXRzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBpbnRlcnNlY3Rpb24oc2V0QSwgc2V0Qikge1xuICAgIGNvbnN0IF9pbnRlcnNlY3Rpb24gPSBuZXcgU2V0KCk7XG4gICAgZm9yIChjb25zdCBlbGVtIG9mIHNldEIpIHtcbiAgICAgICAgaWYgKHNldEEuaGFzKGVsZW0pKSB7XG4gICAgICAgICAgICBfaW50ZXJzZWN0aW9uLmFkZChlbGVtKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gX2ludGVyc2VjdGlvbjtcbn1cbi8qKlxuICogcmV0dXJucyB1bmlvbiBvZiB0d28gc2V0c1xuICovXG5leHBvcnQgZnVuY3Rpb24gdW5pb24oc2V0QSwgc2V0Qikge1xuICAgIGNvbnN0IF91bmlvbiA9IG5ldyBTZXQoc2V0QSk7XG4gICAgZm9yIChjb25zdCBlbGVtIG9mIHNldEIpIHtcbiAgICAgICAgX3VuaW9uLmFkZChlbGVtKTtcbiAgICB9XG4gICAgcmV0dXJuIF91bmlvbjtcbn1cbi8qKlxuICogcmV0dXJucyBkaWZmZXJlbmNlIG9mIHR3byBzZXRzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBkaWZmZXJlbmNlKHNldEEsIHNldEIpIHtcbiAgICBjb25zdCBfZGlmZmVyZW5jZSA9IG5ldyBTZXQoc2V0QSk7XG4gICAgZm9yIChjb25zdCBlbGVtIG9mIHNldEIpIHtcbiAgICAgICAgX2RpZmZlcmVuY2UuZGVsZXRlKGVsZW0pO1xuICAgIH1cbiAgICByZXR1cm4gX2RpZmZlcmVuY2U7XG59XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/util/set.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/tools.js":
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/tools.js ***!
  \*************************************************************************************************************************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   ChainTool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.ChainTool),
/* harmony export */   DynamicStructuredTool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.DynamicStructuredTool),
/* harmony export */   DynamicTool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.DynamicTool),
/* harmony export */   JsonGetValueTool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.JsonGetValueTool),
/* harmony export */   JsonListKeysTool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.JsonListKeysTool),
/* harmony export */   JsonSpec: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.JsonSpec),
/* harmony export */   ReadFileTool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.ReadFileTool),
/* harmony export */   RequestsGetTool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.RequestsGetTool),
/* harmony export */   RequestsPostTool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.RequestsPostTool),
/* harmony export */   StructuredTool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.StructuredTool),
/* harmony export */   Tool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.Tool),
/* harmony export */   VectorStoreQATool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.VectorStoreQATool),
/* harmony export */   WriteFileTool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.WriteFileTool),
/* harmony export */   formatToOpenAIFunction: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.formatToOpenAIFunction),
/* harmony export */   formatToOpenAITool: () => (/* reexport safe */ _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__.formatToOpenAITool)
/* harmony export */ });
/* harmony import */ var _dist_tools_index_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./dist/tools/index.js */ "(rsc)/./node_modules/.pnpm/langchain@0.3.19_@langchain+anthropic@0.3.13_@langchain+core@0.3.40_openai@4.85.2_ws@8.18.0_b_n5hmvd5wk3eoywbtxti7xivvxu/node_modules/langchain/dist/tools/index.js");


/***/ })

};
;