"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@csstools+css-parser-algorithms@3.0.4_@csstools+css-tokenizer@3.0.3";
exports.ids = ["vendor-chunks/@csstools+css-parser-algorithms@3.0.4_@csstools+css-tokenizer@3.0.3"];
exports.modules = {

/***/ "(ssr)/./node_modules/.pnpm/@csstools+css-parser-algorithms@3.0.4_@csstools+css-tokenizer@3.0.3/node_modules/@csstools/css-parser-algorithms/dist/index.cjs":
/*!************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@csstools+css-parser-algorithms@3.0.4_@csstools+css-tokenizer@3.0.3/node_modules/@csstools/css-parser-algorithms/dist/index.cjs ***!
  \************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("var e,n=__webpack_require__(/*! @csstools/css-tokenizer */ \"(ssr)/./node_modules/.pnpm/@csstools+css-tokenizer@3.0.3/node_modules/@csstools/css-tokenizer/dist/index.cjs\");function walkerIndexGenerator(e){let n=e.slice();return(e,o,t)=>{let s=-1;for(let i=n.indexOf(o);i<n.length&&(s=e.indexOf(n[i]),-1===s||s<t);i++);return-1===s||s===t&&o===e[t]&&(s++,s>=e.length)?-1:(n=e.slice(),s)}}function consumeComponentValue(e,o){const t=o[0];if(n.isTokenOpenParen(t)||n.isTokenOpenCurly(t)||n.isTokenOpenSquare(t)){const n=consumeSimpleBlock(e,o);return{advance:n.advance,node:n.node}}if(n.isTokenFunction(t)){const n=consumeFunction(e,o);return{advance:n.advance,node:n.node}}if(n.isTokenWhitespace(t)){const n=consumeWhitespace(e,o);return{advance:n.advance,node:n.node}}if(n.isTokenComment(t)){const n=consumeComment(e,o);return{advance:n.advance,node:n.node}}return{advance:1,node:new TokenNode(t)}}exports.ComponentValueType=void 0,(e=exports.ComponentValueType||(exports.ComponentValueType={})).Function=\"function\",e.SimpleBlock=\"simple-block\",e.Whitespace=\"whitespace\",e.Comment=\"comment\",e.Token=\"token\";class ContainerNodeBaseClass{value=[];indexOf(e){return this.value.indexOf(e)}at(e){if(\"number\"==typeof e)return e<0&&(e=this.value.length+e),this.value[e]}forEach(e,n){if(0===this.value.length)return;const o=walkerIndexGenerator(this.value);let t=0;for(;t<this.value.length;){const s=this.value[t];let i;if(n&&(i={...n}),!1===e({node:s,parent:this,state:i},t))return!1;if(t=o(this.value,s,t),-1===t)break}}walk(e,n){0!==this.value.length&&this.forEach(((n,o)=>!1!==e(n,o)&&((!(\"walk\"in n.node)||!this.value.includes(n.node)||!1!==n.node.walk(e,n.state))&&void 0)),n)}}class FunctionNode extends ContainerNodeBaseClass{type=exports.ComponentValueType.Function;name;endToken;constructor(e,n,o){super(),this.name=e,this.endToken=n,this.value=o}getName(){return this.name[4].value}normalize(){n.isTokenEOF(this.endToken)&&(this.endToken=[n.TokenType.CloseParen,\")\",-1,-1,void 0])}tokens(){return n.isTokenEOF(this.endToken)?[this.name,...this.value.flatMap((e=>e.tokens()))]:[this.name,...this.value.flatMap((e=>e.tokens())),this.endToken]}toString(){const e=this.value.map((e=>n.isToken(e)?n.stringify(e):e.toString())).join(\"\");return n.stringify(this.name)+e+n.stringify(this.endToken)}toJSON(){return{type:this.type,name:this.getName(),tokens:this.tokens(),value:this.value.map((e=>e.toJSON()))}}isFunctionNode(){return FunctionNode.isFunctionNode(this)}static isFunctionNode(e){return!!e&&(e instanceof FunctionNode&&e.type===exports.ComponentValueType.Function)}}function consumeFunction(e,o){const t=[];let s=1;for(;;){const i=o[s];if(!i||n.isTokenEOF(i))return e.onParseError(new n.ParseError(\"Unexpected EOF while consuming a function.\",o[0][2],o[o.length-1][3],[\"5.4.9. Consume a function\",\"Unexpected EOF\"])),{advance:o.length,node:new FunctionNode(o[0],i,t)};if(n.isTokenCloseParen(i))return{advance:s+1,node:new FunctionNode(o[0],i,t)};if(n.isTokenWhiteSpaceOrComment(i)){const n=consumeAllCommentsAndWhitespace(e,o.slice(s));s+=n.advance,t.push(...n.nodes);continue}const r=consumeComponentValue(e,o.slice(s));s+=r.advance,t.push(r.node)}}class SimpleBlockNode extends ContainerNodeBaseClass{type=exports.ComponentValueType.SimpleBlock;startToken;endToken;constructor(e,n,o){super(),this.startToken=e,this.endToken=n,this.value=o}normalize(){if(n.isTokenEOF(this.endToken)){const e=n.mirrorVariant(this.startToken);e&&(this.endToken=e)}}tokens(){return n.isTokenEOF(this.endToken)?[this.startToken,...this.value.flatMap((e=>e.tokens()))]:[this.startToken,...this.value.flatMap((e=>e.tokens())),this.endToken]}toString(){const e=this.value.map((e=>n.isToken(e)?n.stringify(e):e.toString())).join(\"\");return n.stringify(this.startToken)+e+n.stringify(this.endToken)}toJSON(){return{type:this.type,startToken:this.startToken,tokens:this.tokens(),value:this.value.map((e=>e.toJSON()))}}isSimpleBlockNode(){return SimpleBlockNode.isSimpleBlockNode(this)}static isSimpleBlockNode(e){return!!e&&(e instanceof SimpleBlockNode&&e.type===exports.ComponentValueType.SimpleBlock)}}function consumeSimpleBlock(e,o){const t=n.mirrorVariantType(o[0][0]);if(!t)throw new Error(\"Failed to parse, a mirror variant must exist for all block open tokens.\");const s=[];let i=1;for(;;){const r=o[i];if(!r||n.isTokenEOF(r))return e.onParseError(new n.ParseError(\"Unexpected EOF while consuming a simple block.\",o[0][2],o[o.length-1][3],[\"5.4.8. Consume a simple block\",\"Unexpected EOF\"])),{advance:o.length,node:new SimpleBlockNode(o[0],r,s)};if(r[0]===t)return{advance:i+1,node:new SimpleBlockNode(o[0],r,s)};if(n.isTokenWhiteSpaceOrComment(r)){const n=consumeAllCommentsAndWhitespace(e,o.slice(i));i+=n.advance,s.push(...n.nodes);continue}const a=consumeComponentValue(e,o.slice(i));i+=a.advance,s.push(a.node)}}class WhitespaceNode{type=exports.ComponentValueType.Whitespace;value;constructor(e){this.value=e}tokens(){return this.value}toString(){return n.stringify(...this.value)}toJSON(){return{type:this.type,tokens:this.tokens()}}isWhitespaceNode(){return WhitespaceNode.isWhitespaceNode(this)}static isWhitespaceNode(e){return!!e&&(e instanceof WhitespaceNode&&e.type===exports.ComponentValueType.Whitespace)}}function consumeWhitespace(e,o){let t=0;for(;;){const e=o[t];if(!n.isTokenWhitespace(e))return{advance:t,node:new WhitespaceNode(o.slice(0,t))};t++}}class CommentNode{type=exports.ComponentValueType.Comment;value;constructor(e){this.value=e}tokens(){return[this.value]}toString(){return n.stringify(this.value)}toJSON(){return{type:this.type,tokens:this.tokens()}}isCommentNode(){return CommentNode.isCommentNode(this)}static isCommentNode(e){return!!e&&(e instanceof CommentNode&&e.type===exports.ComponentValueType.Comment)}}function consumeComment(e,n){return{advance:1,node:new CommentNode(n[0])}}function consumeAllCommentsAndWhitespace(e,o){const t=[];let s=0;for(;;)if(n.isTokenWhitespace(o[s])){const e=consumeWhitespace(0,o.slice(s));s+=e.advance,t.push(e.node)}else{if(!n.isTokenComment(o[s]))return{advance:s,nodes:t};t.push(new CommentNode(o[s])),s++}}class TokenNode{type=exports.ComponentValueType.Token;value;constructor(e){this.value=e}tokens(){return[this.value]}toString(){return this.value[1]}toJSON(){return{type:this.type,tokens:this.tokens()}}isTokenNode(){return TokenNode.isTokenNode(this)}static isTokenNode(e){return!!e&&(e instanceof TokenNode&&e.type===exports.ComponentValueType.Token)}}function forEach(e,n,o){if(0===e.length)return;const t=walkerIndexGenerator(e);let s=0;for(;s<e.length;){const i=e[s];let r;if(o&&(r={...o}),!1===n({node:i,parent:{value:e},state:r},s))return!1;if(s=t(e,i,s),-1===s)break}}function walk(e,n,o){0!==e.length&&forEach(e,((o,t)=>!1!==n(o,t)&&((!(\"walk\"in o.node)||!e.includes(o.node)||!1!==o.node.walk(n,o.state))&&void 0)),o)}function isWhitespaceNode(e){return WhitespaceNode.isWhitespaceNode(e)}function isCommentNode(e){return CommentNode.isCommentNode(e)}exports.CommentNode=CommentNode,exports.ContainerNodeBaseClass=ContainerNodeBaseClass,exports.FunctionNode=FunctionNode,exports.SimpleBlockNode=SimpleBlockNode,exports.TokenNode=TokenNode,exports.WhitespaceNode=WhitespaceNode,exports.forEach=forEach,exports.gatherNodeAncestry=function gatherNodeAncestry(e){const n=new Map;return e.walk((e=>{Array.isArray(e.node)?e.node.forEach((o=>{n.set(o,e.parent)})):n.set(e.node,e.parent)})),n},exports.isCommentNode=isCommentNode,exports.isFunctionNode=function isFunctionNode(e){return FunctionNode.isFunctionNode(e)},exports.isSimpleBlockNode=function isSimpleBlockNode(e){return SimpleBlockNode.isSimpleBlockNode(e)},exports.isTokenNode=function isTokenNode(e){return TokenNode.isTokenNode(e)},exports.isWhiteSpaceOrCommentNode=function isWhiteSpaceOrCommentNode(e){return isWhitespaceNode(e)||isCommentNode(e)},exports.isWhitespaceNode=isWhitespaceNode,exports.parseCommaSeparatedListOfComponentValues=function parseCommaSeparatedListOfComponentValues(e,o){const t={onParseError:o?.onParseError??(()=>{})},s=[...e];if(0===e.length)return[];n.isTokenEOF(s[s.length-1])&&s.push([n.TokenType.EOF,\"\",s[s.length-1][2],s[s.length-1][3],void 0]);const i=[];let r=[],a=0;for(;;){if(!s[a]||n.isTokenEOF(s[a]))return r.length&&i.push(r),i;if(n.isTokenComma(s[a])){i.push(r),r=[],a++;continue}const o=consumeComponentValue(t,e.slice(a));r.push(o.node),a+=o.advance}},exports.parseComponentValue=function parseComponentValue(e,o){const t={onParseError:o?.onParseError??(()=>{})},s=[...e];n.isTokenEOF(s[s.length-1])&&s.push([n.TokenType.EOF,\"\",s[s.length-1][2],s[s.length-1][3],void 0]);const i=consumeComponentValue(t,s);if(n.isTokenEOF(s[Math.min(i.advance,s.length-1)]))return i.node;t.onParseError(new n.ParseError(\"Expected EOF after parsing a component value.\",e[0][2],e[e.length-1][3],[\"5.3.9. Parse a component value\",\"Expected EOF\"]))},exports.parseListOfComponentValues=function parseListOfComponentValues(e,o){const t={onParseError:o?.onParseError??(()=>{})},s=[...e];n.isTokenEOF(s[s.length-1])&&s.push([n.TokenType.EOF,\"\",s[s.length-1][2],s[s.length-1][3],void 0]);const i=[];let r=0;for(;;){if(!s[r]||n.isTokenEOF(s[r]))return i;const e=consumeComponentValue(t,s.slice(r));i.push(e.node),r+=e.advance}},exports.replaceComponentValues=function replaceComponentValues(e,n){for(let o=0;o<e.length;o++){walk(e[o],((e,o)=>{if(\"number\"!=typeof o)return;const t=n(e.node);t&&(Array.isArray(t)?e.parent.value.splice(o,1,...t):e.parent.value.splice(o,1,t))}))}return e},exports.sourceIndices=function sourceIndices(e){if(Array.isArray(e)){const n=e[0];if(!n)return[0,0];const o=e[e.length-1]||n;return[sourceIndices(n)[0],sourceIndices(o)[1]]}const n=e.tokens(),o=n[0],t=n[n.length-1];return o&&t?[o[2],t[3]]:[0,0]},exports.stringify=function stringify(e){return e.map((e=>e.map((e=>n.stringify(...e.tokens()))).join(\"\"))).join(\",\")},exports.walk=walk,exports.walkerIndexGenerator=walkerIndexGenerator;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvLnBucG0vQGNzc3Rvb2xzK2Nzcy1wYXJzZXItYWxnb3JpdGhtc0AzLjAuNF9AY3NzdG9vbHMrY3NzLXRva2VuaXplckAzLjAuMy9ub2RlX21vZHVsZXMvQGNzc3Rvb2xzL2Nzcy1wYXJzZXItYWxnb3JpdGhtcy9kaXN0L2luZGV4LmNqcyIsIm1hcHBpbmdzIjoiQUFBYSxRQUFRLG1CQUFPLENBQUMsNklBQXlCLEVBQUUsaUNBQWlDLGdCQUFnQixnQkFBZ0IsU0FBUyx1QkFBdUIsNENBQTRDLEtBQUsscUVBQXFFLG9DQUFvQyxhQUFhLHlFQUF5RSxnQ0FBZ0MsT0FBTywrQkFBK0IseUJBQXlCLDZCQUE2QixPQUFPLCtCQUErQiwyQkFBMkIsK0JBQStCLE9BQU8sK0JBQStCLHdCQUF3Qiw0QkFBNEIsT0FBTywrQkFBK0IsT0FBTyxpQ0FBaUMsMEJBQTBCLHdDQUF3QywwQkFBMEIsR0FBRyxrSEFBa0gsNkJBQTZCLFNBQVMsV0FBVyw2QkFBNkIsTUFBTSx3RUFBd0UsYUFBYSxnQ0FBZ0MseUNBQXlDLFFBQVEsS0FBSyxvQkFBb0IsRUFBRSxzQkFBc0IsTUFBTSxVQUFVLEtBQUssVUFBVSwyQkFBMkIsYUFBYSxxQ0FBcUMsVUFBVSx3SkFBd0osa0RBQWtELHlDQUF5QyxLQUFLLFNBQVMsbUJBQW1CLGlEQUFpRCxVQUFVLDBCQUEwQixZQUFZLHVGQUF1RixTQUFTLHVKQUF1SixXQUFXLCtFQUErRSwyREFBMkQsU0FBUyxPQUFPLCtGQUErRixpQkFBaUIseUNBQXlDLHlCQUF5QixzRkFBc0YsOEJBQThCLFdBQVcsUUFBUSxNQUFNLEVBQUUsYUFBYSxzTEFBc0wsa0RBQWtELGlDQUFpQyw2Q0FBNkMsb0NBQW9DLHNEQUFzRCxnQ0FBZ0MsU0FBUyw0Q0FBNEMsNkJBQTZCLHFEQUFxRCw0Q0FBNEMsV0FBVyxTQUFTLG1CQUFtQix1REFBdUQsWUFBWSxnQ0FBZ0MseUNBQXlDLHNCQUFzQixTQUFTLG1LQUFtSyxXQUFXLCtFQUErRSxpRUFBaUUsU0FBUyxPQUFPLHNHQUFzRyxvQkFBb0IsK0NBQStDLDRCQUE0Qiw0RkFBNEYsaUNBQWlDLHFDQUFxQyxpR0FBaUcsV0FBVyxRQUFRLE1BQU0sRUFBRSxhQUFhLDhMQUE4TCxxREFBcUQsbUJBQW1CLGdEQUFnRCxvQ0FBb0Msc0RBQXNELGdDQUFnQyxTQUFTLDRDQUE0Qyw2QkFBNkIscUJBQXFCLDJDQUEyQyxNQUFNLGVBQWUsYUFBYSxTQUFTLGtCQUFrQixXQUFXLGtDQUFrQyxTQUFTLE9BQU8scUNBQXFDLG1CQUFtQiw2Q0FBNkMsMkJBQTJCLDBGQUEwRixnQ0FBZ0MsUUFBUSxNQUFNLEVBQUUsYUFBYSxrQ0FBa0MsaURBQWlELEtBQUssa0JBQWtCLHdDQUF3QyxNQUFNLGVBQWUsYUFBYSxTQUFTLG1CQUFtQixXQUFXLCtCQUErQixTQUFTLE9BQU8scUNBQXFDLGdCQUFnQix1Q0FBdUMsd0JBQXdCLG9GQUFvRiw2QkFBNkIsT0FBTyxzQ0FBc0MsOENBQThDLFdBQVcsUUFBUSxNQUFNLCtCQUErQix3Q0FBd0MsNEJBQTRCLEtBQUssa0NBQWtDLG1CQUFtQixtQ0FBbUMsZ0JBQWdCLHNDQUFzQyxNQUFNLGVBQWUsYUFBYSxTQUFTLG1CQUFtQixXQUFXLHFCQUFxQixTQUFTLE9BQU8scUNBQXFDLGNBQWMsbUNBQW1DLHNCQUFzQixnRkFBZ0Ysd0JBQXdCLHVCQUF1QixnQ0FBZ0MsUUFBUSxLQUFLLFdBQVcsRUFBRSxhQUFhLE1BQU0sVUFBVSxLQUFLLFVBQVUsZUFBZSxRQUFRLFNBQVMsYUFBYSw0QkFBNEIscUJBQXFCLGtJQUFrSSw2QkFBNkIsMENBQTBDLDBCQUEwQixvQ0FBb0MsbUJBQW1CLGFBQWEsOEJBQThCLHdCQUF3QixvQkFBb0IsY0FBYyx1QkFBdUIsaUJBQWlCLGlCQUFpQixXQUFXLHNCQUFzQixnQkFBZ0IsZUFBZSxTQUFTLDBCQUEwQixnQ0FBZ0MsZ0JBQWdCLG1CQUFtQiwwQ0FBMEMsa0JBQWtCLDBCQUEwQixLQUFLLENBQUMscUJBQXFCLGVBQWUsc0JBQXNCLDRCQUE0QixzQ0FBc0MsQ0FBQyx5QkFBeUIsK0JBQStCLDRDQUE0QyxDQUFDLG1CQUFtQix5QkFBeUIsZ0NBQWdDLENBQUMsaUNBQWlDLHVDQUF1Qyw2Q0FBNkMsQ0FBQyx3QkFBd0Isa0JBQWtCLGdEQUFnRCx3REFBd0QsU0FBUyxxQ0FBcUMsRUFBRSxVQUFVLHlCQUF5QixtR0FBbUcsV0FBVyxhQUFhLE1BQU0sRUFBRSwwREFBMEQseUJBQXlCLG1CQUFtQixTQUFTLDRDQUE0Qyw2QkFBNkIsQ0FBQywyQkFBMkIsbUNBQW1DLFNBQVMscUNBQXFDLEVBQUUsVUFBVSxtR0FBbUcsbUNBQW1DLGlFQUFpRSw2SkFBNkosQ0FBQyxrQ0FBa0MsMENBQTBDLFNBQVMscUNBQXFDLEVBQUUsVUFBVSxtR0FBbUcsV0FBVyxRQUFRLE1BQU0sRUFBRSxzQ0FBc0MsNENBQTRDLDZCQUE2QixDQUFDLDhCQUE4QixzQ0FBc0MsWUFBWSxXQUFXLEtBQUssbUJBQW1CLDZCQUE2QixrQkFBa0IsbUZBQW1GLEdBQUcsU0FBUyxDQUFDLHFCQUFxQiwyQkFBMkIscUJBQXFCLGFBQWEsa0JBQWtCLHlCQUF5QixnREFBZ0QsMENBQTBDLDhCQUE4QixDQUFDLGlCQUFpQix1QkFBdUIsNkVBQTZFLENBQUMsWUFBWSxNQUFNLDRCQUE0QiIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL0Bjc3N0b29scytjc3MtcGFyc2VyLWFsZ29yaXRobXNAMy4wLjRfQGNzc3Rvb2xzK2Nzcy10b2tlbml6ZXJAMy4wLjMvbm9kZV9tb2R1bGVzL0Bjc3N0b29scy9jc3MtcGFyc2VyLWFsZ29yaXRobXMvZGlzdC9pbmRleC5janMiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2Ugc3RyaWN0XCI7dmFyIGUsbj1yZXF1aXJlKFwiQGNzc3Rvb2xzL2Nzcy10b2tlbml6ZXJcIik7ZnVuY3Rpb24gd2Fsa2VySW5kZXhHZW5lcmF0b3IoZSl7bGV0IG49ZS5zbGljZSgpO3JldHVybihlLG8sdCk9PntsZXQgcz0tMTtmb3IobGV0IGk9bi5pbmRleE9mKG8pO2k8bi5sZW5ndGgmJihzPWUuaW5kZXhPZihuW2ldKSwtMT09PXN8fHM8dCk7aSsrKTtyZXR1cm4tMT09PXN8fHM9PT10JiZvPT09ZVt0XSYmKHMrKyxzPj1lLmxlbmd0aCk/LTE6KG49ZS5zbGljZSgpLHMpfX1mdW5jdGlvbiBjb25zdW1lQ29tcG9uZW50VmFsdWUoZSxvKXtjb25zdCB0PW9bMF07aWYobi5pc1Rva2VuT3BlblBhcmVuKHQpfHxuLmlzVG9rZW5PcGVuQ3VybHkodCl8fG4uaXNUb2tlbk9wZW5TcXVhcmUodCkpe2NvbnN0IG49Y29uc3VtZVNpbXBsZUJsb2NrKGUsbyk7cmV0dXJue2FkdmFuY2U6bi5hZHZhbmNlLG5vZGU6bi5ub2RlfX1pZihuLmlzVG9rZW5GdW5jdGlvbih0KSl7Y29uc3Qgbj1jb25zdW1lRnVuY3Rpb24oZSxvKTtyZXR1cm57YWR2YW5jZTpuLmFkdmFuY2Usbm9kZTpuLm5vZGV9fWlmKG4uaXNUb2tlbldoaXRlc3BhY2UodCkpe2NvbnN0IG49Y29uc3VtZVdoaXRlc3BhY2UoZSxvKTtyZXR1cm57YWR2YW5jZTpuLmFkdmFuY2Usbm9kZTpuLm5vZGV9fWlmKG4uaXNUb2tlbkNvbW1lbnQodCkpe2NvbnN0IG49Y29uc3VtZUNvbW1lbnQoZSxvKTtyZXR1cm57YWR2YW5jZTpuLmFkdmFuY2Usbm9kZTpuLm5vZGV9fXJldHVybnthZHZhbmNlOjEsbm9kZTpuZXcgVG9rZW5Ob2RlKHQpfX1leHBvcnRzLkNvbXBvbmVudFZhbHVlVHlwZT12b2lkIDAsKGU9ZXhwb3J0cy5Db21wb25lbnRWYWx1ZVR5cGV8fChleHBvcnRzLkNvbXBvbmVudFZhbHVlVHlwZT17fSkpLkZ1bmN0aW9uPVwiZnVuY3Rpb25cIixlLlNpbXBsZUJsb2NrPVwic2ltcGxlLWJsb2NrXCIsZS5XaGl0ZXNwYWNlPVwid2hpdGVzcGFjZVwiLGUuQ29tbWVudD1cImNvbW1lbnRcIixlLlRva2VuPVwidG9rZW5cIjtjbGFzcyBDb250YWluZXJOb2RlQmFzZUNsYXNze3ZhbHVlPVtdO2luZGV4T2YoZSl7cmV0dXJuIHRoaXMudmFsdWUuaW5kZXhPZihlKX1hdChlKXtpZihcIm51bWJlclwiPT10eXBlb2YgZSlyZXR1cm4gZTwwJiYoZT10aGlzLnZhbHVlLmxlbmd0aCtlKSx0aGlzLnZhbHVlW2VdfWZvckVhY2goZSxuKXtpZigwPT09dGhpcy52YWx1ZS5sZW5ndGgpcmV0dXJuO2NvbnN0IG89d2Fsa2VySW5kZXhHZW5lcmF0b3IodGhpcy52YWx1ZSk7bGV0IHQ9MDtmb3IoO3Q8dGhpcy52YWx1ZS5sZW5ndGg7KXtjb25zdCBzPXRoaXMudmFsdWVbdF07bGV0IGk7aWYobiYmKGk9ey4uLm59KSwhMT09PWUoe25vZGU6cyxwYXJlbnQ6dGhpcyxzdGF0ZTppfSx0KSlyZXR1cm4hMTtpZih0PW8odGhpcy52YWx1ZSxzLHQpLC0xPT09dClicmVha319d2FsayhlLG4pezAhPT10aGlzLnZhbHVlLmxlbmd0aCYmdGhpcy5mb3JFYWNoKCgobixvKT0+ITEhPT1lKG4sbykmJigoIShcIndhbGtcImluIG4ubm9kZSl8fCF0aGlzLnZhbHVlLmluY2x1ZGVzKG4ubm9kZSl8fCExIT09bi5ub2RlLndhbGsoZSxuLnN0YXRlKSkmJnZvaWQgMCkpLG4pfX1jbGFzcyBGdW5jdGlvbk5vZGUgZXh0ZW5kcyBDb250YWluZXJOb2RlQmFzZUNsYXNze3R5cGU9ZXhwb3J0cy5Db21wb25lbnRWYWx1ZVR5cGUuRnVuY3Rpb247bmFtZTtlbmRUb2tlbjtjb25zdHJ1Y3RvcihlLG4sbyl7c3VwZXIoKSx0aGlzLm5hbWU9ZSx0aGlzLmVuZFRva2VuPW4sdGhpcy52YWx1ZT1vfWdldE5hbWUoKXtyZXR1cm4gdGhpcy5uYW1lWzRdLnZhbHVlfW5vcm1hbGl6ZSgpe24uaXNUb2tlbkVPRih0aGlzLmVuZFRva2VuKSYmKHRoaXMuZW5kVG9rZW49W24uVG9rZW5UeXBlLkNsb3NlUGFyZW4sXCIpXCIsLTEsLTEsdm9pZCAwXSl9dG9rZW5zKCl7cmV0dXJuIG4uaXNUb2tlbkVPRih0aGlzLmVuZFRva2VuKT9bdGhpcy5uYW1lLC4uLnRoaXMudmFsdWUuZmxhdE1hcCgoZT0+ZS50b2tlbnMoKSkpXTpbdGhpcy5uYW1lLC4uLnRoaXMudmFsdWUuZmxhdE1hcCgoZT0+ZS50b2tlbnMoKSkpLHRoaXMuZW5kVG9rZW5dfXRvU3RyaW5nKCl7Y29uc3QgZT10aGlzLnZhbHVlLm1hcCgoZT0+bi5pc1Rva2VuKGUpP24uc3RyaW5naWZ5KGUpOmUudG9TdHJpbmcoKSkpLmpvaW4oXCJcIik7cmV0dXJuIG4uc3RyaW5naWZ5KHRoaXMubmFtZSkrZStuLnN0cmluZ2lmeSh0aGlzLmVuZFRva2VuKX10b0pTT04oKXtyZXR1cm57dHlwZTp0aGlzLnR5cGUsbmFtZTp0aGlzLmdldE5hbWUoKSx0b2tlbnM6dGhpcy50b2tlbnMoKSx2YWx1ZTp0aGlzLnZhbHVlLm1hcCgoZT0+ZS50b0pTT04oKSkpfX1pc0Z1bmN0aW9uTm9kZSgpe3JldHVybiBGdW5jdGlvbk5vZGUuaXNGdW5jdGlvbk5vZGUodGhpcyl9c3RhdGljIGlzRnVuY3Rpb25Ob2RlKGUpe3JldHVybiEhZSYmKGUgaW5zdGFuY2VvZiBGdW5jdGlvbk5vZGUmJmUudHlwZT09PWV4cG9ydHMuQ29tcG9uZW50VmFsdWVUeXBlLkZ1bmN0aW9uKX19ZnVuY3Rpb24gY29uc3VtZUZ1bmN0aW9uKGUsbyl7Y29uc3QgdD1bXTtsZXQgcz0xO2Zvcig7Oyl7Y29uc3QgaT1vW3NdO2lmKCFpfHxuLmlzVG9rZW5FT0YoaSkpcmV0dXJuIGUub25QYXJzZUVycm9yKG5ldyBuLlBhcnNlRXJyb3IoXCJVbmV4cGVjdGVkIEVPRiB3aGlsZSBjb25zdW1pbmcgYSBmdW5jdGlvbi5cIixvWzBdWzJdLG9bby5sZW5ndGgtMV1bM10sW1wiNS40LjkuIENvbnN1bWUgYSBmdW5jdGlvblwiLFwiVW5leHBlY3RlZCBFT0ZcIl0pKSx7YWR2YW5jZTpvLmxlbmd0aCxub2RlOm5ldyBGdW5jdGlvbk5vZGUob1swXSxpLHQpfTtpZihuLmlzVG9rZW5DbG9zZVBhcmVuKGkpKXJldHVybnthZHZhbmNlOnMrMSxub2RlOm5ldyBGdW5jdGlvbk5vZGUob1swXSxpLHQpfTtpZihuLmlzVG9rZW5XaGl0ZVNwYWNlT3JDb21tZW50KGkpKXtjb25zdCBuPWNvbnN1bWVBbGxDb21tZW50c0FuZFdoaXRlc3BhY2UoZSxvLnNsaWNlKHMpKTtzKz1uLmFkdmFuY2UsdC5wdXNoKC4uLm4ubm9kZXMpO2NvbnRpbnVlfWNvbnN0IHI9Y29uc3VtZUNvbXBvbmVudFZhbHVlKGUsby5zbGljZShzKSk7cys9ci5hZHZhbmNlLHQucHVzaChyLm5vZGUpfX1jbGFzcyBTaW1wbGVCbG9ja05vZGUgZXh0ZW5kcyBDb250YWluZXJOb2RlQmFzZUNsYXNze3R5cGU9ZXhwb3J0cy5Db21wb25lbnRWYWx1ZVR5cGUuU2ltcGxlQmxvY2s7c3RhcnRUb2tlbjtlbmRUb2tlbjtjb25zdHJ1Y3RvcihlLG4sbyl7c3VwZXIoKSx0aGlzLnN0YXJ0VG9rZW49ZSx0aGlzLmVuZFRva2VuPW4sdGhpcy52YWx1ZT1vfW5vcm1hbGl6ZSgpe2lmKG4uaXNUb2tlbkVPRih0aGlzLmVuZFRva2VuKSl7Y29uc3QgZT1uLm1pcnJvclZhcmlhbnQodGhpcy5zdGFydFRva2VuKTtlJiYodGhpcy5lbmRUb2tlbj1lKX19dG9rZW5zKCl7cmV0dXJuIG4uaXNUb2tlbkVPRih0aGlzLmVuZFRva2VuKT9bdGhpcy5zdGFydFRva2VuLC4uLnRoaXMudmFsdWUuZmxhdE1hcCgoZT0+ZS50b2tlbnMoKSkpXTpbdGhpcy5zdGFydFRva2VuLC4uLnRoaXMudmFsdWUuZmxhdE1hcCgoZT0+ZS50b2tlbnMoKSkpLHRoaXMuZW5kVG9rZW5dfXRvU3RyaW5nKCl7Y29uc3QgZT10aGlzLnZhbHVlLm1hcCgoZT0+bi5pc1Rva2VuKGUpP24uc3RyaW5naWZ5KGUpOmUudG9TdHJpbmcoKSkpLmpvaW4oXCJcIik7cmV0dXJuIG4uc3RyaW5naWZ5KHRoaXMuc3RhcnRUb2tlbikrZStuLnN0cmluZ2lmeSh0aGlzLmVuZFRva2VuKX10b0pTT04oKXtyZXR1cm57dHlwZTp0aGlzLnR5cGUsc3RhcnRUb2tlbjp0aGlzLnN0YXJ0VG9rZW4sdG9rZW5zOnRoaXMudG9rZW5zKCksdmFsdWU6dGhpcy52YWx1ZS5tYXAoKGU9PmUudG9KU09OKCkpKX19aXNTaW1wbGVCbG9ja05vZGUoKXtyZXR1cm4gU2ltcGxlQmxvY2tOb2RlLmlzU2ltcGxlQmxvY2tOb2RlKHRoaXMpfXN0YXRpYyBpc1NpbXBsZUJsb2NrTm9kZShlKXtyZXR1cm4hIWUmJihlIGluc3RhbmNlb2YgU2ltcGxlQmxvY2tOb2RlJiZlLnR5cGU9PT1leHBvcnRzLkNvbXBvbmVudFZhbHVlVHlwZS5TaW1wbGVCbG9jayl9fWZ1bmN0aW9uIGNvbnN1bWVTaW1wbGVCbG9jayhlLG8pe2NvbnN0IHQ9bi5taXJyb3JWYXJpYW50VHlwZShvWzBdWzBdKTtpZighdCl0aHJvdyBuZXcgRXJyb3IoXCJGYWlsZWQgdG8gcGFyc2UsIGEgbWlycm9yIHZhcmlhbnQgbXVzdCBleGlzdCBmb3IgYWxsIGJsb2NrIG9wZW4gdG9rZW5zLlwiKTtjb25zdCBzPVtdO2xldCBpPTE7Zm9yKDs7KXtjb25zdCByPW9baV07aWYoIXJ8fG4uaXNUb2tlbkVPRihyKSlyZXR1cm4gZS5vblBhcnNlRXJyb3IobmV3IG4uUGFyc2VFcnJvcihcIlVuZXhwZWN0ZWQgRU9GIHdoaWxlIGNvbnN1bWluZyBhIHNpbXBsZSBibG9jay5cIixvWzBdWzJdLG9bby5sZW5ndGgtMV1bM10sW1wiNS40LjguIENvbnN1bWUgYSBzaW1wbGUgYmxvY2tcIixcIlVuZXhwZWN0ZWQgRU9GXCJdKSkse2FkdmFuY2U6by5sZW5ndGgsbm9kZTpuZXcgU2ltcGxlQmxvY2tOb2RlKG9bMF0scixzKX07aWYoclswXT09PXQpcmV0dXJue2FkdmFuY2U6aSsxLG5vZGU6bmV3IFNpbXBsZUJsb2NrTm9kZShvWzBdLHIscyl9O2lmKG4uaXNUb2tlbldoaXRlU3BhY2VPckNvbW1lbnQocikpe2NvbnN0IG49Y29uc3VtZUFsbENvbW1lbnRzQW5kV2hpdGVzcGFjZShlLG8uc2xpY2UoaSkpO2krPW4uYWR2YW5jZSxzLnB1c2goLi4ubi5ub2Rlcyk7Y29udGludWV9Y29uc3QgYT1jb25zdW1lQ29tcG9uZW50VmFsdWUoZSxvLnNsaWNlKGkpKTtpKz1hLmFkdmFuY2Uscy5wdXNoKGEubm9kZSl9fWNsYXNzIFdoaXRlc3BhY2VOb2Rle3R5cGU9ZXhwb3J0cy5Db21wb25lbnRWYWx1ZVR5cGUuV2hpdGVzcGFjZTt2YWx1ZTtjb25zdHJ1Y3RvcihlKXt0aGlzLnZhbHVlPWV9dG9rZW5zKCl7cmV0dXJuIHRoaXMudmFsdWV9dG9TdHJpbmcoKXtyZXR1cm4gbi5zdHJpbmdpZnkoLi4udGhpcy52YWx1ZSl9dG9KU09OKCl7cmV0dXJue3R5cGU6dGhpcy50eXBlLHRva2Vuczp0aGlzLnRva2VucygpfX1pc1doaXRlc3BhY2VOb2RlKCl7cmV0dXJuIFdoaXRlc3BhY2VOb2RlLmlzV2hpdGVzcGFjZU5vZGUodGhpcyl9c3RhdGljIGlzV2hpdGVzcGFjZU5vZGUoZSl7cmV0dXJuISFlJiYoZSBpbnN0YW5jZW9mIFdoaXRlc3BhY2VOb2RlJiZlLnR5cGU9PT1leHBvcnRzLkNvbXBvbmVudFZhbHVlVHlwZS5XaGl0ZXNwYWNlKX19ZnVuY3Rpb24gY29uc3VtZVdoaXRlc3BhY2UoZSxvKXtsZXQgdD0wO2Zvcig7Oyl7Y29uc3QgZT1vW3RdO2lmKCFuLmlzVG9rZW5XaGl0ZXNwYWNlKGUpKXJldHVybnthZHZhbmNlOnQsbm9kZTpuZXcgV2hpdGVzcGFjZU5vZGUoby5zbGljZSgwLHQpKX07dCsrfX1jbGFzcyBDb21tZW50Tm9kZXt0eXBlPWV4cG9ydHMuQ29tcG9uZW50VmFsdWVUeXBlLkNvbW1lbnQ7dmFsdWU7Y29uc3RydWN0b3IoZSl7dGhpcy52YWx1ZT1lfXRva2Vucygpe3JldHVyblt0aGlzLnZhbHVlXX10b1N0cmluZygpe3JldHVybiBuLnN0cmluZ2lmeSh0aGlzLnZhbHVlKX10b0pTT04oKXtyZXR1cm57dHlwZTp0aGlzLnR5cGUsdG9rZW5zOnRoaXMudG9rZW5zKCl9fWlzQ29tbWVudE5vZGUoKXtyZXR1cm4gQ29tbWVudE5vZGUuaXNDb21tZW50Tm9kZSh0aGlzKX1zdGF0aWMgaXNDb21tZW50Tm9kZShlKXtyZXR1cm4hIWUmJihlIGluc3RhbmNlb2YgQ29tbWVudE5vZGUmJmUudHlwZT09PWV4cG9ydHMuQ29tcG9uZW50VmFsdWVUeXBlLkNvbW1lbnQpfX1mdW5jdGlvbiBjb25zdW1lQ29tbWVudChlLG4pe3JldHVybnthZHZhbmNlOjEsbm9kZTpuZXcgQ29tbWVudE5vZGUoblswXSl9fWZ1bmN0aW9uIGNvbnN1bWVBbGxDb21tZW50c0FuZFdoaXRlc3BhY2UoZSxvKXtjb25zdCB0PVtdO2xldCBzPTA7Zm9yKDs7KWlmKG4uaXNUb2tlbldoaXRlc3BhY2Uob1tzXSkpe2NvbnN0IGU9Y29uc3VtZVdoaXRlc3BhY2UoMCxvLnNsaWNlKHMpKTtzKz1lLmFkdmFuY2UsdC5wdXNoKGUubm9kZSl9ZWxzZXtpZighbi5pc1Rva2VuQ29tbWVudChvW3NdKSlyZXR1cm57YWR2YW5jZTpzLG5vZGVzOnR9O3QucHVzaChuZXcgQ29tbWVudE5vZGUob1tzXSkpLHMrK319Y2xhc3MgVG9rZW5Ob2Rle3R5cGU9ZXhwb3J0cy5Db21wb25lbnRWYWx1ZVR5cGUuVG9rZW47dmFsdWU7Y29uc3RydWN0b3IoZSl7dGhpcy52YWx1ZT1lfXRva2Vucygpe3JldHVyblt0aGlzLnZhbHVlXX10b1N0cmluZygpe3JldHVybiB0aGlzLnZhbHVlWzFdfXRvSlNPTigpe3JldHVybnt0eXBlOnRoaXMudHlwZSx0b2tlbnM6dGhpcy50b2tlbnMoKX19aXNUb2tlbk5vZGUoKXtyZXR1cm4gVG9rZW5Ob2RlLmlzVG9rZW5Ob2RlKHRoaXMpfXN0YXRpYyBpc1Rva2VuTm9kZShlKXtyZXR1cm4hIWUmJihlIGluc3RhbmNlb2YgVG9rZW5Ob2RlJiZlLnR5cGU9PT1leHBvcnRzLkNvbXBvbmVudFZhbHVlVHlwZS5Ub2tlbil9fWZ1bmN0aW9uIGZvckVhY2goZSxuLG8pe2lmKDA9PT1lLmxlbmd0aClyZXR1cm47Y29uc3QgdD13YWxrZXJJbmRleEdlbmVyYXRvcihlKTtsZXQgcz0wO2Zvcig7czxlLmxlbmd0aDspe2NvbnN0IGk9ZVtzXTtsZXQgcjtpZihvJiYocj17Li4ub30pLCExPT09bih7bm9kZTppLHBhcmVudDp7dmFsdWU6ZX0sc3RhdGU6cn0scykpcmV0dXJuITE7aWYocz10KGUsaSxzKSwtMT09PXMpYnJlYWt9fWZ1bmN0aW9uIHdhbGsoZSxuLG8pezAhPT1lLmxlbmd0aCYmZm9yRWFjaChlLCgobyx0KT0+ITEhPT1uKG8sdCkmJigoIShcIndhbGtcImluIG8ubm9kZSl8fCFlLmluY2x1ZGVzKG8ubm9kZSl8fCExIT09by5ub2RlLndhbGsobixvLnN0YXRlKSkmJnZvaWQgMCkpLG8pfWZ1bmN0aW9uIGlzV2hpdGVzcGFjZU5vZGUoZSl7cmV0dXJuIFdoaXRlc3BhY2VOb2RlLmlzV2hpdGVzcGFjZU5vZGUoZSl9ZnVuY3Rpb24gaXNDb21tZW50Tm9kZShlKXtyZXR1cm4gQ29tbWVudE5vZGUuaXNDb21tZW50Tm9kZShlKX1leHBvcnRzLkNvbW1lbnROb2RlPUNvbW1lbnROb2RlLGV4cG9ydHMuQ29udGFpbmVyTm9kZUJhc2VDbGFzcz1Db250YWluZXJOb2RlQmFzZUNsYXNzLGV4cG9ydHMuRnVuY3Rpb25Ob2RlPUZ1bmN0aW9uTm9kZSxleHBvcnRzLlNpbXBsZUJsb2NrTm9kZT1TaW1wbGVCbG9ja05vZGUsZXhwb3J0cy5Ub2tlbk5vZGU9VG9rZW5Ob2RlLGV4cG9ydHMuV2hpdGVzcGFjZU5vZGU9V2hpdGVzcGFjZU5vZGUsZXhwb3J0cy5mb3JFYWNoPWZvckVhY2gsZXhwb3J0cy5nYXRoZXJOb2RlQW5jZXN0cnk9ZnVuY3Rpb24gZ2F0aGVyTm9kZUFuY2VzdHJ5KGUpe2NvbnN0IG49bmV3IE1hcDtyZXR1cm4gZS53YWxrKChlPT57QXJyYXkuaXNBcnJheShlLm5vZGUpP2Uubm9kZS5mb3JFYWNoKChvPT57bi5zZXQobyxlLnBhcmVudCl9KSk6bi5zZXQoZS5ub2RlLGUucGFyZW50KX0pKSxufSxleHBvcnRzLmlzQ29tbWVudE5vZGU9aXNDb21tZW50Tm9kZSxleHBvcnRzLmlzRnVuY3Rpb25Ob2RlPWZ1bmN0aW9uIGlzRnVuY3Rpb25Ob2RlKGUpe3JldHVybiBGdW5jdGlvbk5vZGUuaXNGdW5jdGlvbk5vZGUoZSl9LGV4cG9ydHMuaXNTaW1wbGVCbG9ja05vZGU9ZnVuY3Rpb24gaXNTaW1wbGVCbG9ja05vZGUoZSl7cmV0dXJuIFNpbXBsZUJsb2NrTm9kZS5pc1NpbXBsZUJsb2NrTm9kZShlKX0sZXhwb3J0cy5pc1Rva2VuTm9kZT1mdW5jdGlvbiBpc1Rva2VuTm9kZShlKXtyZXR1cm4gVG9rZW5Ob2RlLmlzVG9rZW5Ob2RlKGUpfSxleHBvcnRzLmlzV2hpdGVTcGFjZU9yQ29tbWVudE5vZGU9ZnVuY3Rpb24gaXNXaGl0ZVNwYWNlT3JDb21tZW50Tm9kZShlKXtyZXR1cm4gaXNXaGl0ZXNwYWNlTm9kZShlKXx8aXNDb21tZW50Tm9kZShlKX0sZXhwb3J0cy5pc1doaXRlc3BhY2VOb2RlPWlzV2hpdGVzcGFjZU5vZGUsZXhwb3J0cy5wYXJzZUNvbW1hU2VwYXJhdGVkTGlzdE9mQ29tcG9uZW50VmFsdWVzPWZ1bmN0aW9uIHBhcnNlQ29tbWFTZXBhcmF0ZWRMaXN0T2ZDb21wb25lbnRWYWx1ZXMoZSxvKXtjb25zdCB0PXtvblBhcnNlRXJyb3I6bz8ub25QYXJzZUVycm9yPz8oKCk9Pnt9KX0scz1bLi4uZV07aWYoMD09PWUubGVuZ3RoKXJldHVybltdO24uaXNUb2tlbkVPRihzW3MubGVuZ3RoLTFdKSYmcy5wdXNoKFtuLlRva2VuVHlwZS5FT0YsXCJcIixzW3MubGVuZ3RoLTFdWzJdLHNbcy5sZW5ndGgtMV1bM10sdm9pZCAwXSk7Y29uc3QgaT1bXTtsZXQgcj1bXSxhPTA7Zm9yKDs7KXtpZighc1thXXx8bi5pc1Rva2VuRU9GKHNbYV0pKXJldHVybiByLmxlbmd0aCYmaS5wdXNoKHIpLGk7aWYobi5pc1Rva2VuQ29tbWEoc1thXSkpe2kucHVzaChyKSxyPVtdLGErKztjb250aW51ZX1jb25zdCBvPWNvbnN1bWVDb21wb25lbnRWYWx1ZSh0LGUuc2xpY2UoYSkpO3IucHVzaChvLm5vZGUpLGErPW8uYWR2YW5jZX19LGV4cG9ydHMucGFyc2VDb21wb25lbnRWYWx1ZT1mdW5jdGlvbiBwYXJzZUNvbXBvbmVudFZhbHVlKGUsbyl7Y29uc3QgdD17b25QYXJzZUVycm9yOm8/Lm9uUGFyc2VFcnJvcj8/KCgpPT57fSl9LHM9Wy4uLmVdO24uaXNUb2tlbkVPRihzW3MubGVuZ3RoLTFdKSYmcy5wdXNoKFtuLlRva2VuVHlwZS5FT0YsXCJcIixzW3MubGVuZ3RoLTFdWzJdLHNbcy5sZW5ndGgtMV1bM10sdm9pZCAwXSk7Y29uc3QgaT1jb25zdW1lQ29tcG9uZW50VmFsdWUodCxzKTtpZihuLmlzVG9rZW5FT0Yoc1tNYXRoLm1pbihpLmFkdmFuY2Uscy5sZW5ndGgtMSldKSlyZXR1cm4gaS5ub2RlO3Qub25QYXJzZUVycm9yKG5ldyBuLlBhcnNlRXJyb3IoXCJFeHBlY3RlZCBFT0YgYWZ0ZXIgcGFyc2luZyBhIGNvbXBvbmVudCB2YWx1ZS5cIixlWzBdWzJdLGVbZS5sZW5ndGgtMV1bM10sW1wiNS4zLjkuIFBhcnNlIGEgY29tcG9uZW50IHZhbHVlXCIsXCJFeHBlY3RlZCBFT0ZcIl0pKX0sZXhwb3J0cy5wYXJzZUxpc3RPZkNvbXBvbmVudFZhbHVlcz1mdW5jdGlvbiBwYXJzZUxpc3RPZkNvbXBvbmVudFZhbHVlcyhlLG8pe2NvbnN0IHQ9e29uUGFyc2VFcnJvcjpvPy5vblBhcnNlRXJyb3I/PygoKT0+e30pfSxzPVsuLi5lXTtuLmlzVG9rZW5FT0Yoc1tzLmxlbmd0aC0xXSkmJnMucHVzaChbbi5Ub2tlblR5cGUuRU9GLFwiXCIsc1tzLmxlbmd0aC0xXVsyXSxzW3MubGVuZ3RoLTFdWzNdLHZvaWQgMF0pO2NvbnN0IGk9W107bGV0IHI9MDtmb3IoOzspe2lmKCFzW3JdfHxuLmlzVG9rZW5FT0Yoc1tyXSkpcmV0dXJuIGk7Y29uc3QgZT1jb25zdW1lQ29tcG9uZW50VmFsdWUodCxzLnNsaWNlKHIpKTtpLnB1c2goZS5ub2RlKSxyKz1lLmFkdmFuY2V9fSxleHBvcnRzLnJlcGxhY2VDb21wb25lbnRWYWx1ZXM9ZnVuY3Rpb24gcmVwbGFjZUNvbXBvbmVudFZhbHVlcyhlLG4pe2ZvcihsZXQgbz0wO288ZS5sZW5ndGg7bysrKXt3YWxrKGVbb10sKChlLG8pPT57aWYoXCJudW1iZXJcIiE9dHlwZW9mIG8pcmV0dXJuO2NvbnN0IHQ9bihlLm5vZGUpO3QmJihBcnJheS5pc0FycmF5KHQpP2UucGFyZW50LnZhbHVlLnNwbGljZShvLDEsLi4udCk6ZS5wYXJlbnQudmFsdWUuc3BsaWNlKG8sMSx0KSl9KSl9cmV0dXJuIGV9LGV4cG9ydHMuc291cmNlSW5kaWNlcz1mdW5jdGlvbiBzb3VyY2VJbmRpY2VzKGUpe2lmKEFycmF5LmlzQXJyYXkoZSkpe2NvbnN0IG49ZVswXTtpZighbilyZXR1cm5bMCwwXTtjb25zdCBvPWVbZS5sZW5ndGgtMV18fG47cmV0dXJuW3NvdXJjZUluZGljZXMobilbMF0sc291cmNlSW5kaWNlcyhvKVsxXV19Y29uc3Qgbj1lLnRva2VucygpLG89blswXSx0PW5bbi5sZW5ndGgtMV07cmV0dXJuIG8mJnQ/W29bMl0sdFszXV06WzAsMF19LGV4cG9ydHMuc3RyaW5naWZ5PWZ1bmN0aW9uIHN0cmluZ2lmeShlKXtyZXR1cm4gZS5tYXAoKGU9PmUubWFwKChlPT5uLnN0cmluZ2lmeSguLi5lLnRva2VucygpKSkpLmpvaW4oXCJcIikpKS5qb2luKFwiLFwiKX0sZXhwb3J0cy53YWxrPXdhbGssZXhwb3J0cy53YWxrZXJJbmRleEdlbmVyYXRvcj13YWxrZXJJbmRleEdlbmVyYXRvcjtcbiJdLCJuYW1lcyI6W10sImlnbm9yZUxpc3QiOlswXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/.pnpm/@csstools+css-parser-algorithms@3.0.4_@csstools+css-tokenizer@3.0.3/node_modules/@csstools/css-parser-algorithms/dist/index.cjs\n");

/***/ })

};
;