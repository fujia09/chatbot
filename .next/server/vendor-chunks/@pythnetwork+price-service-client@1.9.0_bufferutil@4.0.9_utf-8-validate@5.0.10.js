"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10";
exports.ids = ["vendor-chunks/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10"];
exports.modules = {

/***/ "(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/PriceServiceConnection.js":
/*!****************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/PriceServiceConnection.js ***!
  \****************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.PriceServiceConnection = void 0;\nconst price_service_sdk_1 = __webpack_require__(/*! @pythnetwork/price-service-sdk */ \"(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-sdk@1.8.0/node_modules/@pythnetwork/price-service-sdk/lib/index.js\");\nconst axios_1 = __importDefault(__webpack_require__(/*! axios */ \"(rsc)/./node_modules/.pnpm/axios@1.7.9/node_modules/axios/dist/node/axios.cjs\"));\nconst axios_retry_1 = __importDefault(__webpack_require__(/*! axios-retry */ \"(rsc)/./node_modules/.pnpm/axios-retry@3.9.1/node_modules/axios-retry/index.js\"));\nconst ResillientWebSocket_1 = __webpack_require__(/*! ./ResillientWebSocket */ \"(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/ResillientWebSocket.js\");\nconst utils_1 = __webpack_require__(/*! ./utils */ \"(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/utils.js\");\nclass PriceServiceConnection {\n    httpClient;\n    priceFeedCallbacks;\n    wsClient;\n    wsEndpoint;\n    logger;\n    priceFeedRequestConfig;\n    /**\n     * Custom handler for web socket errors (connection and message parsing).\n     *\n     * Default handler only logs the errors.\n     */\n    onWsError;\n    /**\n     * Constructs a new Connection.\n     *\n     * @param endpoint endpoint URL to the price service. Example: https://website/example/\n     * @param config Optional PriceServiceConnectionConfig for custom configurations.\n     */\n    constructor(endpoint, config) {\n        this.httpClient = axios_1.default.create({\n            baseURL: endpoint,\n            timeout: config?.timeout || 5000,\n        });\n        (0, axios_retry_1.default)(this.httpClient, {\n            retries: config?.httpRetries || 3,\n            retryDelay: axios_retry_1.default.exponentialDelay,\n        });\n        this.priceFeedRequestConfig = {\n            binary: config?.priceFeedRequestConfig?.binary,\n            verbose: config?.priceFeedRequestConfig?.verbose ?? config?.verbose,\n            allowOutOfOrder: config?.priceFeedRequestConfig?.allowOutOfOrder,\n        };\n        this.priceFeedCallbacks = new Map();\n        // Default logger is console for only warnings and errors.\n        this.logger = config?.logger || {\n            trace: () => { },\n            debug: () => { },\n            info: () => { },\n            warn: console.warn,\n            error: console.error,\n        };\n        this.onWsError = (error) => {\n            this.logger.error(error);\n            // Exit the process if it is running in node.\n            if (typeof process !== \"undefined\" &&\n                typeof process.exit === \"function\") {\n                this.logger.error(\"Halting the process due to the websocket error\");\n                process.exit(1);\n            }\n            else {\n                this.logger.error(\"Cannot halt process. Please handle the websocket error.\");\n            }\n        };\n        this.wsEndpoint = (0, utils_1.makeWebsocketUrl)(endpoint);\n    }\n    /**\n     * Fetch Latest PriceFeeds of given price ids.\n     * This will throw an axios error if there is a network problem or the price service returns a non-ok response (e.g: Invalid price ids)\n     *\n     * @param priceIds Array of hex-encoded price ids.\n     * @returns Array of PriceFeeds\n     */\n    async getLatestPriceFeeds(priceIds) {\n        if (priceIds.length === 0) {\n            return [];\n        }\n        const response = await this.httpClient.get(\"/api/latest_price_feeds\", {\n            params: {\n                ids: priceIds,\n                verbose: this.priceFeedRequestConfig.verbose,\n                binary: this.priceFeedRequestConfig.binary,\n            },\n        });\n        const priceFeedsJson = response.data;\n        return priceFeedsJson.map((priceFeedJson) => price_service_sdk_1.PriceFeed.fromJson(priceFeedJson));\n    }\n    /**\n     * Fetch latest VAA of given price ids.\n     * This will throw an axios error if there is a network problem or the price service returns a non-ok response (e.g: Invalid price ids)\n     *\n     * This function is coupled to wormhole implemntation.\n     *\n     * @param priceIds Array of hex-encoded price ids.\n     * @returns Array of base64 encoded VAAs.\n     */\n    async getLatestVaas(priceIds) {\n        const response = await this.httpClient.get(\"/api/latest_vaas\", {\n            params: {\n                ids: priceIds,\n            },\n        });\n        return response.data;\n    }\n    /**\n     * Fetch the earliest VAA of the given price id that is published since the given publish time.\n     * This will throw an error if the given publish time is in the future, or if the publish time\n     * is old and the price service endpoint does not have a db backend for historical requests.\n     * This will throw an axios error if there is a network problem or the price service returns a non-ok response (e.g: Invalid price id)\n     *\n     * This function is coupled to wormhole implemntation.\n     *\n     * @param priceId Hex-encoded price id.\n     * @param publishTime Epoch timestamp in seconds.\n     * @returns Tuple of VAA and publishTime.\n     */\n    async getVaa(priceId, publishTime) {\n        const response = await this.httpClient.get(\"/api/get_vaa\", {\n            params: {\n                id: priceId,\n                publish_time: publishTime,\n            },\n        });\n        return [response.data.vaa, response.data.publishTime];\n    }\n    /**\n     * Fetch the PriceFeed of the given price id that is published since the given publish time.\n     * This will throw an error if the given publish time is in the future, or if the publish time\n     * is old and the price service endpoint does not have a db backend for historical requests.\n     * This will throw an axios error if there is a network problem or the price service returns a non-ok response (e.g: Invalid price id)\n     *\n     * @param priceId Hex-encoded price id.\n     * @param publishTime Epoch timestamp in seconds.\n     * @returns PriceFeed\n     */\n    async getPriceFeed(priceId, publishTime) {\n        const response = await this.httpClient.get(\"/api/get_price_feed\", {\n            params: {\n                id: priceId,\n                publish_time: publishTime,\n                verbose: this.priceFeedRequestConfig.verbose,\n                binary: this.priceFeedRequestConfig.binary,\n            },\n        });\n        return price_service_sdk_1.PriceFeed.fromJson(response.data);\n    }\n    /**\n     * Fetch the list of available price feed ids.\n     * This will throw an axios error if there is a network problem or the price service returns a non-ok response.\n     *\n     * @returns Array of hex-encoded price ids.\n     */\n    async getPriceFeedIds() {\n        const response = await this.httpClient.get(\"/api/price_feed_ids\");\n        return response.data;\n    }\n    /**\n     * Subscribe to updates for given price ids.\n     *\n     * It will start a websocket connection if it's not started yet.\n     * Also, it won't throw any exception if given price ids are invalid or connection errors. Instead,\n     * it calls `connection.onWsError`. If you want to handle the errors you should set the\n     * `onWsError` function to your custom error handler.\n     *\n     * @param priceIds Array of hex-encoded price ids.\n     * @param cb Callback function that is called with a PriceFeed upon updates to given price ids.\n     */\n    async subscribePriceFeedUpdates(priceIds, cb) {\n        if (this.wsClient === undefined) {\n            await this.startWebSocket();\n        }\n        priceIds = priceIds.map((priceId) => (0, utils_1.removeLeading0xIfExists)(priceId));\n        const newPriceIds = [];\n        for (const id of priceIds) {\n            if (!this.priceFeedCallbacks.has(id)) {\n                this.priceFeedCallbacks.set(id, new Set());\n                newPriceIds.push(id);\n            }\n            this.priceFeedCallbacks.get(id).add(cb);\n        }\n        const message = {\n            ids: newPriceIds,\n            type: \"subscribe\",\n            verbose: this.priceFeedRequestConfig.verbose,\n            binary: this.priceFeedRequestConfig.binary,\n            allow_out_of_order: this.priceFeedRequestConfig.allowOutOfOrder,\n        };\n        await this.wsClient?.send(JSON.stringify(message));\n    }\n    /**\n     * Unsubscribe from updates for given price ids.\n     *\n     * It will close the websocket connection if it's not subscribed to any price feed updates anymore.\n     * Also, it won't throw any exception if given price ids are invalid or connection errors. Instead,\n     * it calls `connection.onWsError`. If you want to handle the errors you should set the\n     * `onWsError` function to your custom error handler.\n     *\n     * @param priceIds Array of hex-encoded price ids.\n     * @param cb Optional callback, if set it will only unsubscribe this callback from updates for given price ids.\n     */\n    async unsubscribePriceFeedUpdates(priceIds, cb) {\n        if (this.wsClient === undefined) {\n            await this.startWebSocket();\n        }\n        priceIds = priceIds.map((priceId) => (0, utils_1.removeLeading0xIfExists)(priceId));\n        const removedPriceIds = [];\n        for (const id of priceIds) {\n            if (this.priceFeedCallbacks.has(id)) {\n                let idRemoved = false;\n                if (cb === undefined) {\n                    this.priceFeedCallbacks.delete(id);\n                    idRemoved = true;\n                }\n                else {\n                    this.priceFeedCallbacks.get(id).delete(cb);\n                    if (this.priceFeedCallbacks.get(id).size === 0) {\n                        this.priceFeedCallbacks.delete(id);\n                        idRemoved = true;\n                    }\n                }\n                if (idRemoved) {\n                    removedPriceIds.push(id);\n                }\n            }\n        }\n        const message = {\n            ids: removedPriceIds,\n            type: \"unsubscribe\",\n        };\n        await this.wsClient?.send(JSON.stringify(message));\n        if (this.priceFeedCallbacks.size === 0) {\n            this.closeWebSocket();\n        }\n    }\n    /**\n     * Starts connection websocket.\n     *\n     * This function is called automatically upon subscribing to price feed updates.\n     */\n    async startWebSocket() {\n        if (this.wsEndpoint === undefined) {\n            throw new Error(\"Websocket endpoint is undefined.\");\n        }\n        this.wsClient = new ResillientWebSocket_1.ResilientWebSocket(this.wsEndpoint, this.logger);\n        this.wsClient.onError = this.onWsError;\n        this.wsClient.onReconnect = () => {\n            if (this.priceFeedCallbacks.size > 0) {\n                const message = {\n                    ids: Array.from(this.priceFeedCallbacks.keys()),\n                    type: \"subscribe\",\n                    verbose: this.priceFeedRequestConfig.verbose,\n                    binary: this.priceFeedRequestConfig.binary,\n                    allow_out_of_order: this.priceFeedRequestConfig.allowOutOfOrder,\n                };\n                this.logger.info(\"Resubscribing to existing price feeds.\");\n                this.wsClient?.send(JSON.stringify(message));\n            }\n        };\n        this.wsClient.onMessage = (data) => {\n            this.logger.info(`Received message ${data.toString()}`);\n            let message;\n            try {\n                message = JSON.parse(data.toString());\n            }\n            catch (e) {\n                this.logger.error(`Error parsing message ${data.toString()} as JSON.`);\n                this.logger.error(e);\n                this.onWsError(e);\n                return;\n            }\n            if (message.type === \"response\") {\n                if (message.status === \"error\") {\n                    this.logger.error(`Error response from the websocket server ${message.error}.`);\n                    this.onWsError(new Error(message.error));\n                }\n            }\n            else if (message.type === \"price_update\") {\n                let priceFeed;\n                try {\n                    priceFeed = price_service_sdk_1.PriceFeed.fromJson(message.price_feed);\n                }\n                catch (e) {\n                    this.logger.error(`Error parsing price feeds from message ${data.toString()}.`);\n                    this.logger.error(e);\n                    this.onWsError(e);\n                    return;\n                }\n                if (this.priceFeedCallbacks.has(priceFeed.id)) {\n                    for (const cb of this.priceFeedCallbacks.get(priceFeed.id)) {\n                        cb(priceFeed);\n                    }\n                }\n            }\n            else {\n                this.logger.warn(`Ignoring unsupported server response ${data.toString()}.`);\n            }\n        };\n        await this.wsClient.startWebSocket();\n    }\n    /**\n     * Closes connection websocket.\n     *\n     * At termination, the websocket should be closed to finish the\n     * process elegantly. It will automatically close when the connection\n     * is subscribed to no price feeds.\n     */\n    closeWebSocket() {\n        this.wsClient?.closeWebSocket();\n        this.wsClient = undefined;\n        this.priceFeedCallbacks.clear();\n    }\n}\nexports.PriceServiceConnection = PriceServiceConnection;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/PriceServiceConnection.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/ResillientWebSocket.js":
/*!*************************************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/ResillientWebSocket.js ***!
  \*************************************************************************************************************************************************************************************/
/***/ (function(__unused_webpack_module, exports, __webpack_require__) {

eval("\nvar __importDefault = (this && this.__importDefault) || function (mod) {\n    return (mod && mod.__esModule) ? mod : { \"default\": mod };\n};\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.ResilientWebSocket = void 0;\nconst isomorphic_ws_1 = __importDefault(__webpack_require__(/*! isomorphic-ws */ \"(rsc)/./node_modules/.pnpm/isomorphic-ws@4.0.1_ws@8.18.0_bufferutil@4.0.9_utf-8-validate@5.0.10_/node_modules/isomorphic-ws/node.js\"));\nconst PING_TIMEOUT_DURATION = 30000 + 3000; // It is 30s on the server and 3s is added for delays\n/**\n * This class wraps websocket to provide a resilient web socket client.\n *\n * It will reconnect if connection fails with exponential backoff. Also, in node, it will reconnect\n * if it receives no ping request from server within a while as indication of timeout (assuming\n * the server sends it regularly).\n *\n * This class also logs events if logger is given and by replacing onError method you can handle\n * connection errors yourself (e.g: do not retry and close the connection).\n */\nclass ResilientWebSocket {\n    endpoint;\n    wsClient;\n    wsUserClosed;\n    wsFailedAttempts;\n    pingTimeout;\n    logger;\n    onError;\n    onMessage;\n    onReconnect;\n    constructor(endpoint, logger) {\n        this.endpoint = endpoint;\n        this.logger = logger;\n        this.wsFailedAttempts = 0;\n        this.onError = (error) => {\n            this.logger?.error(error);\n        };\n        this.wsUserClosed = true;\n        this.onMessage = () => { };\n        this.onReconnect = () => { };\n    }\n    async send(data) {\n        this.logger?.info(`Sending ${data}`);\n        await this.waitForMaybeReadyWebSocket();\n        if (this.wsClient === undefined) {\n            this.logger?.error(\"Couldn't connect to the websocket server. Error callback is called.\");\n        }\n        else {\n            this.wsClient?.send(data);\n        }\n    }\n    async startWebSocket() {\n        if (this.wsClient !== undefined) {\n            return;\n        }\n        this.logger?.info(`Creating Web Socket client`);\n        this.wsClient = new isomorphic_ws_1.default(this.endpoint);\n        this.wsUserClosed = false;\n        this.wsClient.onopen = () => {\n            this.wsFailedAttempts = 0;\n            // Ping handler is undefined in browser side so heartbeat is disabled.\n            if (this.wsClient.on !== undefined) {\n                this.heartbeat();\n            }\n        };\n        this.wsClient.onerror = (event) => {\n            this.onError(event.error);\n        };\n        this.wsClient.onmessage = (event) => {\n            this.onMessage(event.data);\n        };\n        this.wsClient.onclose = async () => {\n            if (this.pingTimeout !== undefined) {\n                clearInterval(this.pingTimeout);\n            }\n            if (this.wsUserClosed === false) {\n                this.wsFailedAttempts += 1;\n                this.wsClient = undefined;\n                const waitTime = expoBackoff(this.wsFailedAttempts);\n                this.logger?.error(`Connection closed unexpectedly or because of timeout. Reconnecting after ${waitTime}ms.`);\n                await sleep(waitTime);\n                this.restartUnexpectedClosedWebsocket();\n            }\n            else {\n                this.logger?.info(\"The connection has been closed successfully.\");\n            }\n        };\n        if (this.wsClient.on !== undefined) {\n            // Ping handler is undefined in browser side\n            this.wsClient.on(\"ping\", this.heartbeat.bind(this));\n        }\n    }\n    /**\n     * Heartbeat is only enabled in node clients because they support handling\n     * ping-pong events.\n     *\n     * This approach only works when server constantly pings the clients which.\n     * Otherwise you might consider sending ping and acting on pong responses\n     * yourself.\n     */\n    heartbeat() {\n        this.logger?.info(\"Heartbeat\");\n        if (this.pingTimeout !== undefined) {\n            clearTimeout(this.pingTimeout);\n        }\n        this.pingTimeout = setTimeout(() => {\n            this.logger?.warn(`Connection timed out. Reconnecting...`);\n            this.wsClient?.terminate();\n            this.restartUnexpectedClosedWebsocket();\n        }, PING_TIMEOUT_DURATION);\n    }\n    async waitForMaybeReadyWebSocket() {\n        let waitedTime = 0;\n        while (this.wsClient !== undefined &&\n            this.wsClient.readyState !== this.wsClient.OPEN) {\n            if (waitedTime > 5000) {\n                this.wsClient.close();\n                return;\n            }\n            else {\n                waitedTime += 10;\n                await sleep(10);\n            }\n        }\n    }\n    async restartUnexpectedClosedWebsocket() {\n        if (this.wsUserClosed === true) {\n            return;\n        }\n        await this.startWebSocket();\n        await this.waitForMaybeReadyWebSocket();\n        if (this.wsClient === undefined) {\n            this.logger?.error(\"Couldn't reconnect to websocket. Error callback is called.\");\n            return;\n        }\n        this.onReconnect();\n    }\n    closeWebSocket() {\n        if (this.wsClient !== undefined) {\n            const client = this.wsClient;\n            this.wsClient = undefined;\n            client.close();\n        }\n        this.wsUserClosed = true;\n    }\n}\nexports.ResilientWebSocket = ResilientWebSocket;\nasync function sleep(ms) {\n    return new Promise((resolve) => setTimeout(resolve, ms));\n}\nfunction expoBackoff(attempts) {\n    return 2 ** attempts * 100;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/ResillientWebSocket.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/index.js":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/index.js ***!
  \***********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports, __webpack_require__) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.parseAccumulatorUpdateData = exports.isAccumulatorUpdateData = exports.Price = exports.PriceFeed = exports.PriceFeedMetadata = exports.PriceServiceConnection = void 0;\nvar PriceServiceConnection_1 = __webpack_require__(/*! ./PriceServiceConnection */ \"(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/PriceServiceConnection.js\");\nObject.defineProperty(exports, \"PriceServiceConnection\", ({ enumerable: true, get: function () { return PriceServiceConnection_1.PriceServiceConnection; } }));\nvar price_service_sdk_1 = __webpack_require__(/*! @pythnetwork/price-service-sdk */ \"(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-sdk@1.8.0/node_modules/@pythnetwork/price-service-sdk/lib/index.js\");\nObject.defineProperty(exports, \"PriceFeedMetadata\", ({ enumerable: true, get: function () { return price_service_sdk_1.PriceFeedMetadata; } }));\nObject.defineProperty(exports, \"PriceFeed\", ({ enumerable: true, get: function () { return price_service_sdk_1.PriceFeed; } }));\nObject.defineProperty(exports, \"Price\", ({ enumerable: true, get: function () { return price_service_sdk_1.Price; } }));\nObject.defineProperty(exports, \"isAccumulatorUpdateData\", ({ enumerable: true, get: function () { return price_service_sdk_1.isAccumulatorUpdateData; } }));\nObject.defineProperty(exports, \"parseAccumulatorUpdateData\", ({ enumerable: true, get: function () { return price_service_sdk_1.parseAccumulatorUpdateData; } }));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHB5dGhuZXR3b3JrK3ByaWNlLXNlcnZpY2UtY2xpZW50QDEuOS4wX2J1ZmZlcnV0aWxANC4wLjlfdXRmLTgtdmFsaWRhdGVANS4wLjEwL25vZGVfbW9kdWxlcy9AcHl0aG5ldHdvcmsvcHJpY2Utc2VydmljZS1jbGllbnQvbGliL2luZGV4LmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELGtDQUFrQyxHQUFHLCtCQUErQixHQUFHLGFBQWEsR0FBRyxpQkFBaUIsR0FBRyx5QkFBeUIsR0FBRyw4QkFBOEI7QUFDckssK0JBQStCLG1CQUFPLENBQUMsd05BQTBCO0FBQ2pFLDBEQUF5RCxFQUFFLHFDQUFxQywyREFBMkQsRUFBQztBQUM1SiwwQkFBMEIsbUJBQU8sQ0FBQyxnS0FBZ0M7QUFDbEUscURBQW9ELEVBQUUscUNBQXFDLGlEQUFpRCxFQUFDO0FBQzdJLDZDQUE0QyxFQUFFLHFDQUFxQyx5Q0FBeUMsRUFBQztBQUM3SCx5Q0FBd0MsRUFBRSxxQ0FBcUMscUNBQXFDLEVBQUM7QUFDckgsMkRBQTBELEVBQUUscUNBQXFDLHVEQUF1RCxFQUFDO0FBQ3pKLDhEQUE2RCxFQUFFLHFDQUFxQywwREFBMEQsRUFBQyIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL0BweXRobmV0d29yaytwcmljZS1zZXJ2aWNlLWNsaWVudEAxLjkuMF9idWZmZXJ1dGlsQDQuMC45X3V0Zi04LXZhbGlkYXRlQDUuMC4xMC9ub2RlX21vZHVsZXMvQHB5dGhuZXR3b3JrL3ByaWNlLXNlcnZpY2UtY2xpZW50L2xpYi9pbmRleC5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucGFyc2VBY2N1bXVsYXRvclVwZGF0ZURhdGEgPSBleHBvcnRzLmlzQWNjdW11bGF0b3JVcGRhdGVEYXRhID0gZXhwb3J0cy5QcmljZSA9IGV4cG9ydHMuUHJpY2VGZWVkID0gZXhwb3J0cy5QcmljZUZlZWRNZXRhZGF0YSA9IGV4cG9ydHMuUHJpY2VTZXJ2aWNlQ29ubmVjdGlvbiA9IHZvaWQgMDtcbnZhciBQcmljZVNlcnZpY2VDb25uZWN0aW9uXzEgPSByZXF1aXJlKFwiLi9QcmljZVNlcnZpY2VDb25uZWN0aW9uXCIpO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiUHJpY2VTZXJ2aWNlQ29ubmVjdGlvblwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gUHJpY2VTZXJ2aWNlQ29ubmVjdGlvbl8xLlByaWNlU2VydmljZUNvbm5lY3Rpb247IH0gfSk7XG52YXIgcHJpY2Vfc2VydmljZV9zZGtfMSA9IHJlcXVpcmUoXCJAcHl0aG5ldHdvcmsvcHJpY2Utc2VydmljZS1zZGtcIik7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcmljZUZlZWRNZXRhZGF0YVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJpY2Vfc2VydmljZV9zZGtfMS5QcmljZUZlZWRNZXRhZGF0YTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIlByaWNlRmVlZFwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJpY2Vfc2VydmljZV9zZGtfMS5QcmljZUZlZWQ7IH0gfSk7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJQcmljZVwiLCB7IGVudW1lcmFibGU6IHRydWUsIGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gcHJpY2Vfc2VydmljZV9zZGtfMS5QcmljZTsgfSB9KTtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcImlzQWNjdW11bGF0b3JVcGRhdGVEYXRhXCIsIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBmdW5jdGlvbiAoKSB7IHJldHVybiBwcmljZV9zZXJ2aWNlX3Nka18xLmlzQWNjdW11bGF0b3JVcGRhdGVEYXRhOyB9IH0pO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwicGFyc2VBY2N1bXVsYXRvclVwZGF0ZURhdGFcIiwgeyBlbnVtZXJhYmxlOiB0cnVlLCBnZXQ6IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHByaWNlX3NlcnZpY2Vfc2RrXzEucGFyc2VBY2N1bXVsYXRvclVwZGF0ZURhdGE7IH0gfSk7XG4iXSwibmFtZXMiOltdLCJpZ25vcmVMaXN0IjpbMF0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/index.js\n");

/***/ }),

/***/ "(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/utils.js":
/*!***********************************************************************************************************************************************************************!*\
  !*** ./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/utils.js ***!
  \***********************************************************************************************************************************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.removeLeading0xIfExists = exports.makeWebsocketUrl = void 0;\n/**\n * Convert http(s) endpoint to ws(s) endpoint.\n *\n * @param endpoint Http(s) protocol endpoint\n * @returns Ws(s) protocol endpoint of the same address\n */\nfunction makeWebsocketUrl(endpoint) {\n    const url = new URL(\"ws\", endpoint);\n    const useHttps = url.protocol === \"https:\";\n    url.protocol = useHttps ? \"wss:\" : \"ws:\";\n    return url.toString();\n}\nexports.makeWebsocketUrl = makeWebsocketUrl;\nfunction removeLeading0xIfExists(id) {\n    if (id.startsWith(\"0x\")) {\n        return id.substring(2);\n    }\n    else {\n        return id;\n    }\n}\nexports.removeLeading0xIfExists = removeLeading0xIfExists;\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHJzYykvLi9ub2RlX21vZHVsZXMvLnBucG0vQHB5dGhuZXR3b3JrK3ByaWNlLXNlcnZpY2UtY2xpZW50QDEuOS4wX2J1ZmZlcnV0aWxANC4wLjlfdXRmLTgtdmFsaWRhdGVANS4wLjEwL25vZGVfbW9kdWxlcy9AcHl0aG5ldHdvcmsvcHJpY2Utc2VydmljZS1jbGllbnQvbGliL3V0aWxzLmpzIiwibWFwcGluZ3MiOiJBQUFhO0FBQ2IsOENBQTZDLEVBQUUsYUFBYSxFQUFDO0FBQzdELCtCQUErQixHQUFHLHdCQUF3QjtBQUMxRDtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSx3QkFBd0I7QUFDeEI7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLCtCQUErQiIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3Qvbm9kZV9tb2R1bGVzLy5wbnBtL0BweXRobmV0d29yaytwcmljZS1zZXJ2aWNlLWNsaWVudEAxLjkuMF9idWZmZXJ1dGlsQDQuMC45X3V0Zi04LXZhbGlkYXRlQDUuMC4xMC9ub2RlX21vZHVsZXMvQHB5dGhuZXR3b3JrL3ByaWNlLXNlcnZpY2UtY2xpZW50L2xpYi91dGlscy5qcyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBzdHJpY3RcIjtcbk9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBcIl9fZXNNb2R1bGVcIiwgeyB2YWx1ZTogdHJ1ZSB9KTtcbmV4cG9ydHMucmVtb3ZlTGVhZGluZzB4SWZFeGlzdHMgPSBleHBvcnRzLm1ha2VXZWJzb2NrZXRVcmwgPSB2b2lkIDA7XG4vKipcbiAqIENvbnZlcnQgaHR0cChzKSBlbmRwb2ludCB0byB3cyhzKSBlbmRwb2ludC5cbiAqXG4gKiBAcGFyYW0gZW5kcG9pbnQgSHR0cChzKSBwcm90b2NvbCBlbmRwb2ludFxuICogQHJldHVybnMgV3MocykgcHJvdG9jb2wgZW5kcG9pbnQgb2YgdGhlIHNhbWUgYWRkcmVzc1xuICovXG5mdW5jdGlvbiBtYWtlV2Vic29ja2V0VXJsKGVuZHBvaW50KSB7XG4gICAgY29uc3QgdXJsID0gbmV3IFVSTChcIndzXCIsIGVuZHBvaW50KTtcbiAgICBjb25zdCB1c2VIdHRwcyA9IHVybC5wcm90b2NvbCA9PT0gXCJodHRwczpcIjtcbiAgICB1cmwucHJvdG9jb2wgPSB1c2VIdHRwcyA/IFwid3NzOlwiIDogXCJ3czpcIjtcbiAgICByZXR1cm4gdXJsLnRvU3RyaW5nKCk7XG59XG5leHBvcnRzLm1ha2VXZWJzb2NrZXRVcmwgPSBtYWtlV2Vic29ja2V0VXJsO1xuZnVuY3Rpb24gcmVtb3ZlTGVhZGluZzB4SWZFeGlzdHMoaWQpIHtcbiAgICBpZiAoaWQuc3RhcnRzV2l0aChcIjB4XCIpKSB7XG4gICAgICAgIHJldHVybiBpZC5zdWJzdHJpbmcoMik7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICByZXR1cm4gaWQ7XG4gICAgfVxufVxuZXhwb3J0cy5yZW1vdmVMZWFkaW5nMHhJZkV4aXN0cyA9IHJlbW92ZUxlYWRpbmcweElmRXhpc3RzO1xuIl0sIm5hbWVzIjpbXSwiaWdub3JlTGlzdCI6WzBdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(rsc)/./node_modules/.pnpm/@pythnetwork+price-service-client@1.9.0_bufferutil@4.0.9_utf-8-validate@5.0.10/node_modules/@pythnetwork/price-service-client/lib/utils.js\n");

/***/ })

};
;