"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/page",{

/***/ "(app-pages-browser)/./app/utils/pokeUtils.ts":
/*!********************************!*\
  !*** ./app/utils/pokeUtils.ts ***!
  \********************************/
/***/ ((module, __webpack_exports__, __webpack_require__) => {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   checkPokeCoinBalance: () => (/* binding */ checkPokeCoinBalance),\n/* harmony export */   sendPokeCoin: () => (/* binding */ sendPokeCoin)\n/* harmony export */ });\n/* harmony import */ var aptos__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! aptos */ \"(app-pages-browser)/./node_modules/.pnpm/aptos@1.21.0/node_modules/aptos/dist/index.mjs\");\n/* __next_internal_client_entry_do_not_use__ checkPokeCoinBalance,sendPokeCoin auto */ \n// PokeCoin module address\nconst POKECOIN_ADDRESS = \"0x066ebb982c492c0d5b1f2b8089756f83fd31d4516cd9a1fc0b63b4961e4eeafd\";\n// Recipient address for PokeCoin payments\nconst RECIPIENT_ADDRESS = \"0xe25731e7c9f3b3ed16ea39c0d2b575d7d10c854bb113efdf6cb80b6c3d6e432e\";\n// Use mainnet GraphQL endpoint\nconst GRAPHQL_URL = \"https://indexer.mainnet.aptoslabs.com/v1/graphql\";\n/**\n * Check if a wallet has enough PokeCoin balance using GraphQL\n */ async function checkPokeCoinBalance(walletAddress) {\n    try {\n        console.log(\"Checking PokeCoin balance for wallet:\", walletAddress);\n        // GraphQL query to get fungible asset balances\n        const query = \"\\n      query GetFungibleAssetBalances($address: String) {\\n        current_fungible_asset_balances(\\n          where: {owner_address: {_eq: $address}},\\n          limit: 100,\\n          order_by: {amount: desc}\\n        ) {\\n          asset_type\\n          amount\\n          __typename\\n        }\\n      }\\n    \";\n        // Execute the GraphQL query\n        const response = await fetch(GRAPHQL_URL, {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n                query,\n                variables: {\n                    address: walletAddress\n                }\n            })\n        });\n        if (!response.ok) {\n            throw new Error(\"GraphQL request failed: \".concat(response.status));\n        }\n        const result = await response.json();\n        console.log(\"GraphQL response:\", result);\n        if (result.errors) {\n            throw new Error(\"GraphQL errors: \".concat(JSON.stringify(result.errors)));\n        }\n        // Find PokeCoin in the balances\n        const balances = result.data.current_fungible_asset_balances;\n        console.log(\"Found \".concat(balances.length, \" fungible asset balances\"));\n        for (const balance of balances){\n            console.log(\"Asset: \".concat(balance.asset_type, \", Amount: \").concat(balance.amount));\n            // Check if this is PokeCoin by looking for the address in the asset_type\n            if (balance.asset_type.includes(POKECOIN_ADDRESS)) {\n                console.log(\"Found PokeCoin balance:\", balance.amount);\n                return parseInt(balance.amount);\n            }\n        }\n        console.log(\"No PokeCoin balance found\");\n        return 0;\n    } catch (error) {\n        console.error(\"Error checking PokeCoin balance:\", error);\n        return 0;\n    }\n}\n/**\n * Send 1 PokeCoin from the user's wallet to the recipient address\n */ async function sendPokeCoin(wallet) {\n    try {\n        if (!wallet) {\n            throw new Error(\"Wallet not connected\");\n        }\n        console.log(\"Attempting to send 1 PokeCoin to \".concat(RECIPIENT_ADDRESS));\n        // Create a transaction payload to transfer 1 PokeCoin\n        // For fungible assets, we need to use the appropriate transfer function\n        const payload = {\n            type: \"entry_function_payload\",\n            function: \"0x1::fungible_asset::transfer\",\n            type_arguments: [],\n            arguments: [\n                POKECOIN_ADDRESS,\n                \"1\",\n                RECIPIENT_ADDRESS // Recipient address\n            ]\n        };\n        console.log(\"Submitting transaction with payload:\", payload);\n        // Sign and submit the transaction\n        const transaction = await wallet.signAndSubmitTransaction(payload);\n        console.log(\"Transaction submitted:\", transaction);\n        // Wait for transaction confirmation\n        const client = new aptos__WEBPACK_IMPORTED_MODULE_0__.Types.Client(\"https://fullnode.mainnet.aptoslabs.com/v1\");\n        await client.waitForTransaction(transaction.hash);\n        console.log(\"Successfully sent 1 PokeCoin\", transaction.hash);\n        return true;\n    } catch (error) {\n        console.error(\"Error sending PokeCoin:\", error);\n        // For development/testing, return success anyway\n        if (true) {\n            console.log(\"Development mode: Returning success despite error\");\n            return true;\n        }\n        return false;\n    }\n}\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL2FwcC91dGlscy9wb2tlVXRpbHMudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7O3VGQUU4QjtBQUU5QiwwQkFBMEI7QUFDMUIsTUFBTUMsbUJBQW1CO0FBRXpCLDBDQUEwQztBQUMxQyxNQUFNQyxvQkFBb0I7QUFFMUIsK0JBQStCO0FBQy9CLE1BQU1DLGNBQWM7QUFFcEI7O0NBRUMsR0FDTSxlQUFlQyxxQkFBcUJDLGFBQXFCO0lBQzlELElBQUk7UUFDRkMsUUFBUUMsR0FBRyxDQUFDLHlDQUF5Q0Y7UUFFckQsK0NBQStDO1FBQy9DLE1BQU1HLFFBQVM7UUFjZiw0QkFBNEI7UUFDNUIsTUFBTUMsV0FBVyxNQUFNQyxNQUFNUCxhQUFhO1lBQ3hDUSxRQUFRO1lBQ1JDLFNBQVM7Z0JBQ1AsZ0JBQWdCO1lBQ2xCO1lBQ0FDLE1BQU1DLEtBQUtDLFNBQVMsQ0FBQztnQkFDbkJQO2dCQUNBUSxXQUFXO29CQUNUQyxTQUFTWjtnQkFDWDtZQUNGO1FBQ0Y7UUFFQSxJQUFJLENBQUNJLFNBQVNTLEVBQUUsRUFBRTtZQUNoQixNQUFNLElBQUlDLE1BQU0sMkJBQTJDLE9BQWhCVixTQUFTVyxNQUFNO1FBQzVEO1FBRUEsTUFBTUMsU0FBUyxNQUFNWixTQUFTYSxJQUFJO1FBQ2xDaEIsUUFBUUMsR0FBRyxDQUFDLHFCQUFxQmM7UUFFakMsSUFBSUEsT0FBT0UsTUFBTSxFQUFFO1lBQ2pCLE1BQU0sSUFBSUosTUFBTSxtQkFBaUQsT0FBOUJMLEtBQUtDLFNBQVMsQ0FBQ00sT0FBT0UsTUFBTTtRQUNqRTtRQUVBLGdDQUFnQztRQUNoQyxNQUFNQyxXQUFXSCxPQUFPSSxJQUFJLENBQUNDLCtCQUErQjtRQUM1RHBCLFFBQVFDLEdBQUcsQ0FBQyxTQUF5QixPQUFoQmlCLFNBQVNHLE1BQU0sRUFBQztRQUVyQyxLQUFLLE1BQU1DLFdBQVdKLFNBQVU7WUFDOUJsQixRQUFRQyxHQUFHLENBQUMsVUFBeUNxQixPQUEvQkEsUUFBUUMsVUFBVSxFQUFDLGNBQTJCLE9BQWZELFFBQVFFLE1BQU07WUFFbkUseUVBQXlFO1lBQ3pFLElBQUlGLFFBQVFDLFVBQVUsQ0FBQ0UsUUFBUSxDQUFDOUIsbUJBQW1CO2dCQUNqREssUUFBUUMsR0FBRyxDQUFDLDJCQUEyQnFCLFFBQVFFLE1BQU07Z0JBQ3JELE9BQU9FLFNBQVNKLFFBQVFFLE1BQU07WUFDaEM7UUFDRjtRQUVBeEIsUUFBUUMsR0FBRyxDQUFDO1FBQ1osT0FBTztJQUNULEVBQUUsT0FBTzBCLE9BQU87UUFDZDNCLFFBQVEyQixLQUFLLENBQUMsb0NBQW9DQTtRQUNsRCxPQUFPO0lBQ1Q7QUFDRjtBQUVBOztDQUVDLEdBQ00sZUFBZUMsYUFBYUMsTUFBVztJQUM1QyxJQUFJO1FBQ0YsSUFBSSxDQUFDQSxRQUFRO1lBQ1gsTUFBTSxJQUFJaEIsTUFBTTtRQUNsQjtRQUVBYixRQUFRQyxHQUFHLENBQUMsb0NBQXNELE9BQWxCTDtRQUVoRCxzREFBc0Q7UUFDdEQsd0VBQXdFO1FBQ3hFLE1BQU1rQyxVQUFVO1lBQ2RDLE1BQU07WUFDTkMsVUFBVztZQUNYQyxnQkFBZ0IsRUFBRTtZQUNsQkMsV0FBVztnQkFDVHZDO2dCQUNBO2dCQUNBQyxrQkFBa0Isb0JBQW9CO2FBQ3ZDO1FBQ0g7UUFFQUksUUFBUUMsR0FBRyxDQUFDLHdDQUF3QzZCO1FBRXBELGtDQUFrQztRQUNsQyxNQUFNSyxjQUFjLE1BQU1OLE9BQU9PLHdCQUF3QixDQUFDTjtRQUUxRDlCLFFBQVFDLEdBQUcsQ0FBQywwQkFBMEJrQztRQUV0QyxvQ0FBb0M7UUFDcEMsTUFBTUUsU0FBUyxJQUFJM0Msd0NBQUtBLENBQUM0QyxNQUFNLENBQUM7UUFDaEMsTUFBTUQsT0FBT0Usa0JBQWtCLENBQUNKLFlBQVlLLElBQUk7UUFFaER4QyxRQUFRQyxHQUFHLENBQUMsZ0NBQWdDa0MsWUFBWUssSUFBSTtRQUM1RCxPQUFPO0lBQ1QsRUFBRSxPQUFPYixPQUFPO1FBQ2QzQixRQUFRMkIsS0FBSyxDQUFDLDJCQUEyQkE7UUFFekMsaURBQWlEO1FBQ2pELElBQUljLElBQXNDLEVBQUU7WUFDMUN6QyxRQUFRQyxHQUFHLENBQUM7WUFDWixPQUFPO1FBQ1Q7UUFFQSxPQUFPO0lBQ1Q7QUFDRiIsInNvdXJjZXMiOlsiL1VzZXJzL2Z1amlhd2FuZy9EZXNrdG9wL2NoYXRib3QvYXBwL3V0aWxzL3Bva2VVdGlscy50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJcInVzZSBjbGllbnRcIjtcblxuaW1wb3J0IHsgVHlwZXMgfSBmcm9tIFwiYXB0b3NcIjtcblxuLy8gUG9rZUNvaW4gbW9kdWxlIGFkZHJlc3NcbmNvbnN0IFBPS0VDT0lOX0FERFJFU1MgPSBcIjB4MDY2ZWJiOTgyYzQ5MmMwZDViMWYyYjgwODk3NTZmODNmZDMxZDQ1MTZjZDlhMWZjMGI2M2I0OTYxZTRlZWFmZFwiO1xuXG4vLyBSZWNpcGllbnQgYWRkcmVzcyBmb3IgUG9rZUNvaW4gcGF5bWVudHNcbmNvbnN0IFJFQ0lQSUVOVF9BRERSRVNTID0gXCIweGUyNTczMWU3YzlmM2IzZWQxNmVhMzljMGQyYjU3NWQ3ZDEwYzg1NGJiMTEzZWZkZjZjYjgwYjZjM2Q2ZTQzMmVcIjtcblxuLy8gVXNlIG1haW5uZXQgR3JhcGhRTCBlbmRwb2ludFxuY29uc3QgR1JBUEhRTF9VUkwgPSBcImh0dHBzOi8vaW5kZXhlci5tYWlubmV0LmFwdG9zbGFicy5jb20vdjEvZ3JhcGhxbFwiO1xuXG4vKipcbiAqIENoZWNrIGlmIGEgd2FsbGV0IGhhcyBlbm91Z2ggUG9rZUNvaW4gYmFsYW5jZSB1c2luZyBHcmFwaFFMXG4gKi9cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiBjaGVja1Bva2VDb2luQmFsYW5jZSh3YWxsZXRBZGRyZXNzOiBzdHJpbmcpOiBQcm9taXNlPG51bWJlcj4ge1xuICB0cnkge1xuICAgIGNvbnNvbGUubG9nKFwiQ2hlY2tpbmcgUG9rZUNvaW4gYmFsYW5jZSBmb3Igd2FsbGV0OlwiLCB3YWxsZXRBZGRyZXNzKTtcbiAgICBcbiAgICAvLyBHcmFwaFFMIHF1ZXJ5IHRvIGdldCBmdW5naWJsZSBhc3NldCBiYWxhbmNlc1xuICAgIGNvbnN0IHF1ZXJ5ID0gYFxuICAgICAgcXVlcnkgR2V0RnVuZ2libGVBc3NldEJhbGFuY2VzKCRhZGRyZXNzOiBTdHJpbmcpIHtcbiAgICAgICAgY3VycmVudF9mdW5naWJsZV9hc3NldF9iYWxhbmNlcyhcbiAgICAgICAgICB3aGVyZToge293bmVyX2FkZHJlc3M6IHtfZXE6ICRhZGRyZXNzfX0sXG4gICAgICAgICAgbGltaXQ6IDEwMCxcbiAgICAgICAgICBvcmRlcl9ieToge2Ftb3VudDogZGVzY31cbiAgICAgICAgKSB7XG4gICAgICAgICAgYXNzZXRfdHlwZVxuICAgICAgICAgIGFtb3VudFxuICAgICAgICAgIF9fdHlwZW5hbWVcbiAgICAgICAgfVxuICAgICAgfVxuICAgIGA7XG4gICAgXG4gICAgLy8gRXhlY3V0ZSB0aGUgR3JhcGhRTCBxdWVyeVxuICAgIGNvbnN0IHJlc3BvbnNlID0gYXdhaXQgZmV0Y2goR1JBUEhRTF9VUkwsIHtcbiAgICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgICAgaGVhZGVyczoge1xuICAgICAgICAnQ29udGVudC1UeXBlJzogJ2FwcGxpY2F0aW9uL2pzb24nLFxuICAgICAgfSxcbiAgICAgIGJvZHk6IEpTT04uc3RyaW5naWZ5KHtcbiAgICAgICAgcXVlcnksXG4gICAgICAgIHZhcmlhYmxlczoge1xuICAgICAgICAgIGFkZHJlc3M6IHdhbGxldEFkZHJlc3MsXG4gICAgICAgIH0sXG4gICAgICB9KSxcbiAgICB9KTtcbiAgICBcbiAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEdyYXBoUUwgcmVxdWVzdCBmYWlsZWQ6ICR7cmVzcG9uc2Uuc3RhdHVzfWApO1xuICAgIH1cbiAgICBcbiAgICBjb25zdCByZXN1bHQgPSBhd2FpdCByZXNwb25zZS5qc29uKCk7XG4gICAgY29uc29sZS5sb2coXCJHcmFwaFFMIHJlc3BvbnNlOlwiLCByZXN1bHQpO1xuICAgIFxuICAgIGlmIChyZXN1bHQuZXJyb3JzKSB7XG4gICAgICB0aHJvdyBuZXcgRXJyb3IoYEdyYXBoUUwgZXJyb3JzOiAke0pTT04uc3RyaW5naWZ5KHJlc3VsdC5lcnJvcnMpfWApO1xuICAgIH1cbiAgICBcbiAgICAvLyBGaW5kIFBva2VDb2luIGluIHRoZSBiYWxhbmNlc1xuICAgIGNvbnN0IGJhbGFuY2VzID0gcmVzdWx0LmRhdGEuY3VycmVudF9mdW5naWJsZV9hc3NldF9iYWxhbmNlcztcbiAgICBjb25zb2xlLmxvZyhgRm91bmQgJHtiYWxhbmNlcy5sZW5ndGh9IGZ1bmdpYmxlIGFzc2V0IGJhbGFuY2VzYCk7XG4gICAgXG4gICAgZm9yIChjb25zdCBiYWxhbmNlIG9mIGJhbGFuY2VzKSB7XG4gICAgICBjb25zb2xlLmxvZyhgQXNzZXQ6ICR7YmFsYW5jZS5hc3NldF90eXBlfSwgQW1vdW50OiAke2JhbGFuY2UuYW1vdW50fWApO1xuICAgICAgXG4gICAgICAvLyBDaGVjayBpZiB0aGlzIGlzIFBva2VDb2luIGJ5IGxvb2tpbmcgZm9yIHRoZSBhZGRyZXNzIGluIHRoZSBhc3NldF90eXBlXG4gICAgICBpZiAoYmFsYW5jZS5hc3NldF90eXBlLmluY2x1ZGVzKFBPS0VDT0lOX0FERFJFU1MpKSB7XG4gICAgICAgIGNvbnNvbGUubG9nKFwiRm91bmQgUG9rZUNvaW4gYmFsYW5jZTpcIiwgYmFsYW5jZS5hbW91bnQpO1xuICAgICAgICByZXR1cm4gcGFyc2VJbnQoYmFsYW5jZS5hbW91bnQpO1xuICAgICAgfVxuICAgIH1cbiAgICBcbiAgICBjb25zb2xlLmxvZyhcIk5vIFBva2VDb2luIGJhbGFuY2UgZm91bmRcIik7XG4gICAgcmV0dXJuIDA7XG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS5lcnJvcihcIkVycm9yIGNoZWNraW5nIFBva2VDb2luIGJhbGFuY2U6XCIsIGVycm9yKTtcbiAgICByZXR1cm4gMDtcbiAgfVxufVxuXG4vKipcbiAqIFNlbmQgMSBQb2tlQ29pbiBmcm9tIHRoZSB1c2VyJ3Mgd2FsbGV0IHRvIHRoZSByZWNpcGllbnQgYWRkcmVzc1xuICovXG5leHBvcnQgYXN5bmMgZnVuY3Rpb24gc2VuZFBva2VDb2luKHdhbGxldDogYW55KTogUHJvbWlzZTxib29sZWFuPiB7XG4gIHRyeSB7XG4gICAgaWYgKCF3YWxsZXQpIHtcbiAgICAgIHRocm93IG5ldyBFcnJvcihcIldhbGxldCBub3QgY29ubmVjdGVkXCIpO1xuICAgIH1cbiAgICBcbiAgICBjb25zb2xlLmxvZyhgQXR0ZW1wdGluZyB0byBzZW5kIDEgUG9rZUNvaW4gdG8gJHtSRUNJUElFTlRfQUREUkVTU31gKTtcbiAgICBcbiAgICAvLyBDcmVhdGUgYSB0cmFuc2FjdGlvbiBwYXlsb2FkIHRvIHRyYW5zZmVyIDEgUG9rZUNvaW5cbiAgICAvLyBGb3IgZnVuZ2libGUgYXNzZXRzLCB3ZSBuZWVkIHRvIHVzZSB0aGUgYXBwcm9wcmlhdGUgdHJhbnNmZXIgZnVuY3Rpb25cbiAgICBjb25zdCBwYXlsb2FkID0ge1xuICAgICAgdHlwZTogXCJlbnRyeV9mdW5jdGlvbl9wYXlsb2FkXCIsXG4gICAgICBmdW5jdGlvbjogYDB4MTo6ZnVuZ2libGVfYXNzZXQ6OnRyYW5zZmVyYCxcbiAgICAgIHR5cGVfYXJndW1lbnRzOiBbXSxcbiAgICAgIGFyZ3VtZW50czogW1xuICAgICAgICBQT0tFQ09JTl9BRERSRVNTLCAvLyBBc3NldCBtZXRhZGF0YVxuICAgICAgICBcIjFcIiwgICAgICAgICAgICAgIC8vIEFtb3VudCB0byB0cmFuc2ZlclxuICAgICAgICBSRUNJUElFTlRfQUREUkVTUyAvLyBSZWNpcGllbnQgYWRkcmVzc1xuICAgICAgXVxuICAgIH07XG4gICAgXG4gICAgY29uc29sZS5sb2coXCJTdWJtaXR0aW5nIHRyYW5zYWN0aW9uIHdpdGggcGF5bG9hZDpcIiwgcGF5bG9hZCk7XG4gICAgXG4gICAgLy8gU2lnbiBhbmQgc3VibWl0IHRoZSB0cmFuc2FjdGlvblxuICAgIGNvbnN0IHRyYW5zYWN0aW9uID0gYXdhaXQgd2FsbGV0LnNpZ25BbmRTdWJtaXRUcmFuc2FjdGlvbihwYXlsb2FkKTtcbiAgICBcbiAgICBjb25zb2xlLmxvZyhcIlRyYW5zYWN0aW9uIHN1Ym1pdHRlZDpcIiwgdHJhbnNhY3Rpb24pO1xuICAgIFxuICAgIC8vIFdhaXQgZm9yIHRyYW5zYWN0aW9uIGNvbmZpcm1hdGlvblxuICAgIGNvbnN0IGNsaWVudCA9IG5ldyBUeXBlcy5DbGllbnQoXCJodHRwczovL2Z1bGxub2RlLm1haW5uZXQuYXB0b3NsYWJzLmNvbS92MVwiKTtcbiAgICBhd2FpdCBjbGllbnQud2FpdEZvclRyYW5zYWN0aW9uKHRyYW5zYWN0aW9uLmhhc2gpO1xuICAgIFxuICAgIGNvbnNvbGUubG9nKFwiU3VjY2Vzc2Z1bGx5IHNlbnQgMSBQb2tlQ29pblwiLCB0cmFuc2FjdGlvbi5oYXNoKTtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfSBjYXRjaCAoZXJyb3IpIHtcbiAgICBjb25zb2xlLmVycm9yKFwiRXJyb3Igc2VuZGluZyBQb2tlQ29pbjpcIiwgZXJyb3IpO1xuICAgIFxuICAgIC8vIEZvciBkZXZlbG9wbWVudC90ZXN0aW5nLCByZXR1cm4gc3VjY2VzcyBhbnl3YXlcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdkZXZlbG9wbWVudCcpIHtcbiAgICAgIGNvbnNvbGUubG9nKFwiRGV2ZWxvcG1lbnQgbW9kZTogUmV0dXJuaW5nIHN1Y2Nlc3MgZGVzcGl0ZSBlcnJvclwiKTtcbiAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cbn0gIl0sIm5hbWVzIjpbIlR5cGVzIiwiUE9LRUNPSU5fQUREUkVTUyIsIlJFQ0lQSUVOVF9BRERSRVNTIiwiR1JBUEhRTF9VUkwiLCJjaGVja1Bva2VDb2luQmFsYW5jZSIsIndhbGxldEFkZHJlc3MiLCJjb25zb2xlIiwibG9nIiwicXVlcnkiLCJyZXNwb25zZSIsImZldGNoIiwibWV0aG9kIiwiaGVhZGVycyIsImJvZHkiLCJKU09OIiwic3RyaW5naWZ5IiwidmFyaWFibGVzIiwiYWRkcmVzcyIsIm9rIiwiRXJyb3IiLCJzdGF0dXMiLCJyZXN1bHQiLCJqc29uIiwiZXJyb3JzIiwiYmFsYW5jZXMiLCJkYXRhIiwiY3VycmVudF9mdW5naWJsZV9hc3NldF9iYWxhbmNlcyIsImxlbmd0aCIsImJhbGFuY2UiLCJhc3NldF90eXBlIiwiYW1vdW50IiwiaW5jbHVkZXMiLCJwYXJzZUludCIsImVycm9yIiwic2VuZFBva2VDb2luIiwid2FsbGV0IiwicGF5bG9hZCIsInR5cGUiLCJmdW5jdGlvbiIsInR5cGVfYXJndW1lbnRzIiwiYXJndW1lbnRzIiwidHJhbnNhY3Rpb24iLCJzaWduQW5kU3VibWl0VHJhbnNhY3Rpb24iLCJjbGllbnQiLCJDbGllbnQiLCJ3YWl0Rm9yVHJhbnNhY3Rpb24iLCJoYXNoIiwicHJvY2VzcyJdLCJpZ25vcmVMaXN0IjpbXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(app-pages-browser)/./app/utils/pokeUtils.ts\n"));

/***/ })

});